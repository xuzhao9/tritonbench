{
    "aten._foreach_pow.ScalarAndTensor": [
        {
            "count": 1,
            "inputs": "((0.9, [T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32)]), {})"
        },
        {
            "count": 1,
            "inputs": "((0.999, [T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32)]), {})"
        }
    ],
    "aten._foreach_sqrt.default": [
        {
            "count": 1,
            "inputs": "(([T([8008, 2560], f32), T([128, 2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560], f32)],), {})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([512, 8008], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([512, 8008], f32), T([512, 8008], f32), 1, f32), {})"
        }
    ],
    "aten._softmax.default": [
        {
            "count": 24,
            "inputs": "((T([128, 128, 128], f32), -1, False), {})"
        }
    ],
    "aten._softmax_backward_data.default": [
        {
            "count": 24,
            "inputs": "((T([128, 128, 128], f32), T([128, 128, 128], f32), -1, f32), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 72,
            "inputs": "((T([4, 128, 32, 80], f32), [4, 128, 2560]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 8008], f32), [4, 128, 8008]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 32, 128, 80], f32), [128, 128, 80]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 128, 2560], f32), [512, 2560]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 1,
            "inputs": "((T([128], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 128, 2560], f32), T([128, 2560], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 32, 128, 128], f32), T([4, 1, 128, 128], f32, stride=(0, 16384, 128, 1))), {})"
        },
        {
            "count": 144,
            "inputs": "((T([4, 128, 2560], f32), T([4, 128, 2560], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8008, 2560], f32), T([8008, 2560], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 96,
            "inputs": "((T([2560], f32), T([512, 2560], f32), T([2560, 2560], f32, stride=(1, 2560))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([10240], f32), T([512, 2560], f32), T([2560, 10240], f32, stride=(1, 2560))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([2560], f32), T([512, 10240], f32), T([10240, 2560], f32, stride=(1, 10240))), {})"
        }
    ],
    "aten.bmm.default": [
        {
            "count": 48,
            "inputs": "((T([128, 128, 80], f32), T([128, 80, 128], f32, stride=(10240, 1, 80))), {})"
        },
        {
            "count": 48,
            "inputs": "((T([128, 128, 128], f32), T([128, 128, 80], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([128, 128, 128], f32, stride=(16384, 1, 128)), T([128, 128, 80], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([128, 80, 128], f32, stride=(10240, 1, 80)), T([128, 128, 128], f32)), {})"
        }
    ],
    "aten.embedding.default": [
        {
            "count": 1,
            "inputs": "((T([8008, 2560], f32), T([4, 128], i64), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2560], f32), T([128], i64)), {})"
        }
    ],
    "aten.embedding_dense_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 2560], f32), T([128], i64), 128, -1, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 128, 2560], f32), T([4, 128], i64), 8008, 0, False), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 24,
            "inputs": "((T([4, 128, 10240], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 24,
            "inputs": "((T([4, 128, 10240], f32), T([4, 128, 10240], f32)), {})"
        }
    ],
    "aten.lt.Scalar": [
        {
            "count": 24,
            "inputs": "((T([], f32), 0.0), {})"
        }
    ],
    "aten.lt.Tensor": [
        {
            "count": 1,
            "inputs": "((T([128], i64), T([128, 1], i64)), {})"
        }
    ],
    "aten.masked_fill_.Scalar": [
        {
            "count": 1,
            "inputs": "((T([128, 128], f32), T([128, 128], b8), 0), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([512, 2560], f32), T([2560, 8008], f32, stride=(1, 2560))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8008, 512], f32, stride=(1, 8008)), T([512, 2560], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 8008], f32), T([8008, 2560], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([512, 2560], f32), T([2560, 10240], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([2560, 512], f32, stride=(1, 2560)), T([512, 10240], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([512, 10240], f32), T([10240, 2560], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([10240, 512], f32, stride=(1, 10240)), T([512, 2560], f32)), {})"
        },
        {
            "count": 96,
            "inputs": "((T([512, 2560], f32), T([2560, 2560], f32)), {})"
        },
        {
            "count": 96,
            "inputs": "((T([2560, 512], f32, stride=(1, 2560)), T([512, 2560], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 2,
            "inputs": "((T([4, 128, 2560], f32), 1.0), {})"
        },
        {
            "count": 48,
            "inputs": "((T([4, 128, 2560], f32), 0.11180339887498948), {})"
        }
    ],
    "aten.native_dropout.default": [
        {
            "count": 49,
            "inputs": "((T([4, 128, 2560], f32), 0.1, True), {})"
        }
    ],
    "aten.native_dropout_backward.default": [
        {
            "count": 49,
            "inputs": "((T([4, 128, 2560], f32), T([4, 128, 2560], b8), 1.1111111111111112), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 49,
            "inputs": "((T([4, 128, 2560], f32), [2560], T([2560], f32), T([2560], f32), 1e-05), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 49,
            "inputs": "((T([4, 128, 2560], f32), T([4, 128, 2560], f32), [2560], T([4, 128, 1], f32), T([4, 128, 1], f32), T([2560], f32), T([2560], f32), [True, True, True]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([512, 8008], f32), T([512], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([512, 8008], f32), T([512], i64), None, 1, -100), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 120,
            "inputs": "((T([512, 2560], f32), [0], True), {})"
        },
        {
            "count": 24,
            "inputs": "((T([512, 10240], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 128, 2560], f32), [0], True), {})"
        }
    ]
}