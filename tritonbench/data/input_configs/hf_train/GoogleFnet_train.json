{
    "aten._fft_c2c.default": [
        {
            "count": 12,
            "inputs": "((T([16, 512, 768], c64), [1, 2], 0, True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 512, 768], c64), [1, 2], 0, False), {})"
        }
    ],
    "aten._foreach_pow.ScalarAndTensor": [
        {
            "count": 1,
            "inputs": "((0.9, [T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32)]), {})"
        },
        {
            "count": 1,
            "inputs": "((0.999, [T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32)]), {})"
        }
    ],
    "aten._foreach_sqrt.default": [
        {
            "count": 1,
            "inputs": "(([T([32000, 768], f32), T([512, 768], f32), T([4, 768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([32000], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32)],), {})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([8192, 32000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([8192, 32000], f32), T([8192, 32000], f32), 1, f32), {})"
        }
    ],
    "aten._to_copy.default": [
        {
            "count": 12,
            "inputs": "((T([16, 512, 768], f32),), {'dtype': c64})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 28,
            "inputs": "((T([16, 512, 768], f32), T([16, 512, 768], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([16, 512, 768], f32), T([16, 512, 768], f32, stride=(786432, 1536, 2))), {})"
        },
        {
            "count": 36,
            "inputs": "((T([16, 512, 3072], f32), T([16, 512, 3072], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 512, 3072], f32), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 768], f32), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32000, 768], f32), T([32000, 768], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 1,
            "inputs": "((T([16, 512, 768], f32), T([1, 512, 768], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 2,
            "inputs": "((T([768], f32), T([8192, 768], f32), T([768, 768], f32, stride=(1, 768))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3072], f32), T([8192, 768], f32), T([768, 3072], f32, stride=(1, 768))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768], f32), T([8192, 3072], f32), T([3072, 768], f32, stride=(1, 3072))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([768], f32), T([16, 768], f32, stride=(393216, 1)), T([768, 768], f32, stride=(1, 768))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32000], f32), T([8192, 768], f32), T([768, 32000], f32, stride=(1, 768))), {})"
        }
    ],
    "aten.embedding.default": [
        {
            "count": 1,
            "inputs": "((T([32000, 768], f32), T([16, 512], i64), 3), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 768], f32), T([16, 512], i64, stride=(0, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 768], f32), T([1, 512], i64)), {})"
        }
    ],
    "aten.embedding_dense_backward.default": [
        {
            "count": 1,
            "inputs": "((T([1, 512, 768], f32), T([1, 512], i64), 512, -1, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 768], f32), T([16, 512], i64, stride=(0, 1)), 4, -1, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 768], f32), T([16, 512], i64), 32000, 3, False), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([8192, 32000], f32), T([32000, 768], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32000, 8192], f32, stride=(1, 32000)), T([8192, 768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([8192, 768], f32), T([768, 768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([768, 8192], f32, stride=(1, 768)), T([8192, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8192, 768], f32), T([768, 3072], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768, 8192], f32, stride=(1, 768)), T([8192, 3072], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8192, 3072], f32), T([3072, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3072, 8192], f32, stride=(1, 3072)), T([8192, 768], f32)), {})"
        }
    ],
    "aten.mul.Scalar": [
        {
            "count": 1,
            "inputs": "((T([16, 512, 768], f32), 3.0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 512, 3072], f32), 3.0), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 24,
            "inputs": "((T([16, 512, 3072], f32), 0.5), {})"
        },
        {
            "count": 24,
            "inputs": "((T([16, 512, 3072], f32), 0.044715), {})"
        },
        {
            "count": 24,
            "inputs": "((T([16, 512, 3072], f32), 0.7978845608028654), {})"
        },
        {
            "count": 48,
            "inputs": "((T([16, 512, 3072], f32), T([16, 512, 3072], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 512, 768], f32), 0.5), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 512, 768], f32), 0.044715), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 512, 768], f32), 0.7978845608028654), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 512, 768], f32), T([16, 512, 768], f32)), {})"
        }
    ],
    "aten.native_dropout.default": [
        {
            "count": 13,
            "inputs": "((T([16, 512, 768], f32), 0.1, True), {})"
        }
    ],
    "aten.native_dropout_backward.default": [
        {
            "count": 13,
            "inputs": "((T([16, 512, 768], f32), T([16, 512, 768], b8), 1.1111111111111112), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 26,
            "inputs": "((T([16, 512, 768], f32), [768], T([768], f32), T([768], f32), 1e-12), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 26,
            "inputs": "((T([16, 512, 768], f32), T([16, 512, 768], f32), [768], T([16, 512, 1], f32), T([16, 512, 1], f32), T([768], f32), T([768], f32), [True, True, True]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([8192, 32000], f32), T([8192], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([8192, 32000], f32), T([8192], i64), None, 1, -100), {})"
        }
    ],
    "aten.pow.Tensor_Scalar": [
        {
            "count": 12,
            "inputs": "((T([16, 512, 3072], f32), 3.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 768], f32), 3.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 768], f32), 2.0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 512, 3072], f32), 2.0), {})"
        }
    ],
    "aten.select_backward.default": [
        {
            "count": 12,
            "inputs": "((T([16, 512, 768], f32), [16, 512, 768, 2], 3, 0), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([8192, 32000], f32), [0], True), {})"
        },
        {
            "count": 14,
            "inputs": "((T([8192, 768], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8192, 3072], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 768], f32), [0], True), {})"
        }
    ],
    "aten.tanh.default": [
        {
            "count": 12,
            "inputs": "((T([16, 512, 3072], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 768], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 768], f32),), {})"
        }
    ],
    "aten.tanh_backward.default": [
        {
            "count": 1,
            "inputs": "((T([16, 512, 768], f32), T([16, 512, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 512, 3072], f32), T([16, 512, 3072], f32)), {})"
        }
    ]
}