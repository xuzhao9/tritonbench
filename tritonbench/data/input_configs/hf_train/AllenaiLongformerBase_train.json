{
    "aten._foreach_pow.ScalarAndTensor": [
        {
            "count": 1,
            "inputs": "((0.9, [T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32)]), {})"
        },
        {
            "count": 1,
            "inputs": "((0.999, [T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32)]), {})"
        }
    ],
    "aten._foreach_sqrt.default": [
        {
            "count": 1,
            "inputs": "(([T([50265, 768], f32), T([1, 768], f32), T([768], f32), T([768], f32), T([4098, 768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32), T([3072, 768], f32), T([3072], f32), T([768, 3072], f32), T([768], f32), T([768], f32), T([768], f32), T([50265], f32), T([768, 768], f32), T([768], f32), T([768], f32), T([768], f32)],), {})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([4096, 50265], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([4096, 50265], f32), T([4096, 50265], f32), 1, f32), {})"
        }
    ],
    "aten._softmax.default": [
        {
            "count": 12,
            "inputs": "((T([4, 1024, 12, 513], f32, stride=(6303744, 513, 525312, 1)), -1, False), {})"
        }
    ],
    "aten._softmax_backward_data.default": [
        {
            "count": 12,
            "inputs": "((T([4, 1024, 12, 513], f32), T([4, 1024, 12, 513], f32), -1, f32), {})"
        }
    ],
    "aten._to_copy.default": [
        {
            "count": 1,
            "inputs": "((T([4, 1024], b8),), {'dtype': i32})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 1024], i64),), {'dtype': i32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 1024], i32),), {'dtype': i64})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 256, 12, 257], f32, stride=(0, 257, 0, 1)),), {'dtype': b8})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 1, 1], b8),), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 256, 1, 257], f32, stride=(0, 257, 257, 1)),), {'dtype': b8})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 36,
            "inputs": "((T([1024, 4, 768], f32), [4096, 768]), {})"
        },
        {
            "count": 36,
            "inputs": "((T([4096, 768], f32), [1024, 4, 768]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 512, 64, 1], f32), [144, 512, 64]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 64, 512, 1], f32), [144, 64, 512]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 12, 1024, 513], f32), [48, 4, 256, 513]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 4, 768, 64, 1], f32), [192, 768, 64]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([1024, 4, 12, 64], f32), [1024, 4, 768]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 768], f32), [4096, 768]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4096, 768], f32), [4, 1024, 768]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 12, 1024, 64], f32), [48, 4, 256, 64]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 4, 768, 64], i64), [9437184]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 512, 64], f32), [4718592]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([48, 3, 512, 64], i64), [4718592]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 1,
            "inputs": "((T([4, 1024], i64), 1), {})"
        },
        {
            "count": 38,
            "inputs": "((T([4, 1024, 768], f32), T([4, 1024, 768], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([1024, 4, 768], f32), T([768], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([], i64), 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 768], f32), T([768], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([48, 4, 256, 513], f32), T([48, 4, 256, 513], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([48, 3, 512, 513], f32), T([48, 3, 512, 513], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([1024, 4, 768], f32), T([1024, 4, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 768], f32), T([4, 1024, 768], f32, stride=(768, 3072, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([50265, 768], f32), T([50265, 768], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 12,
            "inputs": "((T([4, 1024, 12, 513], f32, stride=(6303744, 513, 525312, 1)), T([4, 1024, 1, 513], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 12,
            "inputs": "((T([3072], f32), T([4096, 768], f32), T([768, 3072], f32, stride=(1, 768))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768], f32), T([4096, 3072], f32), T([3072, 768], f32, stride=(1, 3072))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([768], f32), T([4096, 768], f32), T([768, 768], f32, stride=(1, 768))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([50265], f32), T([4096, 768], f32), T([768, 50265], f32, stride=(1, 768))), {})"
        }
    ],
    "aten.any.default": [
        {
            "count": 1,
            "inputs": "((T([4, 2], b8),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4096], b8),), {})"
        }
    ],
    "aten.bmm.default": [
        {
            "count": 12,
            "inputs": "((T([144, 512, 64], f32), T([144, 64, 512], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([192, 256, 768], f32, stride=(197120, 769, 1)), T([192, 768, 64], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([192, 768, 256], f32, stride=(197120, 1, 769)), T([192, 256, 64], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([192, 256, 64], f32), T([192, 64, 768], f32, stride=(49152, 1, 64))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([144, 64, 512], f32, stride=(32768, 1, 64)), T([144, 512, 512], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([144, 512, 512], f32), T([144, 512, 64], f32, stride=(32768, 1, 512))), {})"
        }
    ],
    "aten.constant_pad_nd.default": [
        {
            "count": 12,
            "inputs": "((T([48, 3, 512, 512], f32), [0, 0, 0, 1], 0.0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 3, 512, 512], f32), [0, 0, 0, 1], 0.0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 1024, 64], f32, stride=(64, 3072, 1)), [0, 0, 256, 256], -1.0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 4, 256, 513], f32), [0, 257], 0.0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 4, 256, 770], f32), [0, -257]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 1536, 64], f32), [0, 0, -256, -256]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 513, 512], f32), [0, 0, 0, -1]), {})"
        }
    ],
    "aten.copy_.default": [
        {
            "count": 12,
            "inputs": "((T([48, 3, 256, 257], f32, stride=(525312, 131328, 513, 1)), T([48, 3, 256, 257], f32, stride=(787968, 262656, 513, 1))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 256, 257], f32, stride=(525312, 513, 1)), T([48, 256, 257], f32, stride=(787968, 513, 1))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 256, 256], f32, stride=(525312, 131328, 513, 1)), T([48, 3, 256, 256], f32, stride=(787968, 262656, 513, 1))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 255, 255], f32, stride=(525312, 513, 1)), T([48, 255, 255], f32, stride=(787968, 513, 1))), {})"
        },
        {
            "count": 48,
            "inputs": "((T([4, 256, 12, 257], f32, stride=(6303744, 513, 525312, 1)), T([4, 256, 12, 257], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 3, 256, 257], f32, stride=(525312, 131328, 513, 1)), T([4, 3, 256, 257], f32, stride=(787968, 262656, 513, 1))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 256, 257], f32, stride=(525312, 513, 1)), T([4, 256, 257], f32, stride=(787968, 513, 1))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 3, 256, 256], f32, stride=(525312, 131328, 513, 1)), T([4, 3, 256, 256], f32, stride=(787968, 262656, 513, 1))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 255, 255], f32, stride=(525312, 513, 1)), T([4, 255, 255], f32, stride=(787968, 513, 1))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 256, 1, 257], f32, stride=(525312, 513, 525312, 1)), T([4, 256, 1, 257], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([4, 1024, 12, 513], f32, stride=(6303744, 513, 525312, 1)), T([4, 1024, 12, 513], f32)), {})"
        },
        {
            "count": 84,
            "inputs": "((T([48, 4, 256, 513], f32), T([48, 4, 256, 513], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 255, 255], f32, stride=(525312, 513, 1)), T([48, 255, 255], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 256, 256], f32, stride=(525312, 131328, 513, 1)), T([48, 3, 256, 256], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 256, 257], f32, stride=(525312, 513, 1)), T([48, 256, 257], f32)), {})"
        }
    ],
    "aten.cumsum.default": [
        {
            "count": 1,
            "inputs": "((T([4, 1024], i32), 1), {})"
        }
    ],
    "aten.div.Tensor": [
        {
            "count": 12,
            "inputs": "((T([1024, 4, 768], f32), 8.0), {})"
        }
    ],
    "aten.div_.Tensor": [
        {
            "count": 12,
            "inputs": "((T([1024, 4, 768], f32), 8.0), {})"
        }
    ],
    "aten.embedding.default": [
        {
            "count": 1,
            "inputs": "((T([50265, 768], f32), T([4, 1024], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4098, 768], f32), T([4, 1024], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 768], f32), T([4, 1024], i64)), {})"
        }
    ],
    "aten.embedding_dense_backward.default": [
        {
            "count": 1,
            "inputs": "((T([4, 1024, 768], f32), T([4, 1024], i64), 1, -1, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 1024, 768], f32), T([4, 1024], i64), 4098, 1, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 1024, 768], f32), T([4, 1024], i64), 50265, 1, False), {})"
        }
    ],
    "aten.eq.Scalar": [
        {
            "count": 1,
            "inputs": "((T([4, 2], i64), 1), {})"
        }
    ],
    "aten.flip.default": [
        {
            "count": 24,
            "inputs": "((T([256, 257], f32), [0]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([1, 256, 1, 257], f32), [1, 3]), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 12,
            "inputs": "((T([4, 1024, 3072], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 1024, 768], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 1,
            "inputs": "((T([4, 1024, 768], f32), T([4, 1024, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 3072], f32), T([4, 1024, 3072], f32)), {})"
        }
    ],
    "aten.gt.Scalar": [
        {
            "count": 1,
            "inputs": "((T([4, 1024], f32), 0), {})"
        }
    ],
    "aten.index.Tensor": [
        {
            "count": 1,
            "inputs": "((T([4, 1024], i64), [None, T([2], i64)]), {})"
        }
    ],
    "aten.index_add_.default": [
        {
            "count": 12,
            "inputs": "((T([4718592], f32), 0, T([9437184], i64), T([9437184], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3145728], f32), 0, T([4718592], i64), T([4718592], f32)), {})"
        }
    ],
    "aten.lt.Scalar": [
        {
            "count": 1,
            "inputs": "((T([4, 1024], f32), 0), {})"
        }
    ],
    "aten.masked_fill.Scalar": [
        {
            "count": 12,
            "inputs": "((T([4, 1024, 1, 1], f32), T([4, 1024, 1, 1], b8), -3.4028234663852886e+38), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 12, 513], f32), T([4, 1024, 1, 1], b8), 0.0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 12, 513], f32), T([4, 1024, 1, 1], b8), 0), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 48,
            "inputs": "((T([4096, 768], f32), T([768, 768], f32, stride=(1, 768))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4096, 50265], f32), T([50265, 768], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([50265, 4096], f32, stride=(1, 50265)), T([4096, 768], f32)), {})"
        },
        {
            "count": 49,
            "inputs": "((T([4096, 768], f32), T([768, 768], f32)), {})"
        },
        {
            "count": 49,
            "inputs": "((T([768, 4096], f32, stride=(1, 768)), T([4096, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4096, 768], f32), T([768, 3072], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768, 4096], f32, stride=(1, 768)), T([4096, 3072], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4096, 3072], f32), T([3072, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3072, 4096], f32, stride=(1, 3072)), T([4096, 768], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 1,
            "inputs": "((T([4, 1, 1, 1024], f32), -3.4028234663852886e+38), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 1024], i32), T([4, 1024], i32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 3, 512, 1, 1], f32, stride=(1024, 256, 1, 1, 1)), T([4, 3, 1, 512, 1], f32, stride=(1024, 256, 1, 1, 1))), {})"
        }
    ],
    "aten.native_dropout.default": [
        {
            "count": 25,
            "inputs": "((T([4, 1024, 768], f32), 0.1, True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 12, 513], f32), 0.1, True), {})"
        }
    ],
    "aten.native_dropout_backward.default": [
        {
            "count": 25,
            "inputs": "((T([4, 1024, 768], f32), T([4, 1024, 768], b8), 1.1111111111111112), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 12, 513], f32, stride=(6303744, 513, 525312, 1)), T([4, 1024, 12, 513], b8), 1.1111111111111112), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 26,
            "inputs": "((T([4, 1024, 768], f32), [768], T([768], f32), T([768], f32), 1e-05), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 26,
            "inputs": "((T([4, 1024, 768], f32), T([4, 1024, 768], f32), [768], T([4, 1024, 1], f32), T([4, 1024, 1], f32), T([768], f32), T([768], f32), [True, True, True]), {})"
        }
    ],
    "aten.ne.Scalar": [
        {
            "count": 1,
            "inputs": "((T([4, 1024], i64), 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024], f32), 0), {})"
        }
    ],
    "aten.new_empty_strided.default": [
        {
            "count": 84,
            "inputs": "((T([48, 4, 256, 513], f32), [48, 4, 256, 513], [525312, 131328, 513, 1]), {})"
        }
    ],
    "aten.new_ones.default": [
        {
            "count": 12,
            "inputs": "((T([4, 1024, 12, 513], f32, stride=(6303744, 513, 525312, 1)), [256, 257]), {'pin_memory': False})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 1, 1], f32), [4, 1024, 1, 1]), {'pin_memory': False})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 1, 513], f32), [256, 257]), {'pin_memory': False})"
        }
    ],
    "aten.new_zeros.default": [
        {
            "count": 12,
            "inputs": "((T([48, 3, 512, 513], f32), [48, 4, 256, 513]), {'pin_memory': False})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 3, 512, 513], f32), [4, 4, 256, 513]), {'pin_memory': False})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 4, 768, 64], f32), [4718592]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 1024, 12, 513], f32), [25214976]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 512, 64], f32, stride=(98304, 32768, 1, 512)), [3145728]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 512, 64], f32), [3145728]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([4096, 50265], f32), T([4096], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([4096, 50265], f32), T([4096], i64), None, 1, -100), {})"
        }
    ],
    "aten.rsub.Scalar": [
        {
            "count": 1,
            "inputs": "((T([4, 1, 1, 1024], f32), 1.0), {})"
        }
    ],
    "aten.select_backward.default": [
        {
            "count": 12,
            "inputs": "((T([48, 512, 513], f32), [48, 3, 512, 513], 1, 0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 512, 513], f32), [48, 3, 512, 513], 1, -1), {})"
        }
    ],
    "aten.slice_backward.default": [
        {
            "count": 12,
            "inputs": "((T([48, 4, 256, 768], f32), [48, 4, 256, 769], 3, 0, -1, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 4, 196864], f32), [48, 4, 197120], 2, 0, -256, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 256, 12, 257], f32), [4, 256, 12, 513], 3, -257, 9223372036854775807, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 256, 12, 513], f32), [4, 1024, 12, 513], 1, -256, 9223372036854775807, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 256, 12, 257], f32), [4, 256, 12, 513], 3, 0, 257, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 256, 12, 513], f32), [4, 1024, 12, 513], 1, 0, 256, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 255, 255], f32), [48, 255, 513], 2, -255, 9223372036854775807, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 255, 513], f32), [48, 512, 513], 1, 0, 255, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 256, 256], f32), [48, 3, 256, 513], 3, 257, 9223372036854775807, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 256, 513], f32), [48, 3, 512, 513], 2, -257, -1, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 256, 257], f32), [48, 256, 513], 2, 0, 257, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 256, 513], f32), [48, 512, 513], 1, 256, 9223372036854775807, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 256, 257], f32), [48, 3, 256, 513], 3, 0, 257, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([48, 3, 256, 513], f32), [48, 3, 512, 513], 2, 0, 256, 1), {})"
        }
    ],
    "aten.sub.Tensor": [
        {
            "count": 36,
            "inputs": "((T([], i64), 1), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([4096, 50265], f32), [0], True), {})"
        },
        {
            "count": 13,
            "inputs": "((T([4096, 768], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4096, 3072], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4, 1024, 768], f32), [0, 1], True), {})"
        },
        {
            "count": 36,
            "inputs": "((T([1024, 4, 768], f32), [0, 1], True), {})"
        }
    ],
    "aten.tril.default": [
        {
            "count": 24,
            "inputs": "((T([256, 257], f32),), {})"
        }
    ],
    "aten.where.self": [
        {
            "count": 24,
            "inputs": "((T([4, 256, 12, 257], b8), T([4, 256, 12, 257], f32, stride=(789504, 257, 65792, 1)), T([4, 256, 12, 257], f32, stride=(6303744, 513, 525312, 1))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 256, 1, 257], b8), T([4, 256, 1, 257], f32), T([4, 256, 1, 257], f32, stride=(525312, 513, 525312, 1))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 256, 12, 257], b8), T([], f32), T([4, 256, 12, 257], f32)), {})"
        }
    ]
}