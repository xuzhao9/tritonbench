{
    "aten._foreach_add.List": {
        "count": 1,
        "inputs": "(([T([768, 3, 16, 16], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([1000, 768], f32)], [T([768, 3, 16, 16], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([1000, 768], f32)]), {'alpha': 0.0001})"
    },
    "aten._log_softmax.default": {
        "count": 1,
        "inputs": "((T([128, 1000], f32), 1, False), {})"
    },
    "aten._log_softmax_backward_data.default": {
        "count": 1,
        "inputs": "((T([128, 1000], f32), T([128, 1000], f32), 1, f32), {})"
    },
    "aten._unsafe_view.default": {
        "count": 12,
        "inputs": "((T([98304, 384], f32), [128, 768, 384]), {})"
    },
    "aten.add.Tensor": {
        "count": 24,
        "inputs": "((T([128, 196, 768], f32), T([128, 196, 768], f32)), {})"
    },
    "aten.addmm.default": {
        "count": 1,
        "inputs": "((T([1000], f32), T([128, 768], f32), T([768, 1000], f32, stride=(1, 768))), {})"
    },
    "aten.clone.default": {
        "count": 1,
        "inputs": "((T([1000, 768], f32),), {})"
    },
    "aten.convolution.default": {
        "count": 1,
        "inputs": "((T([128, 3, 224, 224], f32), T([768, 3, 16, 16], f32), T([768], f32), [16, 16], [0, 0], [1, 1], False, [0, 0], 1), {})"
    },
    "aten.convolution_backward.default": {
        "count": 1,
        "inputs": "((T([128, 768, 14, 14], f32, stride=(150528, 1, 10752, 768)), T([128, 3, 224, 224], f32), T([768, 3, 16, 16], f32), [768], [16, 16], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
    },
    "aten.div.Scalar": {
        "count": 1,
        "inputs": "((T([128, 196, 768], f32, stride=(768, 0, 1)), 196), {})"
    },
    "aten.gelu.default": {
        "count": 12,
        "inputs": "((T([128, 196, 3072], f32),), {})"
    },
    "aten.gelu_backward.default": {
        "count": 12,
        "inputs": "((T([128, 768, 384], f32), T([128, 768, 384], f32)), {})"
    },
    "aten.mean.dim": {
        "count": 1,
        "inputs": "((T([128, 196, 768], f32), [1]), {})"
    },
    "aten.mm.default": {
        "count": 12,
        "inputs": "((T([98304, 384], f32), T([384, 196], f32)), {})"
    },
    "aten.native_layer_norm.default": {
        "count": 25,
        "inputs": "((T([128, 196, 768], f32, stride=(150528, 1, 196)), [768], T([768], f32), T([768], f32), 1e-06), {})"
    },
    "aten.native_layer_norm_backward.default": {
        "count": 12,
        "inputs": "((T([128, 196, 768], f32, stride=(150528, 1, 196)), T([128, 196, 768], f32, stride=(150528, 1, 196)), [768], T([128, 196, 1], f32), T([128, 196, 1], f32), T([768], f32), T([768], f32), [True, True, True]), {})"
    },
    "aten.nll_loss_backward.default": {
        "count": 1,
        "inputs": "((T([], f32), T([128, 1000], f32), T([128], i64), None, 1, -100, T([], f32)), {})"
    },
    "aten.nll_loss_forward.default": {
        "count": 1,
        "inputs": "((T([128, 1000], f32), T([128], i64), None, 1, -100), {})"
    },
    "aten.random_.to": {
        "count": 1,
        "inputs": "((T([128], i64), 1000), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 12,
        "inputs": "((T([128, 768, 384], f32), [0, 1], True), {})"
    }
}