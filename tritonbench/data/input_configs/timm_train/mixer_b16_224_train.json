{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([768, 3, 16, 16], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([1000, 768], f32)], [T([768, 3, 16, 16], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([384, 196], f32), T([196, 384], f32), T([3072, 768], f32), T([768, 3072], f32), T([1000, 768], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128, 1000], f32), 1, f32), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 24,
            "inputs": "((T([128, 768, 196], f32), [98304, 196]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([98304, 384], f32), [128, 768, 384]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 12,
            "inputs": "((T([128, 768, 384], f32), T([384], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 196, 768], f32, stride=(150528, 1, 196)), T([128, 196, 768], f32, stride=(150528, 1, 196))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 196, 768], f32, stride=(150528, 1, 196)), T([128, 196, 768], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([128, 196, 768], f32), T([128, 196, 768], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 12,
            "inputs": "((T([196], f32), T([98304, 384], f32), T([384, 196], f32, stride=(1, 384))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3072], f32), T([25088, 768], f32), T([768, 3072], f32, stride=(1, 768))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768], f32), T([25088, 3072], f32), T([3072, 768], f32, stride=(1, 3072))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([128, 768], f32), T([768, 1000], f32, stride=(1, 768))), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 63,
            "inputs": "((T([768], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([384], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([196], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3072], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([768, 3, 16, 16], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([384, 196], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([196, 384], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3072, 768], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768, 3072], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 768], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([128, 3, 224, 224], f32), T([768, 3, 16, 16], f32), T([768], f32), [16, 16], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 768, 14, 14], f32, stride=(150528, 1, 10752, 768)), T([128, 3, 224, 224], f32), T([768, 3, 16, 16], f32), [768], [16, 16], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([128, 196, 768], f32, stride=(768, 0, 1)), 196), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 12,
            "inputs": "((T([128, 768, 384], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 196, 3072], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 12,
            "inputs": "((T([128, 196, 3072], f32), T([128, 196, 3072], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 768, 384], f32), T([128, 768, 384], f32)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([128, 196, 768], f32), [1]), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 12,
            "inputs": "((T([98304, 196], f32), T([196, 384], f32, stride=(1, 196))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([1000, 768], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 128], f32, stride=(1, 1000)), T([128, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([25088, 768], f32), T([768, 3072], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768, 25088], f32, stride=(1, 768)), T([25088, 3072], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([25088, 3072], f32), T([3072, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3072, 25088], f32, stride=(1, 3072)), T([25088, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([98304, 196], f32), T([196, 384], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([196, 98304], f32, stride=(1, 196)), T([98304, 384], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([384, 98304], f32, stride=(1, 384)), T([98304, 196], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([98304, 384], f32), T([384, 196], f32)), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 25,
            "inputs": "((T([128, 196, 768], f32, stride=(150528, 1, 196)), [768], T([768], f32), T([768], f32), 1e-06), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 13,
            "inputs": "((T([128, 196, 768], f32), T([128, 196, 768], f32, stride=(150528, 1, 196)), [768], T([128, 196, 1], f32), T([128, 196, 1], f32), T([768], f32), T([768], f32), [True, True, True]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 196, 768], f32, stride=(150528, 1, 196)), T([128, 196, 768], f32, stride=(150528, 1, 196)), [768], T([128, 196, 1], f32), T([128, 196, 1], f32), T([768], f32), T([768], f32), [True, True, True]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([128, 1000], f32), T([128], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([128], i64), 1000), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([25088, 768], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([25088, 3072], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([98304, 196], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 768, 384], f32), [0, 1], True), {})"
        }
    ]
}