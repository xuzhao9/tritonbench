{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([64, 3, 7, 7], f32), T([512, 64, 1, 1], f32), T([512, 16, 3, 3], f32), T([256, 512, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 16, 3, 3], f32), T([256, 512, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 16, 3, 3], f32), T([256, 512, 1, 1], f32), T([1024, 256, 1, 1], f32), T([1024, 32, 3, 3], f32), T([512, 1024, 1, 1], f32), T([512, 256, 1, 1], f32), T([1024, 512, 1, 1], f32), T([1024, 32, 3, 3], f32), T([512, 1024, 1, 1], f32), T([1024, 512, 1, 1], f32), T([1024, 32, 3, 3], f32), T([512, 1024, 1, 1], f32), T([1024, 512, 1, 1], f32), T([1024, 32, 3, 3], f32), T([512, 1024, 1, 1], f32), T([2048, 512, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([1024, 512, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([4096, 1024, 1, 1], f32), T([4096, 128, 3, 3], f32), T([2048, 4096, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([4096, 2048, 1, 1], f32), T([4096, 128, 3, 3], f32), T([2048, 4096, 1, 1], f32), T([4096, 2048, 1, 1], f32), T([4096, 128, 3, 3], f32), T([2048, 4096, 1, 1], f32), T([1000, 2048], f32)], [T([64, 3, 7, 7], f32), T([512, 64, 1, 1], f32), T([512, 16, 3, 3], f32), T([256, 512, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 16, 3, 3], f32), T([256, 512, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 16, 3, 3], f32), T([256, 512, 1, 1], f32), T([1024, 256, 1, 1], f32), T([1024, 32, 3, 3], f32), T([512, 1024, 1, 1], f32), T([512, 256, 1, 1], f32), T([1024, 512, 1, 1], f32), T([1024, 32, 3, 3], f32), T([512, 1024, 1, 1], f32), T([1024, 512, 1, 1], f32), T([1024, 32, 3, 3], f32), T([512, 1024, 1, 1], f32), T([1024, 512, 1, 1], f32), T([1024, 32, 3, 3], f32), T([512, 1024, 1, 1], f32), T([2048, 512, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([1024, 512, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([2048, 64, 3, 3], f32), T([1024, 2048, 1, 1], f32), T([4096, 1024, 1, 1], f32), T([4096, 128, 3, 3], f32), T([2048, 4096, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([4096, 2048, 1, 1], f32), T([4096, 128, 3, 3], f32), T([2048, 4096, 1, 1], f32), T([4096, 2048, 1, 1], f32), T([4096, 128, 3, 3], f32), T([2048, 4096, 1, 1], f32), T([1000, 2048], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([32, 1000], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 2,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 2048, 7, 7], f32)), {})"
        },
        {
            "count": 23,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 1024, 14, 14], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 512, 28, 28], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 256, 56, 56], f32), T([32, 256, 56, 56], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 56, 56], f32), T([32, 64, 56, 56], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 104,
            "inputs": "((T([], i64), 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 256, 56, 56], f32), T([32, 256, 56, 56], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 512, 28, 28], f32)), {})"
        },
        {
            "count": 23,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 1024, 14, 14], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 2048, 7, 7], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([32, 2048], f32), T([2048, 1000], f32, stride=(1, 2048))), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 2,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 22,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 64,
            "inputs": "((T([1024], f32),), {})"
        },
        {
            "count": 100,
            "inputs": "((T([2048], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([4096], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 3, 7, 7], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 64, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 16, 3, 3], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 64, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 256, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1024, 32, 3, 3], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1024, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2048, 512, 1, 1], f32),), {})"
        },
        {
            "count": 23,
            "inputs": "((T([2048, 64, 3, 3], f32),), {})"
        },
        {
            "count": 23,
            "inputs": "((T([1024, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 23,
            "inputs": "((T([2048, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4096, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([4096, 128, 3, 3], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2048, 4096, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4096, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 2048], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([32, 3, 224, 224], f32), T([64, 3, 7, 7], f32), None, [2, 2], [3, 3], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 56, 56], f32), T([512, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 56, 56], f32), T([512, 16, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 32), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 56, 56], f32), T([256, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 56, 56], f32), T([256, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 56, 56], f32), T([512, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 56, 56], f32), T([1024, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 56, 56], f32), T([1024, 32, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 32), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 1024, 28, 28], f32), T([512, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 56, 56], f32), T([512, 256, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 28, 28], f32), T([1024, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 1024, 28, 28], f32), T([1024, 32, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 32), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 28, 28], f32), T([2048, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2048, 28, 28], f32), T([2048, 64, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 32), {})"
        },
        {
            "count": 23,
            "inputs": "((T([32, 2048, 14, 14], f32), T([1024, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 28, 28], f32), T([1024, 512, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 22,
            "inputs": "((T([32, 1024, 14, 14], f32), T([2048, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 22,
            "inputs": "((T([32, 2048, 14, 14], f32), T([2048, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 32), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 14, 14], f32), T([4096, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 4096, 14, 14], f32), T([4096, 128, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 32), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 4096, 7, 7], f32), T([2048, 4096, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 14, 14], f32), T([2048, 1024, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 2048, 7, 7], f32), T([4096, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 4096, 7, 7], f32), T([4096, 128, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 32), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 3,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 4096, 7, 7], f32), T([2048, 4096, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 4096, 7, 7], f32), T([32, 4096, 7, 7], f32), T([4096, 128, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 32, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 4096, 7, 7], f32), T([32, 2048, 7, 7], f32), T([4096, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 1024, 14, 14], f32), T([2048, 1024, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 4096, 7, 7], f32), T([32, 4096, 14, 14], f32), T([4096, 128, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 32, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 4096, 14, 14], f32), T([32, 1024, 14, 14], f32), T([4096, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 23,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 2048, 14, 14], f32), T([1024, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 22,
            "inputs": "((T([32, 2048, 14, 14], f32), T([32, 2048, 14, 14], f32), T([2048, 64, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 32, [True, True, False]), {})"
        },
        {
            "count": 22,
            "inputs": "((T([32, 2048, 14, 14], f32), T([32, 1024, 14, 14], f32), T([2048, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 512, 28, 28], f32), T([1024, 512, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2048, 14, 14], f32), T([32, 2048, 28, 28], f32), T([2048, 64, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 32, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2048, 28, 28], f32), T([32, 512, 28, 28], f32), T([2048, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 1024, 28, 28], f32), T([512, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 1024, 28, 28], f32), T([32, 1024, 28, 28], f32), T([1024, 32, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 32, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 1024, 28, 28], f32), T([32, 512, 28, 28], f32), T([1024, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 256, 56, 56], f32), T([512, 256, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 28, 28], f32), T([32, 1024, 56, 56], f32), T([1024, 32, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 32, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 56, 56], f32), T([32, 256, 56, 56], f32), T([1024, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 256, 56, 56], f32), T([32, 512, 56, 56], f32), T([256, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 56, 56], f32), T([32, 512, 56, 56], f32), T([512, 16, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 32, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 512, 56, 56], f32), T([32, 256, 56, 56], f32), T([512, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 56, 56], f32), T([32, 64, 56, 56], f32), T([256, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 56, 56], f32), T([32, 64, 56, 56], f32), T([512, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 112, 112], f32), T([32, 3, 224, 224], f32), T([64, 3, 7, 7], f32), [0], [2, 2], [3, 3], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([32, 64, 112, 112], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 512, 56, 56], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 256, 56, 56], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 56, 56], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 7,
            "inputs": "((T([32, 1024, 28, 28], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 512, 28, 28], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2048, 28, 28], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 45,
            "inputs": "((T([32, 2048, 14, 14], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 24,
            "inputs": "((T([32, 1024, 14, 14], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 4096, 14, 14], f32), T([4096], f32), T([4096], f32), T([4096], f32), T([4096], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 4096, 7, 7], f32), T([4096], f32), T([4096], f32), T([4096], f32), T([4096], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 2048, 7, 7], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), True, 0.1, 1e-05), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 4,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 2048, 7, 7], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 4096, 7, 7], f32), T([32, 4096, 7, 7], f32), T([4096], f32), T([4096], f32), T([4096], f32), T([4096], f32), T([4096], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 4096, 14, 14], f32), T([32, 4096, 14, 14], f32), T([4096], f32), T([4096], f32), T([4096], f32), T([4096], f32), T([4096], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 1024, 14, 14], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 45,
            "inputs": "((T([32, 2048, 14, 14], f32), T([32, 2048, 14, 14], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2048, 28, 28], f32), T([32, 2048, 28, 28], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 512, 28, 28], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 7,
            "inputs": "((T([32, 1024, 28, 28], f32), T([32, 1024, 28, 28], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 56, 56], f32), T([32, 1024, 56, 56], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 256, 56, 56], f32), T([32, 256, 56, 56], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 512, 56, 56], f32), T([32, 512, 56, 56], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 112, 112], f32), T([32, 64, 112, 112], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([32, 2048, 7, 7], f32, stride=(2048, 1, 0, 0)), 49), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 1,
            "inputs": "((T([32, 64, 112, 112], f32), [3, 3], [2, 2], [1, 1]), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 64, 56, 56], f32), T([32, 64, 112, 112], f32), [3, 3], [2, 2], [1, 1], [1, 1], False, T([32, 64, 56, 56], i64)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([32, 2048, 7, 7], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([1000, 2048], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 32], f32, stride=(1, 1000)), T([32, 2048], f32)), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([32, 1000], f32), T([32], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([32], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([32], i64), 1000), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 1,
            "inputs": "((T([32, 64, 112, 112], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 512, 56, 56], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 256, 56, 56], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 56, 56], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([32, 1024, 28, 28], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 28, 28], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2048, 28, 28], f32),), {})"
        },
        {
            "count": 45,
            "inputs": "((T([32, 2048, 14, 14], f32),), {})"
        },
        {
            "count": 23,
            "inputs": "((T([32, 1024, 14, 14], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 4096, 14, 14], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 4096, 7, 7], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 2048, 7, 7], f32),), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), [0], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 3,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 2048, 7, 7], f32), 0), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 4096, 7, 7], f32), T([32, 4096, 7, 7], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 4096, 14, 14], f32), T([32, 4096, 14, 14], f32), 0), {})"
        },
        {
            "count": 23,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 1024, 14, 14], f32), 0), {})"
        },
        {
            "count": 45,
            "inputs": "((T([32, 2048, 14, 14], f32), T([32, 2048, 14, 14], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2048, 28, 28], f32), T([32, 2048, 28, 28], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 512, 28, 28], f32), 0), {})"
        },
        {
            "count": 7,
            "inputs": "((T([32, 1024, 28, 28], f32), T([32, 1024, 28, 28], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 56, 56], f32), T([32, 1024, 56, 56], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 256, 56, 56], f32), T([32, 256, 56, 56], f32), 0), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 512, 56, 56], f32), T([32, 512, 56, 56], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 112, 112], f32), T([32, 64, 112, 112], f32), 0), {})"
        }
    ]
}