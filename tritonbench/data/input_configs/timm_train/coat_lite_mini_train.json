{
    "aten._foreach_add.List": {
        "count": 1,
        "inputs": "(([T([64, 3, 4, 4], f32), T([128, 64, 2, 2], f32), T([320, 128, 2, 2], f32), T([512, 320, 2, 2], f32), T([64, 1, 3, 3], f32), T([128, 1, 3, 3], f32), T([320, 1, 3, 3], f32), T([512, 1, 3, 3], f32), T([16, 1, 3, 3], f32), T([24, 1, 5, 5], f32), T([24, 1, 7, 7], f32), T([32, 1, 3, 3], f32), T([48, 1, 5, 5], f32), T([48, 1, 7, 7], f32), T([80, 1, 3, 3], f32), T([120, 1, 5, 5], f32), T([120, 1, 7, 7], f32), T([128, 1, 3, 3], f32), T([192, 1, 5, 5], f32), T([192, 1, 7, 7], f32), T([192, 64], f32), T([64, 64], f32), T([512, 64], f32), T([64, 512], f32), T([192, 64], f32), T([64, 64], f32), T([512, 64], f32), T([64, 512], f32), T([384, 128], f32), T([128, 128], f32), T([1024, 128], f32), T([128, 1024], f32), T([384, 128], f32), T([128, 128], f32), T([1024, 128], f32), T([128, 1024], f32), T([960, 320], f32), T([320, 320], f32), T([1280, 320], f32), T([320, 1280], f32), T([960, 320], f32), T([320, 320], f32), T([1280, 320], f32), T([320, 1280], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1000, 512], f32)], [T([64, 3, 4, 4], f32), T([128, 64, 2, 2], f32), T([320, 128, 2, 2], f32), T([512, 320, 2, 2], f32), T([64, 1, 3, 3], f32), T([128, 1, 3, 3], f32), T([320, 1, 3, 3], f32), T([512, 1, 3, 3], f32), T([16, 1, 3, 3], f32), T([24, 1, 5, 5], f32), T([24, 1, 7, 7], f32), T([32, 1, 3, 3], f32), T([48, 1, 5, 5], f32), T([48, 1, 7, 7], f32), T([80, 1, 3, 3], f32), T([120, 1, 5, 5], f32), T([120, 1, 7, 7], f32), T([128, 1, 3, 3], f32), T([192, 1, 5, 5], f32), T([192, 1, 7, 7], f32), T([192, 64], f32), T([64, 64], f32), T([512, 64], f32), T([64, 512], f32), T([192, 64], f32), T([64, 64], f32), T([512, 64], f32), T([64, 512], f32), T([384, 128], f32), T([128, 128], f32), T([1024, 128], f32), T([128, 1024], f32), T([384, 128], f32), T([128, 128], f32), T([1024, 128], f32), T([128, 1024], f32), T([960, 320], f32), T([320, 320], f32), T([1280, 320], f32), T([320, 1280], f32), T([960, 320], f32), T([320, 320], f32), T([1280, 320], f32), T([320, 1280], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1000, 512], f32)]), {'alpha': 0.0001})"
    },
    "aten._log_softmax.default": {
        "count": 1,
        "inputs": "((T([128, 1000], f32), 1, False), {})"
    },
    "aten._log_softmax_backward_data.default": {
        "count": 1,
        "inputs": "((T([128, 1000], f32), T([128, 1000], f32), 1, f32), {})"
    },
    "aten._softmax.default": {
        "count": 2,
        "inputs": "((T([128, 8, 50, 64], f32, stride=(76800, 64, 1536, 1)), 2, False), {})"
    },
    "aten._softmax_backward_data.default": {
        "count": 2,
        "inputs": "((T([128, 8, 3137, 8], f32, stride=(200768, 25096, 1, 3137)), T([128, 8, 3137, 8], f32), 2, f32), {})"
    },
    "aten._unsafe_view.default": {
        "count": 2,
        "inputs": "((T([128, 3137, 3, 8, 8], f32), [128, 3137, 192]), {})"
    },
    "aten.add.Tensor": {
        "count": 1,
        "inputs": "((T([64], f32), T([64], f32)), {})"
    },
    "aten.addmm.default": {
        "count": 1,
        "inputs": "((T([1000], f32), T([128, 512], f32, stride=(25600, 1)), T([512, 1000], f32, stride=(1, 512))), {})"
    },
    "aten.bmm.default": {
        "count": 2,
        "inputs": "((T([1024, 8, 8], f32), T([1024, 8, 3137], f32, stride=(25096, 1, 8))), {})"
    },
    "aten.cat.default": {
        "count": 4,
        "inputs": "(([T([128, 128, 7, 7], f32, stride=(6272, 1, 896, 128)), T([128, 192, 7, 7], f32, stride=(9408, 1, 1344, 192)), T([128, 192, 7, 7], f32, stride=(9408, 1, 1344, 192))], 1), {})"
    },
    "aten.clone.default": {
        "count": 1,
        "inputs": "((T([1000, 512], f32),), {})"
    },
    "aten.constant_pad_nd.default": {
        "count": 2,
        "inputs": "((T([128, 8, 3137, 8], f32, stride=(200768, 8, 64, 1)), [0, 0, -1, 0, 0, 0]), {})"
    },
    "aten.convolution.default": {
        "count": 2,
        "inputs": "((T([128, 192, 7, 7], f32, stride=(76800, 1, 10752, 1536)), T([192, 1, 7, 7], f32), T([192], f32), [1, 1], [3, 3], [1, 1], False, [0, 0], 192), {})"
    },
    "aten.convolution_backward.default": {
        "count": 1,
        "inputs": "((T([128, 64, 56, 56], f32, stride=(200704, 1, 3584, 64)), T([128, 3, 224, 224], f32), T([64, 3, 4, 4], f32), [64], [4, 4], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
    },
    "aten.gelu.default": {
        "count": 2,
        "inputs": "((T([128, 50, 2048], f32),), {})"
    },
    "aten.gelu_backward.default": {
        "count": 2,
        "inputs": "((T([128, 3137, 512], f32), T([128, 3137, 512], f32)), {})"
    },
    "aten.mm.default": {
        "count": 2,
        "inputs": "((T([192, 401536], f32, stride=(1, 192)), T([401536, 64], f32)), {})"
    },
    "aten.mul.Tensor": {
        "count": 2,
        "inputs": "((T([128, 8, 3136, 8], f32, stride=(200704, 8, 64, 1)), T([128, 8, 3136, 8], f32, stride=(200704, 8, 64, 1))), {})"
    },
    "aten.native_layer_norm.default": {
        "count": 5,
        "inputs": "((T([128, 50, 512], f32), [512], T([512], f32), T([512], f32), 1e-06), {})"
    },
    "aten.native_layer_norm_backward.default": {
        "count": 1,
        "inputs": "((T([128, 3136, 64], f32, stride=(200768, 64, 1)), T([128, 3136, 64], f32, stride=(200704, 1, 3136)), [64], T([128, 3136, 1], f32), T([128, 3136, 1], f32), T([64], f32), T([64], f32), [True, True, True]), {})"
    },
    "aten.nll_loss_backward.default": {
        "count": 1,
        "inputs": "((T([], f32), T([128, 1000], f32), T([128], i64), None, 1, -100, T([], f32)), {})"
    },
    "aten.nll_loss_forward.default": {
        "count": 1,
        "inputs": "((T([128, 1000], f32), T([128], i64), None, 1, -100), {})"
    },
    "aten.random_.to": {
        "count": 1,
        "inputs": "((T([128], i64), 1000), {})"
    },
    "aten.select_backward.default": {
        "count": 1,
        "inputs": "((T([128, 512], f32), [128, 50, 512], 1, 0), {})"
    },
    "aten.slice_backward.default": {
        "count": 2,
        "inputs": "((T([128, 1, 64], f32, stride=(200768, 64, 1)), [128, 3137, 64], 1, 0, 1, 1), {})"
    },
    "aten.split_with_sizes.default": {
        "count": 2,
        "inputs": "((T([128, 512, 7, 7], f32, stride=(76800, 1, 10752, 1536)), [128, 192, 192], 1), {})"
    },
    "aten.stack.default": {
        "count": 2,
        "inputs": "(([T([128, 8, 3137, 8], f32), T([128, 8, 3137, 8], f32), T([128, 8, 3137, 8], f32)],), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 1,
        "inputs": "((T([128, 1, 64], f32, stride=(200768, 64, 1)), [0], True), {})"
    },
    "aten.unbind.int": {
        "count": 2,
        "inputs": "((T([3, 128, 8, 50, 64], f32, stride=(512, 76800, 64, 1536, 1)),), {})"
    }
}