{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([96, 3, 7, 7], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([192, 96, 3, 3], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([384, 192, 3, 3], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([768, 384, 3, 3], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([1000, 768], f32)], [T([96, 3, 7, 7], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([384, 96, 1, 1], f32), T([96, 384, 1, 1], f32), T([192, 96, 3, 3], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([768, 192, 1, 1], f32), T([192, 768, 1, 1], f32), T([384, 192, 3, 3], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([768, 384, 3, 3], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([1000, 768], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64, 1000], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 30,
            "inputs": "((T([64, 96, 56, 56], f32), T([64, 96, 56, 56], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([64, 192, 28, 28], f32), T([64, 192, 28, 28], f32)), {})"
        },
        {
            "count": 90,
            "inputs": "((T([64, 384, 14, 14], f32), T([64, 384, 14, 14], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([64, 768, 7, 7], f32), T([64, 768, 7, 7], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([64, 768], f32), T([768, 1000], f32, stride=(1, 768))), {})"
        }
    ],
    "aten.avg_pool2d.default": [
        {
            "count": 6,
            "inputs": "((T([64, 96, 56, 56], f32), [3, 3], [1, 1], [1, 1], False, False), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 192, 28, 28], f32), [3, 3], [1, 1], [1, 1], False, False), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 384, 14, 14], f32), [3, 3], [1, 1], [1, 1], False, False), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 768, 7, 7], f32), [3, 3], [1, 1], [1, 1], False, False), {})"
        }
    ],
    "aten.avg_pool2d_backward.default": [
        {
            "count": 6,
            "inputs": "((T([64, 768, 7, 7], f32), T([64, 768, 7, 7], f32), [3, 3], [1, 1], [1, 1], False, False, None), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 384, 14, 14], f32), T([64, 384, 14, 14], f32), [3, 3], [1, 1], [1, 1], False, False, None), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 192, 28, 28], f32), T([64, 192, 28, 28], f32), [3, 3], [1, 1], [1, 1], False, False, None), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 96, 56, 56], f32), T([64, 96, 56, 56], f32), [3, 3], [1, 1], [1, 1], False, False, None), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 43,
            "inputs": "((T([96], f32),), {})"
        },
        {
            "count": 133,
            "inputs": "((T([384], f32),), {})"
        },
        {
            "count": 43,
            "inputs": "((T([192], f32),), {})"
        },
        {
            "count": 51,
            "inputs": "((T([768], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1536], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([3072], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 3, 7, 7], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([384, 96, 1, 1], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([96, 384, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([192, 96, 3, 3], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([768, 192, 1, 1], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([192, 768, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([384, 192, 3, 3], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1536, 384, 1, 1], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([384, 1536, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([768, 384, 3, 3], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([3072, 768, 1, 1], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([768, 3072, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 768], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([64, 3, 224, 224], f32), T([96, 3, 7, 7], f32), T([96], f32), [4, 4], [2, 2], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 96, 56, 56], f32), T([384, 96, 1, 1], f32), T([384], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 384, 56, 56], f32), T([96, 384, 1, 1], f32), T([96], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 96, 56, 56], f32), T([192, 96, 3, 3], f32), T([192], f32), [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 192, 28, 28], f32), T([768, 192, 1, 1], f32), T([768], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 768, 28, 28], f32), T([192, 768, 1, 1], f32), T([192], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 192, 28, 28], f32), T([384, 192, 3, 3], f32), T([384], f32), [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 384, 14, 14], f32), T([1536, 384, 1, 1], f32), T([1536], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 1536, 14, 14], f32), T([384, 1536, 1, 1], f32), T([384], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 14, 14], f32), T([768, 384, 3, 3], f32), T([768], f32), [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 768, 7, 7], f32), T([3072, 768, 1, 1], f32), T([3072], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 3072, 7, 7], f32), T([768, 3072, 1, 1], f32), T([768], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 6,
            "inputs": "((T([64, 768, 7, 7], f32), T([64, 3072, 7, 7], f32), T([768, 3072, 1, 1], f32), [768], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 3072, 7, 7], f32), T([64, 768, 7, 7], f32), T([3072, 768, 1, 1], f32), [3072], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 768, 7, 7], f32), T([64, 384, 14, 14], f32), T([768, 384, 3, 3], f32), [768], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 384, 14, 14], f32), T([64, 1536, 14, 14], f32), T([384, 1536, 1, 1], f32), [384], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 1536, 14, 14], f32), T([64, 384, 14, 14], f32), T([1536, 384, 1, 1], f32), [1536], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 14, 14], f32), T([64, 192, 28, 28], f32), T([384, 192, 3, 3], f32), [384], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 192, 28, 28], f32), T([64, 768, 28, 28], f32), T([192, 768, 1, 1], f32), [192], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 768, 28, 28], f32), T([64, 192, 28, 28], f32), T([768, 192, 1, 1], f32), [768], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 192, 28, 28], f32), T([64, 96, 56, 56], f32), T([192, 96, 3, 3], f32), [192], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 96, 56, 56], f32), T([64, 384, 56, 56], f32), T([96, 384, 1, 1], f32), [96], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 384, 56, 56], f32), T([64, 96, 56, 56], f32), T([384, 96, 1, 1], f32), [384], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 96, 56, 56], f32), T([64, 3, 224, 224], f32), T([96, 3, 7, 7], f32), [96], [4, 4], [2, 2], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([64, 768, 7, 7], f32, stride=(768, 1, 0, 0)), 49), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 6,
            "inputs": "((T([64, 384, 56, 56], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 768, 28, 28], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 1536, 14, 14], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 3072, 7, 7], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 6,
            "inputs": "((T([64, 3072, 7, 7], f32), T([64, 3072, 7, 7], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 1536, 14, 14], f32), T([64, 1536, 14, 14], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 768, 28, 28], f32), T([64, 768, 28, 28], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 384, 56, 56], f32), T([64, 384, 56, 56], f32)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([64, 768, 7, 7], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([1000, 768], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 64], f32, stride=(1, 1000)), T([64, 768], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 24,
            "inputs": "((T([64, 96, 56, 56], f32), T([96, 1, 1], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([64, 192, 28, 28], f32), T([192, 1, 1], f32)), {})"
        },
        {
            "count": 72,
            "inputs": "((T([64, 384, 14, 14], f32), T([384, 1, 1], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([64, 768, 7, 7], f32), T([768, 1, 1], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64, 768, 7, 7], f32), T([64, 768, 7, 7], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([64, 384, 14, 14], f32), T([64, 384, 14, 14], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64, 192, 28, 28], f32), T([64, 192, 28, 28], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64, 96, 56, 56], f32), T([64, 96, 56, 56], f32)), {})"
        }
    ],
    "aten.native_group_norm.default": [
        {
            "count": 12,
            "inputs": "((T([64, 96, 56, 56], f32), T([96], f32), T([96], f32), 64, 96, 3136, 1, 1e-05), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64, 192, 28, 28], f32), T([192], f32), T([192], f32), 64, 192, 784, 1, 1e-05), {})"
        },
        {
            "count": 36,
            "inputs": "((T([64, 384, 14, 14], f32), T([384], f32), T([384], f32), 64, 384, 196, 1, 1e-05), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64, 768, 7, 7], f32), T([768], f32), T([768], f32), 64, 768, 49, 1, 1e-05), {})"
        }
    ],
    "aten.native_group_norm_backward.default": [
        {
            "count": 12,
            "inputs": "((T([64, 768, 7, 7], f32), T([64, 768, 7, 7], f32), T([64, 1], f32), T([64, 1], f32), T([768], f32), 64, 768, 49, 1, [True, True, True]), {})"
        },
        {
            "count": 36,
            "inputs": "((T([64, 384, 14, 14], f32), T([64, 384, 14, 14], f32), T([64, 1], f32), T([64, 1], f32), T([384], f32), 64, 384, 196, 1, [True, True, True]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64, 192, 28, 28], f32), T([64, 192, 28, 28], f32), T([64, 1], f32), T([64, 1], f32), T([192], f32), 64, 192, 784, 1, [True, True, True]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64, 96, 56, 56], f32), T([64, 96, 56, 56], f32), T([64, 1], f32), T([64, 1], f32), T([96], f32), 64, 96, 3136, 1, [True, True, True]), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1, 1, 768], f32), [768], T([768], f32), T([768], f32), 1e-06), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1, 1, 768], f32), T([64, 1, 1, 768], f32), [768], T([64, 1, 1, 1], f32), T([64, 1, 1, 1], f32), T([768], f32), T([768], f32), [True, True, True]), {})"
        }
    ],
    "aten.neg.default": [
        {
            "count": 6,
            "inputs": "((T([64, 768, 7, 7], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 384, 14, 14], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 192, 28, 28], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 96, 56, 56], f32),), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([64, 1000], f32), T([64], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([64], i64), 1000), {})"
        }
    ],
    "aten.sub.Tensor": [
        {
            "count": 6,
            "inputs": "((T([64, 96, 56, 56], f32), T([64, 96, 56, 56], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 192, 28, 28], f32), T([64, 192, 28, 28], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 384, 14, 14], f32), T([64, 384, 14, 14], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 768, 7, 7], f32), T([64, 768, 7, 7], f32)), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64, 768, 7, 7], f32), [0, 2, 3], True), {})"
        },
        {
            "count": 36,
            "inputs": "((T([64, 384, 14, 14], f32), [0, 2, 3], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64, 192, 28, 28], f32), [0, 2, 3], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64, 96, 56, 56], f32), [0, 2, 3], True), {})"
        }
    ]
}