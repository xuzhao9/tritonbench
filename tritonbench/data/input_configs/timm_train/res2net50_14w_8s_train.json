{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([64, 3, 7, 7], f32), T([112, 64, 1, 1], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([256, 112, 1, 1], f32), T([256, 64, 1, 1], f32), T([112, 256, 1, 1], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([256, 112, 1, 1], f32), T([112, 256, 1, 1], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([256, 112, 1, 1], f32), T([224, 256, 1, 1], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([512, 224, 1, 1], f32), T([512, 256, 1, 1], f32), T([224, 512, 1, 1], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([512, 224, 1, 1], f32), T([224, 512, 1, 1], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([512, 224, 1, 1], f32), T([224, 512, 1, 1], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([512, 224, 1, 1], f32), T([448, 512, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([1024, 512, 1, 1], f32), T([448, 1024, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([448, 1024, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([448, 1024, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([448, 1024, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([448, 1024, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([896, 1024, 1, 1], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([2048, 896, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([896, 2048, 1, 1], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([2048, 896, 1, 1], f32), T([896, 2048, 1, 1], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([2048, 896, 1, 1], f32), T([1000, 2048], f32)], [T([64, 3, 7, 7], f32), T([112, 64, 1, 1], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([256, 112, 1, 1], f32), T([256, 64, 1, 1], f32), T([112, 256, 1, 1], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([256, 112, 1, 1], f32), T([112, 256, 1, 1], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([14, 14, 3, 3], f32), T([256, 112, 1, 1], f32), T([224, 256, 1, 1], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([512, 224, 1, 1], f32), T([512, 256, 1, 1], f32), T([224, 512, 1, 1], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([512, 224, 1, 1], f32), T([224, 512, 1, 1], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([512, 224, 1, 1], f32), T([224, 512, 1, 1], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([28, 28, 3, 3], f32), T([512, 224, 1, 1], f32), T([448, 512, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([1024, 512, 1, 1], f32), T([448, 1024, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([448, 1024, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([448, 1024, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([448, 1024, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([448, 1024, 1, 1], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([56, 56, 3, 3], f32), T([1024, 448, 1, 1], f32), T([896, 1024, 1, 1], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([2048, 896, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([896, 2048, 1, 1], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([2048, 896, 1, 1], f32), T([896, 2048, 1, 1], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([112, 112, 3, 3], f32), T([2048, 896, 1, 1], f32), T([1000, 2048], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128, 1000], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 12,
            "inputs": "((T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32, stride=(351232, 3136, 56, 1))), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32, stride=(175616, 784, 28, 1))), {})"
        },
        {
            "count": 30,
            "inputs": "((T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32, stride=(87808, 196, 14, 1))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32, stride=(43904, 49, 7, 1))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 112, 7, 7], f32, stride=(43904, 49, 7, 1)), T([128, 112, 7, 7], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 2048, 7, 7], f32), T([128, 2048, 7, 7], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1024, 14, 14], f32), T([128, 1024, 14, 14], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([128, 56, 14, 14], f32, stride=(87808, 196, 14, 1)), T([128, 56, 14, 14], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 512, 28, 28], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 28, 28, 28], f32, stride=(175616, 784, 28, 1)), T([128, 28, 28, 28], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 256, 56, 56], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 14, 56, 56], f32, stride=(351232, 3136, 56, 1)), T([128, 14, 56, 56], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 56, 56], f32), T([128, 64, 56, 56], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 149,
            "inputs": "((T([], i64), 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 256, 56, 56], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 512, 28, 28], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1024, 14, 14], f32), T([128, 1024, 14, 14], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 2048, 7, 7], f32), T([128, 2048, 7, 7], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([128, 2048], f32), T([2048, 1000], f32, stride=(1, 2048))), {})"
        }
    ],
    "aten.avg_pool2d.default": [
        {
            "count": 1,
            "inputs": "((T([128, 14, 56, 56], f32, stride=(351232, 3136, 56, 1)), [3, 3], [1, 1], [1, 1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 28, 56, 56], f32, stride=(702464, 3136, 56, 1)), [3, 3], [2, 2], [1, 1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 56, 28, 28], f32, stride=(351232, 784, 28, 1)), [3, 3], [2, 2], [1, 1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 112, 14, 14], f32, stride=(175616, 196, 14, 1)), [3, 3], [2, 2], [1, 1]), {})"
        }
    ],
    "aten.avg_pool2d_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 112, 7, 7], f32, stride=(43904, 49, 7, 1)), T([128, 112, 14, 14], f32, stride=(175616, 196, 14, 1)), [3, 3], [2, 2], [1, 1], False, True, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 56, 14, 14], f32, stride=(87808, 196, 14, 1)), T([128, 56, 28, 28], f32, stride=(351232, 784, 28, 1)), [3, 3], [2, 2], [1, 1], False, True, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 28, 28, 28], f32, stride=(175616, 784, 28, 1)), T([128, 28, 56, 56], f32, stride=(702464, 3136, 56, 1)), [3, 3], [2, 2], [1, 1], False, True, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 14, 56, 56], f32, stride=(351232, 3136, 56, 1)), T([128, 14, 56, 56], f32, stride=(351232, 3136, 56, 1)), [3, 3], [1, 1], [1, 1], False, True, None), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 2,
            "inputs": "(([T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32)], 1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32, stride=(351232, 3136, 56, 1))], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32)], 1), {})"
        },
        {
            "count": 6,
            "inputs": "(([T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32, stride=(175616, 784, 28, 1))], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32)], 1), {})"
        },
        {
            "count": 10,
            "inputs": "(([T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32, stride=(87808, 196, 14, 1))], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32)], 1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32, stride=(43904, 49, 7, 1))], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 112, 14, 14], f32), T([128, 112, 14, 14], f32), T([128, 112, 14, 14], f32), T([128, 112, 14, 14], f32), T([128, 112, 14, 14], f32), T([128, 112, 14, 14], f32), T([128, 112, 14, 14], f32), T([128, 112, 14, 14], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 56, 28, 28], f32), T([128, 56, 28, 28], f32), T([128, 56, 28, 28], f32), T([128, 56, 28, 28], f32), T([128, 56, 28, 28], f32), T([128, 56, 28, 28], f32), T([128, 56, 28, 28], f32), T([128, 56, 28, 28], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 28, 56, 56], f32), T([128, 28, 56, 56], f32), T([128, 28, 56, 56], f32), T([128, 28, 56, 56], f32), T([128, 28, 56, 56], f32), T([128, 28, 56, 56], f32), T([128, 28, 56, 56], f32), T([128, 28, 56, 56], f32)], 1), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 2,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 48,
            "inputs": "((T([112], f32),), {})"
        },
        {
            "count": 42,
            "inputs": "((T([14], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([224], f32),), {})"
        },
        {
            "count": 56,
            "inputs": "((T([28], f32),), {})"
        },
        {
            "count": 10,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([448], f32),), {})"
        },
        {
            "count": 84,
            "inputs": "((T([56], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([1024], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([896], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([2048], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 3, 7, 7], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([112, 64, 1, 1], f32),), {})"
        },
        {
            "count": 21,
            "inputs": "((T([14, 14, 3, 3], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 112, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 64, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([112, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([224, 256, 1, 1], f32),), {})"
        },
        {
            "count": 28,
            "inputs": "((T([28, 28, 3, 3], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 224, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 256, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([224, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([448, 512, 1, 1], f32),), {})"
        },
        {
            "count": 42,
            "inputs": "((T([56, 56, 3, 3], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([1024, 448, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 512, 1, 1], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([448, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([896, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 21,
            "inputs": "((T([112, 112, 3, 3], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2048, 896, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2048, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([896, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 2048], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([128, 3, 224, 224], f32), T([64, 3, 7, 7], f32), None, [2, 2], [3, 3], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 56, 56], f32), T([112, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 14, 56, 56], f32, stride=(351232, 3136, 56, 1)), T([14, 14, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 112, 56, 56], f32), T([256, 112, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 56, 56], f32), T([256, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 56, 56], f32), T([112, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 14, 56, 56], f32), T([14, 14, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), T([224, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 28, 56, 56], f32, stride=(702464, 3136, 56, 1)), T([28, 28, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 224, 28, 28], f32), T([512, 224, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), T([512, 256, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 28, 28], f32), T([224, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 28, 28, 28], f32, stride=(175616, 784, 28, 1)), T([28, 28, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 28, 28, 28], f32), T([28, 28, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 28, 28], f32), T([448, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 56, 28, 28], f32, stride=(351232, 784, 28, 1)), T([56, 56, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 448, 14, 14], f32), T([1024, 448, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 28, 28], f32), T([1024, 512, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 1024, 14, 14], f32), T([448, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 56, 14, 14], f32, stride=(87808, 196, 14, 1)), T([56, 56, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 30,
            "inputs": "((T([128, 56, 14, 14], f32), T([56, 56, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 14, 14], f32), T([896, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 112, 14, 14], f32, stride=(175616, 196, 14, 1)), T([112, 112, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 896, 7, 7], f32), T([2048, 896, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 14, 14], f32), T([2048, 1024, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 2048, 7, 7], f32), T([896, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 112, 7, 7], f32, stride=(43904, 49, 7, 1)), T([112, 112, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 112, 7, 7], f32), T([112, 112, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 3,
            "inputs": "((T([128, 2048, 7, 7], f32), T([128, 896, 7, 7], f32), T([2048, 896, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([112, 112, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32, stride=(43904, 49, 7, 1)), T([112, 112, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 896, 7, 7], f32), T([128, 2048, 7, 7], f32), T([896, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2048, 7, 7], f32), T([128, 1024, 14, 14], f32), T([2048, 1024, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 112, 7, 7], f32), T([128, 112, 14, 14], f32, stride=(175616, 196, 14, 1)), T([112, 112, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 896, 14, 14], f32), T([128, 1024, 14, 14], f32), T([896, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1024, 14, 14], f32), T([128, 448, 14, 14], f32), T([1024, 448, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 30,
            "inputs": "((T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([56, 56, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32, stride=(87808, 196, 14, 1)), T([56, 56, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 448, 14, 14], f32), T([128, 1024, 14, 14], f32), T([448, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 14, 14], f32), T([128, 512, 28, 28], f32), T([1024, 512, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 56, 14, 14], f32), T([128, 56, 28, 28], f32, stride=(351232, 784, 28, 1)), T([56, 56, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 448, 28, 28], f32), T([128, 512, 28, 28], f32), T([448, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 224, 28, 28], f32), T([512, 224, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([28, 28, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32, stride=(175616, 784, 28, 1)), T([28, 28, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 224, 28, 28], f32), T([128, 512, 28, 28], f32), T([224, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 256, 56, 56], f32), T([512, 256, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 28, 28, 28], f32), T([128, 28, 56, 56], f32, stride=(702464, 3136, 56, 1)), T([28, 28, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 224, 56, 56], f32), T([128, 256, 56, 56], f32), T([224, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 112, 56, 56], f32), T([256, 112, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([14, 14, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32, stride=(351232, 3136, 56, 1)), T([14, 14, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 112, 56, 56], f32), T([128, 256, 56, 56], f32), T([112, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 64, 56, 56], f32), T([256, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 112, 56, 56], f32), T([128, 64, 56, 56], f32), T([112, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([128, 3, 224, 224], f32), T([64, 3, 7, 7], f32), [0], [2, 2], [3, 3], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 112, 56, 56], f32), T([112], f32), T([112], f32), T([112], f32), T([112], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 21,
            "inputs": "((T([128, 14, 56, 56], f32), T([14], f32), T([14], f32), T([14], f32), T([14], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 256, 56, 56], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 224, 56, 56], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 28,
            "inputs": "((T([128, 28, 28, 28], f32), T([28], f32), T([28], f32), T([28], f32), T([28], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 512, 28, 28], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 224, 28, 28], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 448, 28, 28], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 42,
            "inputs": "((T([128, 56, 14, 14], f32), T([56], f32), T([56], f32), T([56], f32), T([56], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 1024, 14, 14], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 448, 14, 14], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 896, 14, 14], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 21,
            "inputs": "((T([128, 112, 7, 7], f32), T([112], f32), T([112], f32), T([112], f32), T([112], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 2048, 7, 7], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 896, 7, 7], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), True, 0.1, 1e-05), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 4,
            "inputs": "((T([128, 2048, 7, 7], f32), T([128, 2048, 7, 7], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 21,
            "inputs": "((T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), T([112], f32), T([112], f32), T([112], f32), T([112], f32), T([112], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 896, 7, 7], f32), T([128, 896, 7, 7], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 896, 14, 14], f32), T([128, 896, 14, 14], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 1024, 14, 14], f32), T([128, 1024, 14, 14], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 42,
            "inputs": "((T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), T([56], f32), T([56], f32), T([56], f32), T([56], f32), T([56], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 448, 14, 14], f32), T([128, 448, 14, 14], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 448, 28, 28], f32), T([128, 448, 28, 28], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 512, 28, 28], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 28,
            "inputs": "((T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), T([28], f32), T([28], f32), T([28], f32), T([28], f32), T([28], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 224, 28, 28], f32), T([128, 224, 28, 28], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 224, 56, 56], f32), T([128, 224, 56, 56], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 256, 56, 56], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 21,
            "inputs": "((T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), T([14], f32), T([14], f32), T([14], f32), T([14], f32), T([14], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 112, 56, 56], f32), T([128, 112, 56, 56], f32), T([112], f32), T([112], f32), T([112], f32), T([112], f32), T([112], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([128, 64, 112, 112], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([128, 2048, 7, 7], f32, stride=(2048, 1, 0, 0)), 49), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), [3, 3], [2, 2], [1, 1]), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 64, 56, 56], f32), T([128, 64, 112, 112], f32), [3, 3], [2, 2], [1, 1], [1, 1], False, T([128, 64, 56, 56], i64)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([128, 2048, 7, 7], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([1000, 2048], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 128], f32, stride=(1, 1000)), T([128, 2048], f32)), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([128, 1000], f32), T([128], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([128], i64), 1000), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 112, 56, 56], f32),), {})"
        },
        {
            "count": 21,
            "inputs": "((T([128, 14, 56, 56], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 256, 56, 56], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 224, 56, 56], f32),), {})"
        },
        {
            "count": 28,
            "inputs": "((T([128, 28, 28, 28], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 28, 28], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 224, 28, 28], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 448, 28, 28], f32),), {})"
        },
        {
            "count": 42,
            "inputs": "((T([128, 56, 14, 14], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1024, 14, 14], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 448, 14, 14], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 896, 14, 14], f32),), {})"
        },
        {
            "count": 21,
            "inputs": "((T([128, 112, 7, 7], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 2048, 7, 7], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 896, 7, 7], f32),), {})"
        }
    ],
    "aten.split.Tensor": [
        {
            "count": 3,
            "inputs": "((T([128, 112, 56, 56], f32), 14, 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 224, 56, 56], f32), 28, 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 224, 28, 28], f32), 28, 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 448, 28, 28], f32), 56, 1), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 448, 14, 14], f32), 56, 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 896, 14, 14], f32), 112, 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 896, 7, 7], f32), 112, 1), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), [0], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 3,
            "inputs": "((T([128, 2048, 7, 7], f32), T([128, 2048, 7, 7], f32), 0), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 112, 7, 7], f32, stride=(43904, 49, 7, 1)), T([128, 112, 7, 7], f32), 0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 112, 7, 7], f32), T([128, 112, 7, 7], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 896, 7, 7], f32), T([128, 896, 7, 7], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 896, 14, 14], f32), T([128, 896, 14, 14], f32), 0), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1024, 14, 14], f32), T([128, 1024, 14, 14], f32), 0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 56, 14, 14], f32, stride=(87808, 196, 14, 1)), T([128, 56, 14, 14], f32), 0), {})"
        },
        {
            "count": 30,
            "inputs": "((T([128, 56, 14, 14], f32), T([128, 56, 14, 14], f32), 0), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 448, 14, 14], f32), T([128, 448, 14, 14], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 448, 28, 28], f32), T([128, 448, 28, 28], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 512, 28, 28], f32), 0), {})"
        },
        {
            "count": 10,
            "inputs": "((T([128, 28, 28, 28], f32, stride=(175616, 784, 28, 1)), T([128, 28, 28, 28], f32), 0), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 28, 28, 28], f32), T([128, 28, 28, 28], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 224, 28, 28], f32), T([128, 224, 28, 28], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 224, 56, 56], f32), T([128, 224, 56, 56], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 256, 56, 56], f32), 0), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 14, 56, 56], f32, stride=(351232, 3136, 56, 1)), T([128, 14, 56, 56], f32), 0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 14, 56, 56], f32), T([128, 14, 56, 56], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 112, 56, 56], f32), T([128, 112, 56, 56], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([128, 64, 112, 112], f32), 0), {})"
        }
    ]
}