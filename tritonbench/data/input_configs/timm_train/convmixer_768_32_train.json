{
    "aten._foreach_add.List": {
        "count": 1,
        "inputs": "(([T([768, 3, 7, 7], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([1000, 768], f32)], [T([768, 3, 7, 7], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([768, 1, 7, 7], f32), T([768, 768, 1, 1], f32), T([1000, 768], f32)]), {'alpha': 0.0001})"
    },
    "aten._log_softmax.default": {
        "count": 1,
        "inputs": "((T([32, 1000], f32), 1, False), {})"
    },
    "aten._log_softmax_backward_data.default": {
        "count": 1,
        "inputs": "((T([32, 1000], f32), T([32, 1000], f32), 1, f32), {})"
    },
    "aten.add.Tensor": {
        "count": 64,
        "inputs": "((T([32, 768, 32, 32], f32), T([32, 768, 32, 32], f32)), {})"
    },
    "aten.add_.Tensor": {
        "count": 65,
        "inputs": "((T([], i64), 1), {})"
    },
    "aten.addmm.default": {
        "count": 1,
        "inputs": "((T([1000], f32), T([32, 768], f32), T([768, 1000], f32, stride=(1, 768))), {})"
    },
    "aten.clone.default": {
        "count": 1,
        "inputs": "((T([1000, 768], f32),), {})"
    },
    "aten.convolution.default": {
        "count": 32,
        "inputs": "((T([32, 768, 32, 32], f32), T([768, 768, 1, 1], f32), T([768], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
    },
    "aten.convolution_backward.default": {
        "count": 1,
        "inputs": "((T([32, 768, 32, 32], f32), T([32, 3, 224, 224], f32), T([768, 3, 7, 7], f32), [768], [7, 7], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
    },
    "aten.cudnn_batch_norm.default": {
        "count": 65,
        "inputs": "((T([32, 768, 32, 32], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), True, 0.1, 1e-05), {})"
    },
    "aten.cudnn_batch_norm_backward.default": {
        "count": 65,
        "inputs": "((T([32, 768, 32, 32], f32), T([32, 768, 32, 32], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), 1e-05, T([0], u8)), {})"
    },
    "aten.div.Scalar": {
        "count": 1,
        "inputs": "((T([32, 768, 32, 32], f32, stride=(768, 1, 0, 0)), 1024), {})"
    },
    "aten.mean.dim": {
        "count": 1,
        "inputs": "((T([32, 768, 32, 32], f32), [-1, -2], True), {})"
    },
    "aten.mm.default": {
        "count": 1,
        "inputs": "((T([1000, 32], f32, stride=(1, 1000)), T([32, 768], f32)), {})"
    },
    "aten.nll_loss_backward.default": {
        "count": 1,
        "inputs": "((T([], f32), T([32, 1000], f32), T([32], i64), None, 1, -100, T([], f32)), {})"
    },
    "aten.nll_loss_forward.default": {
        "count": 1,
        "inputs": "((T([32, 1000], f32), T([32], i64), None, 1, -100), {})"
    },
    "aten.random_.to": {
        "count": 1,
        "inputs": "((T([32], i64), 1000), {})"
    },
    "aten.relu.default": {
        "count": 65,
        "inputs": "((T([32, 768, 32, 32], f32),), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 1,
        "inputs": "((T([32, 1000], f32), [0], True), {})"
    },
    "aten.threshold_backward.default": {
        "count": 65,
        "inputs": "((T([32, 768, 32, 32], f32), T([32, 768, 32, 32], f32), 0), {})"
    }
}