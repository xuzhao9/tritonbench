{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([16, 3, 3, 3], f32), T([16, 1, 1, 1], f32), T([32, 16, 3, 3], f32), T([32, 1, 1, 1], f32), T([64, 32, 3, 3], f32), T([64, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([256, 128, 1, 1], f32), T([256, 1, 1, 1], f32), T([64, 128, 1, 1], f32), T([64, 1, 1, 1], f32), T([64, 64, 3, 3], f32), T([64, 1, 1, 1], f32), T([64, 64, 3, 3], f32), T([64, 1, 1, 1], f32), T([256, 64, 1, 1], f32), T([256, 1, 1, 1], f32), T([64, 256, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 1, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([512, 128, 1, 1], f32), T([512, 1, 1, 1], f32), T([128, 512, 1, 1], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([512, 128, 1, 1], f32), T([512, 1, 1, 1], f32), T([128, 512, 1, 1], f32), T([512, 128, 1, 1], f32), T([1536, 512, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 512, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1536, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([2304, 1536, 1, 1], f32), T([2304, 1, 1, 1], f32), T([1000, 2304], f32)], [T([16, 3, 3, 3], f32), T([16, 1, 1, 1], f32), T([32, 16, 3, 3], f32), T([32, 1, 1, 1], f32), T([64, 32, 3, 3], f32), T([64, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([256, 128, 1, 1], f32), T([256, 1, 1, 1], f32), T([64, 128, 1, 1], f32), T([64, 1, 1, 1], f32), T([64, 64, 3, 3], f32), T([64, 1, 1, 1], f32), T([64, 64, 3, 3], f32), T([64, 1, 1, 1], f32), T([256, 64, 1, 1], f32), T([256, 1, 1, 1], f32), T([64, 256, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 1, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([512, 128, 1, 1], f32), T([512, 1, 1, 1], f32), T([128, 512, 1, 1], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([512, 128, 1, 1], f32), T([512, 1, 1, 1], f32), T([128, 512, 1, 1], f32), T([512, 128, 1, 1], f32), T([1536, 512, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 512, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1536, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([384, 64, 3, 3], f32), T([384, 1, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536, 1, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1536, 384, 1, 1], f32), T([2304, 1536, 1, 1], f32), T([2304, 1, 1, 1], f32), T([1000, 2304], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128, 1000], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 3,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 256, 56, 56], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 512, 28, 28], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 1536, 14, 14], f32), T([128, 1536, 14, 14], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 1536, 7, 7], f32), T([128, 1536, 7, 7], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 128, 56, 56], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([128, 2304], f32), T([2304, 1000], f32, stride=(1, 2304))), {})"
        }
    ],
    "aten.avg_pool2d.default": [
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), [2, 2], [2, 2], [0, 0], True, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 28, 28], f32), [2, 2], [2, 2], [0, 0], True, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1536, 14, 14], f32), [2, 2], [2, 2], [0, 0], True, False), {})"
        }
    ],
    "aten.avg_pool2d_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1536, 7, 7], f32), T([128, 1536, 14, 14], f32), [2, 2], [2, 2], [0, 0], True, False, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 512, 28, 28], f32), [2, 2], [2, 2], [0, 0], True, False, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 256, 56, 56], f32), [2, 2], [2, 2], [0, 0], True, False, None), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 1,
            "inputs": "((T([128, 16, 112, 112], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 56, 56], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 128, 28, 28], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 28, 28], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 384, 14, 14], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 384, 7, 7], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2304, 7, 7], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 20,
            "inputs": "((T([1536], f32),), {})"
        },
        {
            "count": 36,
            "inputs": "((T([384], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2304], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 16, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 32, 3, 3], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 1, 1, 1], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 64, 3, 3], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 128, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 3, 3], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 64, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 256, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 128, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1536, 512, 1, 1], f32),), {})"
        },
        {
            "count": 11,
            "inputs": "((T([1536, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([384, 512, 1, 1], f32),), {})"
        },
        {
            "count": 27,
            "inputs": "((T([384, 1, 1, 1], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([384, 64, 3, 3], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1536, 384, 1, 1], f32),), {})"
        },
        {
            "count": 17,
            "inputs": "((T([384, 1536, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1536, 1536, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2304, 1536, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2304, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 2304], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([128, 3, 224, 224], f32), T([16, 3, 3, 3], f32), T([16], f32), [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 112, 112], f32), T([32, 16, 3, 3], f32), T([32], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([64, 32, 3, 3], f32), T([64], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([128, 64, 3, 3], f32), T([128], f32), [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([256, 128, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([64, 128, 1, 1], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 56, 56], f32), T([64, 64, 3, 3], f32), T([64], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 56, 56], f32), T([256, 64, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32), T([64, 256, 1, 1], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 1, 1], f32), T([256, 64, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 28, 28], f32), T([512, 256, 1, 1], f32), T([512], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 256, 1, 1], f32), T([128], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 64, 3, 3], f32), T([128], f32), [2, 2], [1, 1], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 64, 3, 3], f32), T([128], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 28, 28], f32), T([512, 128, 1, 1], f32), T([512], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 1, 1], f32), T([128, 512, 1, 1], f32), T([128], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 1, 1], f32), T([512, 128, 1, 1], f32), T([512], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 512, 1, 1], f32), T([128], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 14, 14], f32), T([1536, 512, 1, 1], f32), T([1536], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 28, 28], f32), T([384, 512, 1, 1], f32), T([384], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 28, 28], f32), T([384, 64, 3, 3], f32), T([384], f32), [2, 2], [1, 1], [1, 1], False, [0, 0], 6), {})"
        },
        {
            "count": 11,
            "inputs": "((T([128, 384, 14, 14], f32), T([384, 64, 3, 3], f32), T([384], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 6), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 384, 14, 14], f32), T([1536, 384, 1, 1], f32), T([1536], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 1536, 1, 1], f32), T([384, 1536, 1, 1], f32), T([384], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 384, 1, 1], f32), T([1536, 384, 1, 1], f32), T([1536], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 14, 14], f32), T([384, 1536, 1, 1], f32), T([384], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1536, 7, 7], f32), T([1536, 1536, 1, 1], f32), T([1536], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 14, 14], f32), T([384, 64, 3, 3], f32), T([384], f32), [2, 2], [1, 1], [1, 1], False, [0, 0], 6), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 384, 7, 7], f32), T([384, 64, 3, 3], f32), T([384], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 6), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 384, 7, 7], f32), T([1536, 384, 1, 1], f32), T([1536], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 7, 7], f32), T([384, 1536, 1, 1], f32), T([384], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1536, 7, 7], f32), T([2304, 1536, 1, 1], f32), T([2304], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 2304, 7, 7], f32), T([128, 1536, 7, 7], f32), T([2304, 1536, 1, 1], f32), [2304], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 1536, 1, 1], f32), T([128, 384, 1, 1], f32), T([1536, 384, 1, 1], f32), [1536], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 384, 1, 1], f32), T([128, 1536, 1, 1], f32), T([384, 1536, 1, 1], f32), [384], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 7, 7], f32), T([128, 384, 7, 7], f32), T([1536, 384, 1, 1], f32), [1536], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 384, 7, 7], f32), T([128, 384, 7, 7], f32), T([384, 64, 3, 3], f32), [384], [1, 1], [1, 1], [1, 1], False, [0, 0], 6, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 384, 7, 7], f32), T([128, 1536, 7, 7], f32), T([384, 1536, 1, 1], f32), [384], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 7, 7], f32), T([128, 384, 14, 14], f32), T([384, 64, 3, 3], f32), [384], [2, 2], [1, 1], [1, 1], False, [0, 0], 6, [True, True, True]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 384, 14, 14], f32), T([128, 1536, 14, 14], f32), T([384, 1536, 1, 1], f32), [384], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1536, 7, 7], f32), T([128, 1536, 7, 7], f32), T([1536, 1536, 1, 1], f32), [1536], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 14, 14], f32), T([128, 384, 14, 14], f32), T([1536, 384, 1, 1], f32), [1536], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 11,
            "inputs": "((T([128, 384, 14, 14], f32), T([128, 384, 14, 14], f32), T([384, 64, 3, 3], f32), [384], [1, 1], [1, 1], [1, 1], False, [0, 0], 6, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 14, 14], f32), T([128, 384, 28, 28], f32), T([384, 64, 3, 3], f32), [384], [2, 2], [1, 1], [1, 1], False, [0, 0], 6, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 28, 28], f32), T([128, 512, 28, 28], f32), T([384, 512, 1, 1], f32), [384], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1536, 14, 14], f32), T([128, 512, 14, 14], f32), T([1536, 512, 1, 1], f32), [1536], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 1, 1], f32), T([128, 128, 1, 1], f32), T([512, 128, 1, 1], f32), [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 512, 1, 1], f32), [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 128, 28, 28], f32), T([512, 128, 1, 1], f32), [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 128, 28, 28], f32), T([128, 64, 3, 3], f32), [128], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 512, 28, 28], f32), T([128, 512, 1, 1], f32), [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 128, 56, 56], f32), T([128, 64, 3, 3], f32), [128], [2, 2], [1, 1], [1, 1], False, [0, 0], 2, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 256, 56, 56], f32), T([128, 256, 1, 1], f32), [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 256, 28, 28], f32), T([512, 256, 1, 1], f32), [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32), T([128, 64, 1, 1], f32), T([256, 64, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 1, 1], f32), T([128, 256, 1, 1], f32), T([64, 256, 1, 1], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 64, 56, 56], f32), T([256, 64, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 56, 56], f32), T([128, 64, 56, 56], f32), T([64, 64, 3, 3], f32), [64], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 56, 56], f32), T([128, 128, 56, 56], f32), T([64, 128, 1, 1], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 128, 56, 56], f32), T([256, 128, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 64, 112, 112], f32), T([128, 64, 3, 3], f32), [128], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([128, 32, 112, 112], f32), T([64, 32, 3, 3], f32), [64], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([128, 16, 112, 112], f32), T([32, 16, 3, 3], f32), [32], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 112, 112], f32), T([128, 3, 224, 224], f32), T([16, 3, 3, 3], f32), [16], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([128, 2304, 7, 7], f32, stride=(2304, 1, 0, 0)), 49), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 7, 7], f32, stride=(1536, 1, 0, 0)), 49), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 14, 14], f32, stride=(1536, 1, 0, 0)), 196), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 28, 28], f32, stride=(512, 1, 0, 0)), 784), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32, stride=(256, 1, 0, 0)), 3136), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 28, 28], f32), [2, 3], True), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 14, 14], f32), [2, 3], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 7, 7], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2304, 7, 7], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([1000, 2304], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 128], f32, stride=(1, 1000)), T([128, 2304], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 2,
            "inputs": "((T([16, 1, 1, 1], f32), 0.34412564994580647), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 1, 1, 1], f32), 0.1490107774734497), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 1, 1, 1], f32), 0.10536653122135592), {})"
        },
        {
            "count": 10,
            "inputs": "((T([128, 1, 1, 1], f32), 0.07450538873672485), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 56, 56], f32), 1.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1, 1, 1], f32), 0.1580497968320339), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 1, 1, 1], f32), 0.1580497968320339), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 1, 1, 1], f32), 0.07450538873672485), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1, 1, 1], f32), 0.22351616621017456), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 256, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 56, 56], f32), 2.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 56, 56], f32), 0.2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 56, 56], f32), 0.9805806756909201), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 1, 1, 1], f32), 0.11175808310508728), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1, 1, 1], f32), 0.11175808310508728), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 1, 1, 1], f32), 0.1580497968320339), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 512, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 28, 28], f32), 2.0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 28, 28], f32), 0.2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 28, 28], f32), 0.9805806756909201), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1, 1, 1], f32), 0.07902489841601695), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 28, 28], f32), 0.9622504486493761), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1536, 1, 1, 1], f32), 0.07902489841601695), {})"
        },
        {
            "count": 2,
            "inputs": "((T([384, 1, 1, 1], f32), 0.07902489841601695), {})"
        },
        {
            "count": 36,
            "inputs": "((T([384, 1, 1, 1], f32), 0.07450538873672485), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1536, 1, 1, 1], f32), 0.09125009274634042), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 1536, 14, 14], f32), T([128, 1536, 1, 1], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 1536, 14, 14], f32), 2.0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 1536, 14, 14], f32), 0.2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 14, 14], f32), 0.9805806756909201), {})"
        },
        {
            "count": 16,
            "inputs": "((T([384, 1, 1, 1], f32), 0.04562504637317021), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 14, 14], f32), 0.9622504486493761), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 14, 14], f32), 0.9449111825230679), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 14, 14], f32), 0.9284766908852592), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 14, 14], f32), 0.9128709291752768), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 14, 14], f32), 0.8980265101338745), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1536, 1, 1, 1], f32), 0.04562504637317021), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 7, 7], f32), T([128, 1536, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 7, 7], f32), 2.0), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 7, 7], f32), 0.2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 7, 7], f32), 0.9805806756909201), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 7, 7], f32), 0.9622504486493761), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2304, 1, 1, 1], f32), 0.04562504637317021), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 7, 7], f32), T([128, 1536, 7, 7], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 14, 14], f32), T([128, 1536, 14, 14], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 512, 28, 28], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 256, 56, 56], f32)), {})"
        }
    ],
    "aten.native_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([1, 16, 27], f32), T([16], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 32, 144], f32), T([32], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 64, 288], f32), T([64], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([1, 128, 576], f32), T([128], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 256, 128], f32), T([256], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 64, 128], f32), T([64], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 64, 576], f32), T([64], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 256, 64], f32), T([256], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 512, 256], f32), T([512], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 256], f32), T([128], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 512, 128], f32), T([512], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 512], f32), T([128], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1536, 512], f32), T([1536], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 384, 512], f32), T([384], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1, 384, 576], f32), T([384], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 9,
            "inputs": "((T([1, 1536, 384], f32), T([1536], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1, 384, 1536], f32), T([384], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1536, 1536], f32), T([1536], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 2304, 1536], f32), T([2304], f32), None, None, None, True, 0.0, 1e-05), {})"
        }
    ],
    "aten.native_batch_norm_backward.default": [
        {
            "count": 1,
            "inputs": "((T([1, 2304, 1536], f32), T([1, 2304, 1536], f32), T([2304], f32), None, None, T([2304], f32), T([2304], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 9,
            "inputs": "((T([1, 1536, 384], f32), T([1, 1536, 384], f32), T([1536], f32), None, None, T([1536], f32), T([1536], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1, 384, 576], f32), T([1, 384, 576], f32), T([384], f32), None, None, T([384], f32), T([384], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1, 384, 1536], f32), T([1, 384, 1536], f32), T([384], f32), None, None, T([384], f32), T([384], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1536, 1536], f32), T([1, 1536, 1536], f32), T([1536], f32), None, None, T([1536], f32), T([1536], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 384, 512], f32), T([1, 384, 512], f32), T([384], f32), None, None, T([384], f32), T([384], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1536, 512], f32), T([1, 1536, 512], f32), T([1536], f32), None, None, T([1536], f32), T([1536], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 512, 128], f32), T([1, 512, 128], f32), T([512], f32), None, None, T([512], f32), T([512], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 5,
            "inputs": "((T([1, 128, 576], f32), T([1, 128, 576], f32), T([128], f32), None, None, T([128], f32), T([128], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 512], f32), T([1, 128, 512], f32), T([128], f32), None, None, T([128], f32), T([128], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 256], f32), T([1, 128, 256], f32), T([128], f32), None, None, T([128], f32), T([128], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 512, 256], f32), T([1, 512, 256], f32), T([512], f32), None, None, T([512], f32), T([512], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 256, 64], f32), T([1, 256, 64], f32), T([256], f32), None, None, T([256], f32), T([256], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 64, 576], f32), T([1, 64, 576], f32), T([64], f32), None, None, T([64], f32), T([64], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 64, 128], f32), T([1, 64, 128], f32), T([64], f32), None, None, T([64], f32), T([64], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 256, 128], f32), T([1, 256, 128], f32), T([256], f32), None, None, T([256], f32), T([256], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 64, 288], f32), T([1, 64, 288], f32), T([64], f32), None, None, T([64], f32), T([64], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 32, 144], f32), T([1, 32, 144], f32), T([32], f32), None, None, T([32], f32), T([32], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 16, 27], f32), T([1, 16, 27], f32), T([16], f32), None, None, T([16], f32), T([16], f32), True, 1e-05, [True, True, False]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([128, 1000], f32), T([128], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([128], i64), 1000), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 1,
            "inputs": "((T([128, 64, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 1, 1], f32),), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 384, 1, 1], f32),), {})"
        }
    ],
    "aten.sigmoid.default": [
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 1, 1], f32),), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 1536, 1, 1], f32),), {})"
        }
    ],
    "aten.sigmoid_backward.default": [
        {
            "count": 9,
            "inputs": "((T([128, 1536, 1, 1], f32), T([128, 1536, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 1, 1], f32), T([128, 512, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32), T([128, 256, 1, 1], f32)), {})"
        }
    ],
    "aten.silu.default": [
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 56, 56], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 28, 28], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 28, 28], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 384, 14, 14], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 14, 14], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 384, 7, 7], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 7, 7], f32),), {})"
        }
    ],
    "aten.silu_.default": [
        {
            "count": 1,
            "inputs": "((T([128, 16, 112, 112], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 56, 56], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 128, 28, 28], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 28, 28], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 384, 14, 14], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 384, 7, 7], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2304, 7, 7], f32),), {})"
        }
    ],
    "aten.silu_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 2304, 7, 7], f32), T([128, 2304, 7, 7], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 384, 7, 7], f32), T([128, 384, 7, 7], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 7, 7], f32), T([128, 1536, 7, 7], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 384, 14, 14], f32), T([128, 384, 14, 14], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 14, 14], f32), T([128, 1536, 14, 14], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 28, 28], f32), T([128, 384, 28, 28], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 28, 28], f32), T([128, 512, 28, 28], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 128, 28, 28], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 128, 56, 56], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 256, 56, 56], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 56, 56], f32), T([128, 64, 56, 56], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([128, 64, 112, 112], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([128, 32, 112, 112], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 112, 112], f32), T([128, 16, 112, 112], f32)), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 7, 7], f32), [2, 3], True), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 14, 14], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 28, 28], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), [2, 3], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 9,
            "inputs": "((T([128, 384, 1, 1], f32), T([128, 384, 1, 1], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 1, 1], f32), T([128, 128, 1, 1], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 1, 1], f32), T([128, 64, 1, 1], f32), 0), {})"
        }
    ]
}