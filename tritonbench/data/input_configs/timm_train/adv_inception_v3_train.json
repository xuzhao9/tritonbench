{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([32, 3, 3, 3], f32), T([32, 32, 3, 3], f32), T([64, 32, 3, 3], f32), T([80, 64, 1, 1], f32), T([192, 80, 3, 3], f32), T([64, 192, 1, 1], f32), T([48, 192, 1, 1], f32), T([64, 48, 5, 5], f32), T([64, 192, 1, 1], f32), T([96, 64, 3, 3], f32), T([96, 96, 3, 3], f32), T([32, 192, 1, 1], f32), T([64, 256, 1, 1], f32), T([48, 256, 1, 1], f32), T([64, 48, 5, 5], f32), T([64, 256, 1, 1], f32), T([96, 64, 3, 3], f32), T([96, 96, 3, 3], f32), T([64, 256, 1, 1], f32), T([64, 288, 1, 1], f32), T([48, 288, 1, 1], f32), T([64, 48, 5, 5], f32), T([64, 288, 1, 1], f32), T([96, 64, 3, 3], f32), T([96, 96, 3, 3], f32), T([64, 288, 1, 1], f32), T([384, 288, 3, 3], f32), T([64, 288, 1, 1], f32), T([96, 64, 3, 3], f32), T([96, 96, 3, 3], f32), T([192, 768, 1, 1], f32), T([128, 768, 1, 1], f32), T([128, 128, 1, 7], f32), T([192, 128, 7, 1], f32), T([128, 768, 1, 1], f32), T([128, 128, 7, 1], f32), T([128, 128, 1, 7], f32), T([128, 128, 7, 1], f32), T([192, 128, 1, 7], f32), T([192, 768, 1, 1], f32), T([192, 768, 1, 1], f32), T([160, 768, 1, 1], f32), T([160, 160, 1, 7], f32), T([192, 160, 7, 1], f32), T([160, 768, 1, 1], f32), T([160, 160, 7, 1], f32), T([160, 160, 1, 7], f32), T([160, 160, 7, 1], f32), T([192, 160, 1, 7], f32), T([192, 768, 1, 1], f32), T([192, 768, 1, 1], f32), T([160, 768, 1, 1], f32), T([160, 160, 1, 7], f32), T([192, 160, 7, 1], f32), T([160, 768, 1, 1], f32), T([160, 160, 7, 1], f32), T([160, 160, 1, 7], f32), T([160, 160, 7, 1], f32), T([192, 160, 1, 7], f32), T([192, 768, 1, 1], f32), T([192, 768, 1, 1], f32), T([192, 768, 1, 1], f32), T([192, 192, 1, 7], f32), T([192, 192, 7, 1], f32), T([192, 768, 1, 1], f32), T([192, 192, 7, 1], f32), T([192, 192, 1, 7], f32), T([192, 192, 7, 1], f32), T([192, 192, 1, 7], f32), T([192, 768, 1, 1], f32), T([192, 768, 1, 1], f32), T([320, 192, 3, 3], f32), T([192, 768, 1, 1], f32), T([192, 192, 1, 7], f32), T([192, 192, 7, 1], f32), T([192, 192, 3, 3], f32), T([320, 1280, 1, 1], f32), T([384, 1280, 1, 1], f32), T([384, 384, 1, 3], f32), T([384, 384, 3, 1], f32), T([448, 1280, 1, 1], f32), T([384, 448, 3, 3], f32), T([384, 384, 1, 3], f32), T([384, 384, 3, 1], f32), T([192, 1280, 1, 1], f32), T([320, 2048, 1, 1], f32), T([384, 2048, 1, 1], f32), T([384, 384, 1, 3], f32), T([384, 384, 3, 1], f32), T([448, 2048, 1, 1], f32), T([384, 448, 3, 3], f32), T([384, 384, 1, 3], f32), T([384, 384, 3, 1], f32), T([192, 2048, 1, 1], f32), T([1000, 2048], f32)], [T([32, 3, 3, 3], f32), T([32, 32, 3, 3], f32), T([64, 32, 3, 3], f32), T([80, 64, 1, 1], f32), T([192, 80, 3, 3], f32), T([64, 192, 1, 1], f32), T([48, 192, 1, 1], f32), T([64, 48, 5, 5], f32), T([64, 192, 1, 1], f32), T([96, 64, 3, 3], f32), T([96, 96, 3, 3], f32), T([32, 192, 1, 1], f32), T([64, 256, 1, 1], f32), T([48, 256, 1, 1], f32), T([64, 48, 5, 5], f32), T([64, 256, 1, 1], f32), T([96, 64, 3, 3], f32), T([96, 96, 3, 3], f32), T([64, 256, 1, 1], f32), T([64, 288, 1, 1], f32), T([48, 288, 1, 1], f32), T([64, 48, 5, 5], f32), T([64, 288, 1, 1], f32), T([96, 64, 3, 3], f32), T([96, 96, 3, 3], f32), T([64, 288, 1, 1], f32), T([384, 288, 3, 3], f32), T([64, 288, 1, 1], f32), T([96, 64, 3, 3], f32), T([96, 96, 3, 3], f32), T([192, 768, 1, 1], f32), T([128, 768, 1, 1], f32), T([128, 128, 1, 7], f32), T([192, 128, 7, 1], f32), T([128, 768, 1, 1], f32), T([128, 128, 7, 1], f32), T([128, 128, 1, 7], f32), T([128, 128, 7, 1], f32), T([192, 128, 1, 7], f32), T([192, 768, 1, 1], f32), T([192, 768, 1, 1], f32), T([160, 768, 1, 1], f32), T([160, 160, 1, 7], f32), T([192, 160, 7, 1], f32), T([160, 768, 1, 1], f32), T([160, 160, 7, 1], f32), T([160, 160, 1, 7], f32), T([160, 160, 7, 1], f32), T([192, 160, 1, 7], f32), T([192, 768, 1, 1], f32), T([192, 768, 1, 1], f32), T([160, 768, 1, 1], f32), T([160, 160, 1, 7], f32), T([192, 160, 7, 1], f32), T([160, 768, 1, 1], f32), T([160, 160, 7, 1], f32), T([160, 160, 1, 7], f32), T([160, 160, 7, 1], f32), T([192, 160, 1, 7], f32), T([192, 768, 1, 1], f32), T([192, 768, 1, 1], f32), T([192, 768, 1, 1], f32), T([192, 192, 1, 7], f32), T([192, 192, 7, 1], f32), T([192, 768, 1, 1], f32), T([192, 192, 7, 1], f32), T([192, 192, 1, 7], f32), T([192, 192, 7, 1], f32), T([192, 192, 1, 7], f32), T([192, 768, 1, 1], f32), T([192, 768, 1, 1], f32), T([320, 192, 3, 3], f32), T([192, 768, 1, 1], f32), T([192, 192, 1, 7], f32), T([192, 192, 7, 1], f32), T([192, 192, 3, 3], f32), T([320, 1280, 1, 1], f32), T([384, 1280, 1, 1], f32), T([384, 384, 1, 3], f32), T([384, 384, 3, 1], f32), T([448, 1280, 1, 1], f32), T([384, 448, 3, 3], f32), T([384, 384, 1, 3], f32), T([384, 384, 3, 1], f32), T([192, 1280, 1, 1], f32), T([320, 2048, 1, 1], f32), T([384, 2048, 1, 1], f32), T([384, 384, 1, 3], f32), T([384, 384, 3, 1], f32), T([448, 2048, 1, 1], f32), T([384, 448, 3, 3], f32), T([384, 384, 1, 3], f32), T([384, 384, 3, 1], f32), T([192, 2048, 1, 1], f32), T([1000, 2048], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128, 1000], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 4,
            "inputs": "((T([128, 384, 8, 8], f32), T([128, 384, 8, 8], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 2048, 8, 8], f32), T([128, 2048, 8, 8], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1280, 8, 8], f32), T([128, 1280, 8, 8], f32)), {})"
        },
        {
            "count": 14,
            "inputs": "((T([128, 768, 17, 17], f32), T([128, 768, 17, 17], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 288, 35, 35], f32), T([128, 288, 35, 35], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 256, 35, 35], f32), T([128, 256, 35, 35], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 192, 35, 35], f32), T([128, 192, 35, 35], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 94,
            "inputs": "((T([], i64), 1), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([128, 2048], f32), T([2048, 1000], f32, stride=(1, 2048))), {})"
        }
    ],
    "aten.avg_pool2d.default": [
        {
            "count": 1,
            "inputs": "((T([128, 192, 35, 35], f32), [3, 3], [1, 1], [1, 1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 35, 35], f32), [3, 3], [1, 1], [1, 1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 288, 35, 35], f32), [3, 3], [1, 1], [1, 1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 768, 17, 17], f32), [3, 3], [1, 1], [1, 1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1280, 8, 8], f32), [3, 3], [1, 1], [1, 1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2048, 8, 8], f32), [3, 3], [1, 1], [1, 1]), {})"
        }
    ],
    "aten.avg_pool2d_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 2048, 8, 8], f32), T([128, 2048, 8, 8], f32), [3, 3], [1, 1], [1, 1], False, True, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1280, 8, 8], f32), T([128, 1280, 8, 8], f32), [3, 3], [1, 1], [1, 1], False, True, None), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 768, 17, 17], f32), T([128, 768, 17, 17], f32), [3, 3], [1, 1], [1, 1], False, True, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 288, 35, 35], f32), T([128, 288, 35, 35], f32), [3, 3], [1, 1], [1, 1], False, True, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 35, 35], f32), T([128, 256, 35, 35], f32), [3, 3], [1, 1], [1, 1], False, True, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 35, 35], f32), T([128, 192, 35, 35], f32), [3, 3], [1, 1], [1, 1], False, True, None), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 1,
            "inputs": "(([T([128, 64, 35, 35], f32), T([128, 64, 35, 35], f32), T([128, 96, 35, 35], f32), T([128, 32, 35, 35], f32)], 1), {})"
        },
        {
            "count": 2,
            "inputs": "(([T([128, 64, 35, 35], f32), T([128, 64, 35, 35], f32), T([128, 96, 35, 35], f32), T([128, 64, 35, 35], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 384, 17, 17], f32), T([128, 96, 17, 17], f32), T([128, 288, 17, 17], f32)], 1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([128, 192, 17, 17], f32), T([128, 192, 17, 17], f32), T([128, 192, 17, 17], f32), T([128, 192, 17, 17], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 320, 8, 8], f32), T([128, 192, 8, 8], f32), T([128, 768, 8, 8], f32)], 1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([128, 384, 8, 8], f32), T([128, 384, 8, 8], f32)], 1), {})"
        },
        {
            "count": 2,
            "inputs": "(([T([128, 320, 8, 8], f32), T([128, 768, 8, 8], f32), T([128, 768, 8, 8], f32), T([128, 192, 8, 8], f32)], 1), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 6,
            "inputs": "((T([32], f32),), {})"
        },
        {
            "count": 26,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([80], f32),), {})"
        },
        {
            "count": 60,
            "inputs": "((T([192], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([48], f32),), {})"
        },
        {
            "count": 16,
            "inputs": "((T([96], f32),), {})"
        },
        {
            "count": 26,
            "inputs": "((T([384], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([160], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([320], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([448], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 3, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 32, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([80, 64, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([192, 80, 3, 3], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 192, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([48, 192, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 48, 5, 5], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([96, 64, 3, 3], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([96, 96, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 192, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([48, 256, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 288, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([48, 288, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([384, 288, 3, 3], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([192, 768, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 768, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 1, 7], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([192, 128, 7, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 7, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([192, 128, 1, 7], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([160, 768, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([160, 160, 1, 7], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([192, 160, 7, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([160, 160, 7, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([192, 160, 1, 7], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([192, 192, 1, 7], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([192, 192, 7, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320, 192, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([192, 192, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320, 1280, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([384, 1280, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([384, 384, 1, 3], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([384, 384, 3, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([448, 1280, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([384, 448, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([192, 1280, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([384, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([448, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([192, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 2048], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([128, 3, 299, 299], f32), T([32, 3, 3, 3], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 149, 149], f32), T([32, 32, 3, 3], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 147, 147], f32), T([64, 32, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 73, 73], f32), T([80, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 80, 73, 73], f32), T([192, 80, 3, 3], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 192, 35, 35], f32), T([64, 192, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 35, 35], f32), T([48, 192, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 48, 35, 35], f32), T([64, 48, 5, 5], f32), None, [1, 1], [2, 2], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 64, 35, 35], f32), T([96, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 96, 35, 35], f32), T([96, 96, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 35, 35], f32), T([32, 192, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 256, 35, 35], f32), T([64, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 35, 35], f32), T([48, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 288, 35, 35], f32), T([64, 288, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 288, 35, 35], f32), T([48, 288, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 288, 35, 35], f32), T([384, 288, 3, 3], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 96, 35, 35], f32), T([96, 96, 3, 3], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 768, 17, 17], f32), T([192, 768, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 768, 17, 17], f32), T([128, 768, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 17, 17], f32), T([128, 128, 1, 7], f32), None, [1, 1], [0, 3], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 17, 17], f32), T([192, 128, 7, 1], f32), None, [1, 1], [3, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 17, 17], f32), T([128, 128, 7, 1], f32), None, [1, 1], [3, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 17, 17], f32), T([192, 128, 1, 7], f32), None, [1, 1], [0, 3], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 768, 17, 17], f32), T([160, 768, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 160, 17, 17], f32), T([160, 160, 1, 7], f32), None, [1, 1], [0, 3], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 160, 17, 17], f32), T([192, 160, 7, 1], f32), None, [1, 1], [3, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 160, 17, 17], f32), T([160, 160, 7, 1], f32), None, [1, 1], [3, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 160, 17, 17], f32), T([192, 160, 1, 7], f32), None, [1, 1], [0, 3], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 192, 17, 17], f32), T([192, 192, 1, 7], f32), None, [1, 1], [0, 3], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 192, 17, 17], f32), T([192, 192, 7, 1], f32), None, [1, 1], [3, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 17, 17], f32), T([320, 192, 3, 3], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 17, 17], f32), T([192, 192, 3, 3], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1280, 8, 8], f32), T([320, 1280, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1280, 8, 8], f32), T([384, 1280, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 384, 8, 8], f32), T([384, 384, 1, 3], f32), None, [1, 1], [0, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 384, 8, 8], f32), T([384, 384, 3, 1], f32), None, [1, 1], [1, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1280, 8, 8], f32), T([448, 1280, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 448, 8, 8], f32), T([384, 448, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1280, 8, 8], f32), T([192, 1280, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2048, 8, 8], f32), T([320, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2048, 8, 8], f32), T([384, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2048, 8, 8], f32), T([448, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2048, 8, 8], f32), T([192, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 192, 8, 8], f32), T([128, 2048, 8, 8], f32), T([192, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 384, 8, 8], f32), T([128, 384, 8, 8], f32), T([384, 384, 3, 1], f32), [0], [1, 1], [1, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 384, 8, 8], f32), T([128, 384, 8, 8], f32), T([384, 384, 1, 3], f32), [0], [1, 1], [0, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 384, 8, 8], f32), T([128, 448, 8, 8], f32), T([384, 448, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 448, 8, 8], f32), T([128, 2048, 8, 8], f32), T([448, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 8, 8], f32), T([128, 2048, 8, 8], f32), T([384, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 320, 8, 8], f32), T([128, 2048, 8, 8], f32), T([320, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 8, 8], f32), T([128, 1280, 8, 8], f32), T([192, 1280, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 448, 8, 8], f32), T([128, 1280, 8, 8], f32), T([448, 1280, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 8, 8], f32), T([128, 1280, 8, 8], f32), T([384, 1280, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 320, 8, 8], f32), T([128, 1280, 8, 8], f32), T([320, 1280, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 8, 8], f32), T([128, 192, 17, 17], f32), T([192, 192, 3, 3], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 192, 17, 17], f32), T([128, 192, 17, 17], f32), T([192, 192, 7, 1], f32), [0], [1, 1], [3, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 192, 17, 17], f32), T([128, 192, 17, 17], f32), T([192, 192, 1, 7], f32), [0], [1, 1], [0, 3], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 192, 17, 17], f32), T([128, 768, 17, 17], f32), T([192, 768, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 320, 8, 8], f32), T([128, 192, 17, 17], f32), T([320, 192, 3, 3], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 192, 17, 17], f32), T([128, 160, 17, 17], f32), T([192, 160, 1, 7], f32), [0], [1, 1], [0, 3], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 160, 17, 17], f32), T([128, 160, 17, 17], f32), T([160, 160, 7, 1], f32), [0], [1, 1], [3, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 160, 17, 17], f32), T([128, 160, 17, 17], f32), T([160, 160, 1, 7], f32), [0], [1, 1], [0, 3], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 160, 17, 17], f32), T([128, 768, 17, 17], f32), T([160, 768, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 192, 17, 17], f32), T([128, 160, 17, 17], f32), T([192, 160, 7, 1], f32), [0], [1, 1], [3, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 17, 17], f32), T([128, 128, 17, 17], f32), T([192, 128, 1, 7], f32), [0], [1, 1], [0, 3], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 17, 17], f32), T([128, 128, 17, 17], f32), T([128, 128, 7, 1], f32), [0], [1, 1], [3, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 17, 17], f32), T([128, 128, 17, 17], f32), T([128, 128, 1, 7], f32), [0], [1, 1], [0, 3], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 17, 17], f32), T([128, 768, 17, 17], f32), T([128, 768, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 17, 17], f32), T([128, 128, 17, 17], f32), T([192, 128, 7, 1], f32), [0], [1, 1], [3, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 96, 17, 17], f32), T([128, 96, 35, 35], f32), T([96, 96, 3, 3], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 96, 35, 35], f32), T([128, 64, 35, 35], f32), T([96, 64, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 64, 35, 35], f32), T([128, 288, 35, 35], f32), T([64, 288, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 17, 17], f32), T([128, 288, 35, 35], f32), T([384, 288, 3, 3], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 96, 35, 35], f32), T([128, 96, 35, 35], f32), T([96, 96, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 35, 35], f32), T([128, 48, 35, 35], f32), T([64, 48, 5, 5], f32), [0], [1, 1], [2, 2], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 48, 35, 35], f32), T([128, 288, 35, 35], f32), T([48, 288, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 35, 35], f32), T([128, 256, 35, 35], f32), T([64, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 48, 35, 35], f32), T([128, 256, 35, 35], f32), T([48, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 35, 35], f32), T([128, 192, 35, 35], f32), T([32, 192, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 35, 35], f32), T([128, 192, 35, 35], f32), T([64, 192, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 48, 35, 35], f32), T([128, 192, 35, 35], f32), T([48, 192, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 71, 71], f32), T([128, 80, 73, 73], f32), T([192, 80, 3, 3], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 80, 73, 73], f32), T([128, 64, 73, 73], f32), T([80, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 147, 147], f32), T([128, 32, 147, 147], f32), T([64, 32, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 147, 147], f32), T([128, 32, 149, 149], f32), T([32, 32, 3, 3], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 149, 149], f32), T([128, 3, 299, 299], f32), T([32, 3, 3, 3], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([128, 32, 149, 149], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 147, 147], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 147, 147], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 80, 73, 73], f32), T([80], f32), T([80], f32), T([80], f32), T([80], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 71, 71], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 64, 35, 35], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 48, 35, 35], f32), T([48], f32), T([48], f32), T([48], f32), T([48], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 96, 35, 35], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 35, 35], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 17, 17], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 96, 17, 17], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 26,
            "inputs": "((T([128, 192, 17, 17], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 128, 17, 17], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 160, 17, 17], f32), T([160], f32), T([160], f32), T([160], f32), T([160], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 320, 8, 8], f32), T([320], f32), T([320], f32), T([320], f32), T([320], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 192, 8, 8], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 384, 8, 8], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 448, 8, 8], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), True, 0.1, 0.001), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 3,
            "inputs": "((T([128, 192, 8, 8], f32), T([128, 192, 8, 8], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 384, 8, 8], f32), T([128, 384, 8, 8], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 448, 8, 8], f32), T([128, 448, 8, 8], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 320, 8, 8], f32), T([128, 320, 8, 8], f32), T([320], f32), T([320], f32), T([320], f32), T([320], f32), T([320], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 26,
            "inputs": "((T([128, 192, 17, 17], f32), T([128, 192, 17, 17], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 160, 17, 17], f32), T([128, 160, 17, 17], f32), T([160], f32), T([160], f32), T([160], f32), T([160], f32), T([160], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 128, 17, 17], f32), T([128, 128, 17, 17], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 96, 17, 17], f32), T([128, 96, 17, 17], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 96, 35, 35], f32), T([128, 96, 35, 35], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 64, 35, 35], f32), T([128, 64, 35, 35], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 17, 17], f32), T([128, 384, 17, 17], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 48, 35, 35], f32), T([128, 48, 35, 35], f32), T([48], f32), T([48], f32), T([48], f32), T([48], f32), T([48], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 35, 35], f32), T([128, 32, 35, 35], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 71, 71], f32), T([128, 192, 71, 71], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 80, 73, 73], f32), T([128, 80, 73, 73], f32), T([80], f32), T([80], f32), T([80], f32), T([80], f32), T([80], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 147, 147], f32), T([128, 64, 147, 147], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 147, 147], f32), T([128, 32, 147, 147], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 149, 149], f32), T([128, 32, 149, 149], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 0.001, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([128, 2048, 8, 8], f32, stride=(2048, 1, 0, 0)), 64), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 1,
            "inputs": "((T([128, 64, 147, 147], f32), [3, 3], [2, 2]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 71, 71], f32), [3, 3], [2, 2]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 288, 35, 35], f32), [3, 3], [2, 2]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 17, 17], f32), [3, 3], [2, 2]), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 768, 8, 8], f32, stride=(81920, 64, 8, 1)), T([128, 768, 17, 17], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([128, 768, 8, 8], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 288, 17, 17], f32, stride=(221952, 289, 17, 1)), T([128, 288, 35, 35], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([128, 288, 17, 17], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 35, 35], f32), T([128, 192, 71, 71], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([128, 192, 35, 35], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 73, 73], f32), T([128, 64, 147, 147], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([128, 64, 73, 73], i64)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([128, 2048, 8, 8], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([1000, 2048], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 128], f32, stride=(1, 1000)), T([128, 2048], f32)), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([128, 1000], f32), T([128], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([128], i64), 1000), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 1,
            "inputs": "((T([128, 32, 149, 149], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 147, 147], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 147, 147], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 80, 73, 73], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 71, 71], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 64, 35, 35], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 48, 35, 35], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 96, 35, 35], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 35, 35], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 17, 17], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 96, 17, 17], f32),), {})"
        },
        {
            "count": 26,
            "inputs": "((T([128, 192, 17, 17], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 128, 17, 17], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 160, 17, 17], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 320, 8, 8], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 192, 8, 8], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 384, 8, 8], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 448, 8, 8], f32),), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), [0], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 2,
            "inputs": "((T([128, 192, 8, 8], f32, stride=(131072, 64, 8, 1)), T([128, 192, 8, 8], f32), 0), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 384, 8, 8], f32, stride=(131072, 64, 8, 1)), T([128, 384, 8, 8], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 384, 8, 8], f32), T([128, 384, 8, 8], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 448, 8, 8], f32), T([128, 448, 8, 8], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 320, 8, 8], f32, stride=(131072, 64, 8, 1)), T([128, 320, 8, 8], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 8, 8], f32, stride=(81920, 64, 8, 1)), T([128, 192, 8, 8], f32), 0), {})"
        },
        {
            "count": 10,
            "inputs": "((T([128, 192, 17, 17], f32), T([128, 192, 17, 17], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 320, 8, 8], f32, stride=(81920, 64, 8, 1)), T([128, 320, 8, 8], f32), 0), {})"
        },
        {
            "count": 16,
            "inputs": "((T([128, 192, 17, 17], f32, stride=(221952, 289, 17, 1)), T([128, 192, 17, 17], f32), 0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 160, 17, 17], f32), T([128, 160, 17, 17], f32), 0), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 128, 17, 17], f32), T([128, 128, 17, 17], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 96, 17, 17], f32, stride=(221952, 289, 17, 1)), T([128, 96, 17, 17], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 96, 35, 35], f32), T([128, 96, 35, 35], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 64, 35, 35], f32), T([128, 64, 35, 35], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 17, 17], f32, stride=(221952, 289, 17, 1)), T([128, 384, 17, 17], f32), 0), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 64, 35, 35], f32, stride=(352800, 1225, 35, 1)), T([128, 64, 35, 35], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 96, 35, 35], f32, stride=(352800, 1225, 35, 1)), T([128, 96, 35, 35], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 48, 35, 35], f32), T([128, 48, 35, 35], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 35, 35], f32, stride=(313600, 1225, 35, 1)), T([128, 32, 35, 35], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 96, 35, 35], f32, stride=(313600, 1225, 35, 1)), T([128, 96, 35, 35], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 35, 35], f32, stride=(313600, 1225, 35, 1)), T([128, 64, 35, 35], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 71, 71], f32), T([128, 192, 71, 71], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 80, 73, 73], f32), T([128, 80, 73, 73], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 147, 147], f32), T([128, 64, 147, 147], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 147, 147], f32), T([128, 32, 147, 147], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 149, 149], f32), T([128, 32, 149, 149], f32), 0), {})"
        }
    ]
}