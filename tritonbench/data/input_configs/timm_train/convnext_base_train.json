{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([128, 3, 4, 4], f32), T([128, 1, 7, 7], f32), T([512, 128], f32), T([128, 512], f32), T([128, 1, 7, 7], f32), T([512, 128], f32), T([128, 512], f32), T([128, 1, 7, 7], f32), T([512, 128], f32), T([128, 512], f32), T([256, 128, 2, 2], f32), T([256, 1, 7, 7], f32), T([1024, 256], f32), T([256, 1024], f32), T([256, 1, 7, 7], f32), T([1024, 256], f32), T([256, 1024], f32), T([256, 1, 7, 7], f32), T([1024, 256], f32), T([256, 1024], f32), T([512, 256, 2, 2], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([1024, 512, 2, 2], f32), T([1024, 1, 7, 7], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([1024, 1, 7, 7], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([1024, 1, 7, 7], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([1000, 1024], f32)], [T([128, 3, 4, 4], f32), T([128, 1, 7, 7], f32), T([512, 128], f32), T([128, 512], f32), T([128, 1, 7, 7], f32), T([512, 128], f32), T([128, 512], f32), T([128, 1, 7, 7], f32), T([512, 128], f32), T([128, 512], f32), T([256, 128, 2, 2], f32), T([256, 1, 7, 7], f32), T([1024, 256], f32), T([256, 1024], f32), T([256, 1, 7, 7], f32), T([1024, 256], f32), T([256, 1024], f32), T([256, 1, 7, 7], f32), T([1024, 256], f32), T([256, 1024], f32), T([512, 256, 2, 2], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 1, 7, 7], f32), T([2048, 512], f32), T([512, 2048], f32), T([1024, 512, 2, 2], f32), T([1024, 1, 7, 7], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([1024, 1, 7, 7], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([1024, 1, 7, 7], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([1000, 1024], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64, 1000], f32), 1, f32), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 3,
            "inputs": "((T([64, 7, 7, 1024], f32), [3136, 1024]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 6,
            "inputs": "((T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128)), T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128))), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256)), T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256))), {})"
        },
        {
            "count": 54,
            "inputs": "((T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512)), T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 1024, 7, 7], f32, stride=(50176, 1, 7168, 1024)), T([64, 1024, 7, 7], f32, stride=(50176, 1, 7168, 1024))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 1024, 7, 7], f32), T([64, 1024, 7, 7], f32, stride=(50176, 1, 7168, 1024))), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 3,
            "inputs": "((T([512], f32), T([200704, 128], f32), T([128, 512], f32, stride=(1, 128))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128], f32), T([200704, 512], f32), T([512, 128], f32, stride=(1, 512))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024], f32), T([50176, 256], f32), T([256, 1024], f32, stride=(1, 256))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256], f32), T([50176, 1024], f32), T([1024, 256], f32, stride=(1, 1024))), {})"
        },
        {
            "count": 27,
            "inputs": "((T([2048], f32), T([12544, 512], f32), T([512, 2048], f32, stride=(1, 512))), {})"
        },
        {
            "count": 27,
            "inputs": "((T([512], f32), T([12544, 2048], f32), T([2048, 512], f32, stride=(1, 2048))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([4096], f32), T([3136, 1024], f32), T([1024, 4096], f32, stride=(1, 1024))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024], f32), T([3136, 4096], f32), T([4096, 1024], f32, stride=(1, 4096))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([64, 1024], f32), T([1024, 1000], f32, stride=(1, 1024))), {})"
        }
    ],
    "aten.as_strided_.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1024, 1, 1], f32), [64, 1024, 1, 1], [1024, 1, 1024, 1024]), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 20,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 141,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 21,
            "inputs": "((T([1024], f32),), {})"
        },
        {
            "count": 27,
            "inputs": "((T([2048], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([4096], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 3, 4, 4], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1, 7, 7], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 128], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 128, 2, 2], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 1, 7, 7], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024, 256], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 1024], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 256, 2, 2], f32),), {})"
        },
        {
            "count": 27,
            "inputs": "((T([512, 1, 7, 7], f32),), {})"
        },
        {
            "count": 27,
            "inputs": "((T([2048, 512], f32),), {})"
        },
        {
            "count": 27,
            "inputs": "((T([512, 2048], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 512, 2, 2], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024, 1, 7, 7], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([4096, 1024], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024, 4096], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 1024], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([64, 3, 224, 224], f32), T([128, 3, 4, 4], f32), T([128], f32), [4, 4], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128)), T([128, 1, 7, 7], f32), T([128], f32), [1, 1], [3, 3], [1, 1], False, [0, 0], 128), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128)), T([256, 128, 2, 2], f32), T([256], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256)), T([256, 1, 7, 7], f32), T([256], f32), [1, 1], [3, 3], [1, 1], False, [0, 0], 256), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256)), T([512, 256, 2, 2], f32), T([512], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 27,
            "inputs": "((T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512)), T([512, 1, 7, 7], f32), T([512], f32), [1, 1], [3, 3], [1, 1], False, [0, 0], 512), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512)), T([1024, 512, 2, 2], f32), T([1024], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 1024, 7, 7], f32, stride=(50176, 1, 7168, 1024)), T([1024, 1, 7, 7], f32), T([1024], f32), [1, 1], [3, 3], [1, 1], False, [0, 0], 1024), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 3,
            "inputs": "((T([64, 1024, 7, 7], f32, stride=(50176, 1, 7168, 1024)), T([64, 1024, 7, 7], f32, stride=(50176, 1, 7168, 1024)), T([1024, 1, 7, 7], f32), [1024], [1, 1], [3, 3], [1, 1], False, [0, 0], 1024, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1024, 7, 7], f32), T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512)), T([1024, 512, 2, 2], f32), [1024], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 27,
            "inputs": "((T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512)), T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512)), T([512, 1, 7, 7], f32), [512], [1, 1], [3, 3], [1, 1], False, [0, 0], 512, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512)), T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256)), T([512, 256, 2, 2], f32), [512], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256)), T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256)), T([256, 1, 7, 7], f32), [256], [1, 1], [3, 3], [1, 1], False, [0, 0], 256, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256)), T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128)), T([256, 128, 2, 2], f32), [256], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128)), T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128)), T([128, 1, 7, 7], f32), [128], [1, 1], [3, 3], [1, 1], False, [0, 0], 128, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128)), T([64, 3, 224, 224], f32), T([128, 3, 4, 4], f32), [128], [4, 4], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.copy_.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1024], f32), T([64, 1024], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 512, 2, 2], f32), T([1024, 512, 2, 2], f32, stride=(2048, 1, 1024, 512))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 256, 2, 2], f32), T([512, 256, 2, 2], f32, stride=(1024, 1, 512, 256))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 128, 2, 2], f32), T([256, 128, 2, 2], f32, stride=(512, 1, 256, 128))), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([64, 1024, 7, 7], f32, stride=(1024, 1, 0, 0)), 49), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 3,
            "inputs": "((T([64, 56, 56, 512], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 28, 28, 1024], f32),), {})"
        },
        {
            "count": 27,
            "inputs": "((T([64, 14, 14, 2048], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 7, 7, 4096], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 3,
            "inputs": "((T([64, 7, 7, 4096], f32), T([64, 7, 7, 4096], f32)), {})"
        },
        {
            "count": 27,
            "inputs": "((T([64, 14, 14, 2048], f32), T([64, 14, 14, 2048], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 28, 28, 1024], f32), T([64, 28, 28, 1024], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 56, 56, 512], f32), T([64, 56, 56, 512], f32)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([64, 1024, 7, 7], f32, stride=(50176, 1, 7168, 1024)), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([1000, 1024], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 64], f32, stride=(1, 1000)), T([64, 1024], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3136, 1024], f32), T([1024, 4096], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024, 3136], f32, stride=(1, 1024)), T([3136, 4096], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3136, 4096], f32), T([4096, 1024], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([4096, 3136], f32, stride=(1, 4096)), T([3136, 1024], f32)), {})"
        },
        {
            "count": 27,
            "inputs": "((T([12544, 512], f32), T([512, 2048], f32)), {})"
        },
        {
            "count": 27,
            "inputs": "((T([512, 12544], f32, stride=(1, 512)), T([12544, 2048], f32)), {})"
        },
        {
            "count": 27,
            "inputs": "((T([12544, 2048], f32), T([2048, 512], f32)), {})"
        },
        {
            "count": 27,
            "inputs": "((T([2048, 12544], f32, stride=(1, 2048)), T([12544, 512], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([50176, 256], f32), T([256, 1024], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 50176], f32, stride=(1, 256)), T([50176, 1024], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([50176, 1024], f32), T([1024, 256], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024, 50176], f32, stride=(1, 1024)), T([50176, 256], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([200704, 128], f32), T([128, 512], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 200704], f32, stride=(1, 128)), T([200704, 512], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([200704, 512], f32), T([512, 128], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 200704], f32, stride=(1, 512)), T([200704, 128], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 6,
            "inputs": "((T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128)), T([1, 128, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256)), T([1, 256, 1, 1], f32)), {})"
        },
        {
            "count": 54,
            "inputs": "((T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512)), T([1, 512, 1, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 1024, 7, 7], f32, stride=(50176, 1, 7168, 1024)), T([1, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 1024, 7, 7], f32), T([64, 1024, 7, 7], f32, stride=(50176, 1, 7168, 1024))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 1024, 7, 7], f32), T([1, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 27,
            "inputs": "((T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512)), T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256)), T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128)), T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128))), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 1,
            "inputs": "((T([64, 56, 56, 128], f32, stride=(401408, 56, 1, 3136)), [128], T([128], f32), T([128], f32), 1e-06), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 56, 56, 128], f32), [128], T([128], f32), T([128], f32), 1e-06), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 28, 28, 256], f32), [256], T([256], f32), T([256], f32), 1e-06), {})"
        },
        {
            "count": 28,
            "inputs": "((T([64, 14, 14, 512], f32), [512], T([512], f32), T([512], f32), 1e-06), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 7, 7, 1024], f32), [1024], T([1024], f32), T([1024], f32), 1e-06), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1, 1, 1024], f32), [1024], T([1024], f32), T([1024], f32), 1e-06), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1, 1, 1024], f32), T([64, 1, 1, 1024], f32), [1024], T([64, 1, 1, 1], f32), T([64, 1, 1, 1], f32), T([1024], f32), T([1024], f32), [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 7, 7, 1024], f32), T([64, 7, 7, 1024], f32), [1024], T([64, 7, 7, 1], f32), T([64, 7, 7, 1], f32), T([1024], f32), T([1024], f32), [True, True, True]), {})"
        },
        {
            "count": 28,
            "inputs": "((T([64, 14, 14, 512], f32), T([64, 14, 14, 512], f32), [512], T([64, 14, 14, 1], f32), T([64, 14, 14, 1], f32), T([512], f32), T([512], f32), [True, True, True]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 28, 28, 256], f32), T([64, 28, 28, 256], f32), [256], T([64, 28, 28, 1], f32), T([64, 28, 28, 1], f32), T([256], f32), T([256], f32), [True, True, True]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 56, 56, 128], f32), T([64, 56, 56, 128], f32), [128], T([64, 56, 56, 1], f32), T([64, 56, 56, 1], f32), T([128], f32), T([128], f32), [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 56, 56, 128], f32), T([64, 56, 56, 128], f32, stride=(401408, 56, 1, 3136)), [128], T([64, 56, 56, 1], f32), T([64, 56, 56, 1], f32), T([128], f32), T([128], f32), [True, True, True]), {})"
        }
    ],
    "aten.new_empty_strided.default": [
        {
            "count": 1,
            "inputs": "((T([1024, 512, 2, 2], f32, stride=(2048, 1, 1024, 512)), [1024, 512, 2, 2], [2048, 4, 2, 1]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 256, 2, 2], f32, stride=(1024, 1, 512, 256)), [512, 256, 2, 2], [1024, 4, 2, 1]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 128, 2, 2], f32, stride=(512, 1, 256, 128)), [256, 128, 2, 2], [512, 4, 2, 1]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        }
    ],
    "aten.new_zeros.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1024], f32), [65536]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([64, 1000], f32), T([64], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([64], i64), 1000), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 1024, 7, 7], f32), [0, 2, 3], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3136, 1024], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3136, 4096], f32), [0], True), {})"
        },
        {
            "count": 27,
            "inputs": "((T([64, 512, 14, 14], f32, stride=(100352, 1, 7168, 512)), [0, 2, 3], True), {})"
        },
        {
            "count": 27,
            "inputs": "((T([12544, 512], f32), [0], True), {})"
        },
        {
            "count": 27,
            "inputs": "((T([12544, 2048], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 28, 28], f32, stride=(200704, 1, 7168, 256)), [0, 2, 3], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([50176, 256], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([50176, 1024], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 56, 56], f32, stride=(401408, 1, 7168, 128)), [0, 2, 3], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([200704, 128], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([200704, 512], f32), [0], True), {})"
        }
    ]
}