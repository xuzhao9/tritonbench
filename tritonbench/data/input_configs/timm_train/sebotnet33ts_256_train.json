{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([24, 3, 3, 3], f32), T([32, 24, 3, 3], f32), T([64, 32, 3, 3], f32), T([256, 64, 1, 1], f32), T([64, 64, 1, 1], f32), T([64, 64, 3, 3], f32), T([8, 64, 1, 1], f32), T([64, 8, 1, 1], f32), T([256, 64, 1, 1], f32), T([64, 256, 1, 1], f32), T([64, 64, 3, 3], f32), T([8, 64, 1, 1], f32), T([64, 8, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 256, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([8, 128, 1, 1], f32), T([128, 8, 1, 1], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 128, 3, 3], f32), T([8, 128, 1, 1], f32), T([128, 8, 1, 1], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([384, 128, 1, 1], f32), T([63, 32], f32), T([63, 32], f32), T([512, 128, 1, 1], f32), T([1024, 512, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([16, 256, 1, 1], f32), T([256, 16, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([16, 256, 1, 1], f32), T([256, 16, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([768, 256, 1, 1], f32), T([31, 64], f32), T([31, 64], f32), T([1024, 256, 1, 1], f32), T([1536, 1024, 1, 1], f32), T([512, 1024, 1, 1], f32), T([1536, 512, 1, 1], f32), T([31, 128], f32), T([31, 128], f32), T([1536, 512, 1, 1], f32), T([512, 1536, 1, 1], f32), T([1536, 512, 1, 1], f32), T([15, 128], f32), T([15, 128], f32), T([1536, 512, 1, 1], f32), T([1280, 1536, 1, 1], f32), T([1000, 1280], f32)], [T([24, 3, 3, 3], f32), T([32, 24, 3, 3], f32), T([64, 32, 3, 3], f32), T([256, 64, 1, 1], f32), T([64, 64, 1, 1], f32), T([64, 64, 3, 3], f32), T([8, 64, 1, 1], f32), T([64, 8, 1, 1], f32), T([256, 64, 1, 1], f32), T([64, 256, 1, 1], f32), T([64, 64, 3, 3], f32), T([8, 64, 1, 1], f32), T([64, 8, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 256, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([8, 128, 1, 1], f32), T([128, 8, 1, 1], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 128, 3, 3], f32), T([8, 128, 1, 1], f32), T([128, 8, 1, 1], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([384, 128, 1, 1], f32), T([63, 32], f32), T([63, 32], f32), T([512, 128, 1, 1], f32), T([1024, 512, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([16, 256, 1, 1], f32), T([256, 16, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([16, 256, 1, 1], f32), T([256, 16, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([768, 256, 1, 1], f32), T([31, 64], f32), T([31, 64], f32), T([1024, 256, 1, 1], f32), T([1536, 1024, 1, 1], f32), T([512, 1024, 1, 1], f32), T([1536, 512, 1, 1], f32), T([31, 128], f32), T([31, 128], f32), T([1536, 512, 1, 1], f32), T([512, 1536, 1, 1], f32), T([1536, 512, 1, 1], f32), T([15, 128], f32), T([15, 128], f32), T([1536, 512, 1, 1], f32), T([1280, 1536, 1, 1], f32), T([1000, 1280], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([32, 1000], f32), 1, f32), {})"
        }
    ],
    "aten._softmax.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1024, 1024], f32), -1, False), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 256], f32), -1, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 64], f32), -1, False), {})"
        }
    ],
    "aten._softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([128, 64, 64], f32), T([128, 64, 64], f32), -1, f32), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 256], f32), T([128, 256, 256], f32), -1, f32), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 1024], f32), T([128, 1024, 1024], f32), -1, f32), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 3,
            "inputs": "((T([32, 128, 32, 32], f32), [128, 32, 1024]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 1024], f32), [128, 1024, 1024]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 32, 32, 32], f32), [131072, 32]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([131072, 63], f32), [128, 32, 32, 63]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 32, 32, 32], f32), [128, 1024, 1024]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 32], f32), [128, 1024, 32]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 32, 1024], f32), [32, 128, 32, 32]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 256, 16, 16], f32), [128, 64, 256]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 256], f32), [128, 256, 256]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 16, 16, 64], f32), [32768, 64]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32768, 31], f32), [128, 16, 16, 31]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 16, 16, 16, 16], f32), [128, 256, 256]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 64], f32), [128, 256, 64]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 256], f32), [32, 256, 16, 16]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 16, 16], f32), [128, 128, 256]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 16, 16, 128], f32), [32768, 128]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 128], f32), [128, 256, 128]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 128, 256], f32), [32, 512, 16, 16]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 8, 8], f32), [128, 128, 64]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 64], f32), [128, 64, 64]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 8, 8, 128], f32), [8192, 128]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([8192, 15], f32), [128, 8, 8, 15]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 8, 8, 8, 8], f32), [128, 64, 64]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 128], f32), [128, 64, 128]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 128, 64], f32), [32, 512, 8, 8]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 8, 8, 128], f32), [128, 64, 128]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 16, 128], f32), [128, 256, 128]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 16, 64], f32), [128, 256, 64]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 32, 32], f32), [128, 1024, 32]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 4,
            "inputs": "((T([32, 256, 64, 64], f32), T([32, 256, 64, 64], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 512, 32, 32], f32), T([32, 512, 32, 32], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 32, 32, 32], f32, stride=(66528, 63, 2079, 1, 0)), T([128, 32, 32, 32, 32], f32, stride=(66528, 2079, 63, 0, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 1024], f32), T([128, 1024, 1024], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 1024, 16, 16], f32), T([32, 1024, 16, 16], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 16, 16, 16, 16], f32, stride=(8432, 31, 527, 1, 0)), T([128, 16, 16, 16, 16], f32, stride=(8432, 527, 31, 0, 1))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 256], f32), T([128, 256, 256], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 1536, 8, 8], f32), T([32, 1536, 8, 8], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 8, 8, 8, 8], f32, stride=(1080, 15, 135, 1, 0)), T([128, 8, 8, 8, 8], f32, stride=(1080, 135, 15, 0, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 64], f32), T([128, 64, 64], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 8, 8, 128], f32, stride=(8192, 128, 1024, 1)), T([128, 8, 8, 128], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 128], f32), T([128, 64, 128], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 16, 128], f32, stride=(32768, 128, 2048, 1)), T([128, 16, 16, 128], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 128], f32), T([128, 256, 128], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 16, 64], f32, stride=(16384, 64, 1024, 1)), T([128, 16, 16, 64], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 64], f32), T([128, 256, 64], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 16, 16], f32), T([32, 256, 16, 16], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 32, 32], f32, stride=(32768, 32, 1024, 1)), T([128, 32, 32, 32], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 32], f32), T([128, 1024, 32], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 32, 32], f32), T([32, 128, 32, 32], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 64, 64, 64], f32), T([32, 64, 64, 64], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 38,
            "inputs": "((T([], i64), 1), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([32, 1280], f32), T([1280, 1000], f32, stride=(1, 1280))), {})"
        }
    ],
    "aten.avg_pool2d.default": [
        {
            "count": 1,
            "inputs": "((T([32, 512, 16, 16], f32), [2, 2], [2, 2]), {})"
        }
    ],
    "aten.avg_pool2d_backward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 512, 8, 8], f32), T([32, 512, 16, 16], f32), [2, 2], [2, 2], [0, 0], False, True, None), {})"
        }
    ],
    "aten.bmm.default": [
        {
            "count": 2,
            "inputs": "((T([128, 1024, 32], f32, stride=(32768, 1, 1024)), T([128, 32, 1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1024, 1024], f32), T([128, 1024, 32], f32, stride=(32768, 1, 1024))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 64], f32, stride=(16384, 1, 256)), T([128, 64, 256], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 256], f32), T([128, 256, 64], f32, stride=(16384, 1, 256))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 128], f32, stride=(32768, 1, 256)), T([128, 128, 256], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 256], f32), T([128, 256, 128], f32, stride=(32768, 1, 256))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 128], f32, stride=(8192, 1, 64)), T([128, 128, 64], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 64], f32), T([128, 64, 128], f32, stride=(8192, 1, 64))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 64], f32, stride=(4096, 1, 64)), T([128, 64, 128], f32, stride=(8192, 1, 64))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 64], f32), T([128, 64, 64], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 256], f32, stride=(65536, 1, 256)), T([128, 256, 128], f32, stride=(32768, 1, 256))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 256], f32), T([128, 256, 256], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 256], f32, stride=(65536, 1, 256)), T([128, 256, 64], f32, stride=(16384, 1, 256))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 256], f32), T([128, 256, 256], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 1024], f32, stride=(1048576, 1, 1024)), T([128, 1024, 32], f32, stride=(32768, 1, 1024))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 1024], f32), T([128, 1024, 1024], f32)), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 1,
            "inputs": "(([T([32, 512, 8, 8], f32), T([32, 512, 8, 8], f32), T([32, 512, 8, 8], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([32, 512, 16, 16], f32), T([32, 512, 16, 16], f32), T([32, 512, 16, 16], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([32, 256, 16, 16], f32), T([32, 256, 16, 16], f32), T([32, 256, 16, 16], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([32, 128, 32, 32], f32), T([32, 128, 32, 32], f32), T([32, 128, 32, 32], f32)], 1), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 1,
            "inputs": "((T([32, 24, 128, 128], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 128, 128], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 64, 64, 64], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 64, 64], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 128, 64, 64], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 128, 32, 32], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 32, 32], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 32, 32], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 256, 16, 16], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 1024, 16, 16], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 16, 16], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 8, 8], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 1536, 8, 8], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1280, 8, 8], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([24], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 20,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([8], f32),), {})"
        },
        {
            "count": 16,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1024], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([1536], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1280], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([24, 3, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 24, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 32, 3, 3], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 64, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 3, 3], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([8, 64, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 8, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 3, 3], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([8, 128, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 8, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 128, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([384, 128, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([63, 32], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 512, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 256, 3, 3], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 256, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 16, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024, 256, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([768, 256, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([31, 64], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1536, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1536, 512, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([31, 128], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 1536, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([15, 128], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1280, 1536, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 1280], f32),), {})"
        }
    ],
    "aten.constant_pad_nd.default": [
        {
            "count": 2,
            "inputs": "((T([4096, 32, 63], f32), [0, 1], 0.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4096, 2048], f32), [0, 31], 0.0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([2048, 16, 31], f32), [0, 1], 0.0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([2048, 512], f32), [0, 15], 0.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 8, 15], f32), [0, 1], 0.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 128], f32), [0, 7], 0.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 135], f32), [0, -7]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 8, 16], f32), [0, -1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([2048, 527], f32), [0, -15]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([2048, 16, 32], f32), [0, -1]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4096, 2079], f32), [0, -31]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4096, 32, 64], f32), [0, -1]), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([32, 3, 256, 256], f32), T([24, 3, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 24, 128, 128], f32), T([32, 24, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 128, 128], f32), T([64, 32, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 64, 64], f32), T([64, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 64, 64], f32), T([64, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 1, 1], f32), T([8, 64, 1, 1], f32), T([8], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 8, 1, 1], f32), T([64, 8, 1, 1], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 64, 64, 64], f32), T([256, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 64, 64], f32), T([64, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 64, 64], f32), T([128, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 128, 64, 64], f32), T([128, 128, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 1, 1], f32), T([8, 128, 1, 1], f32), T([8], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 8, 1, 1], f32), T([128, 8, 1, 1], f32), T([128], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 128, 32, 32], f32), T([512, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 64, 64], f32), T([512, 256, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 512, 32, 32], f32), T([128, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 128, 32, 32], f32), T([128, 128, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 128, 32, 32], f32), T([384, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 32, 32], f32), T([256, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 32, 32], f32), T([256, 256, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 1, 1], f32), T([16, 256, 1, 1], f32), T([16], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 16, 1, 1], f32), T([256, 16, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 256, 16, 16], f32), T([1024, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 32, 32], f32), T([1024, 512, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 1024, 16, 16], f32), T([256, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 16, 16], f32), T([256, 256, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 16, 16], f32), T([768, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 16, 16], f32), T([512, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 16, 16], f32), T([1536, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 8, 8], f32), T([1536, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 16, 16], f32), T([1536, 1024, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1536, 8, 8], f32), T([512, 1536, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1536, 8, 8], f32), T([1280, 1536, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1280, 8, 8], f32), T([32, 1536, 8, 8], f32), T([1280, 1536, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 1536, 8, 8], f32), T([32, 512, 8, 8], f32), T([1536, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 8, 8], f32), T([32, 1536, 8, 8], f32), T([512, 1536, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1536, 8, 8], f32), T([32, 1024, 16, 16], f32), T([1536, 1024, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1536, 16, 16], f32), T([32, 512, 16, 16], f32), T([1536, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 16, 16], f32), T([32, 1024, 16, 16], f32), T([512, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 1024, 16, 16], f32), T([32, 256, 16, 16], f32), T([1024, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 768, 16, 16], f32), T([32, 256, 16, 16], f32), T([768, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 16, 16], f32), T([32, 1024, 16, 16], f32), T([256, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 1, 1], f32), T([32, 16, 1, 1], f32), T([256, 16, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 16, 1, 1], f32), T([32, 256, 1, 1], f32), T([16, 256, 1, 1], f32), [16], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 16, 16], f32), T([32, 256, 16, 16], f32), T([256, 256, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1024, 16, 16], f32), T([32, 512, 32, 32], f32), T([1024, 512, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 16, 16], f32), T([32, 256, 32, 32], f32), T([256, 256, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 32, 32], f32), T([32, 512, 32, 32], f32), T([256, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 32, 32], f32), T([32, 128, 32, 32], f32), T([512, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 384, 32, 32], f32), T([32, 128, 32, 32], f32), T([384, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 32, 32], f32), T([32, 512, 32, 32], f32), T([128, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 1, 1], f32), T([32, 8, 1, 1], f32), T([128, 8, 1, 1], f32), [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 8, 1, 1], f32), T([32, 128, 1, 1], f32), T([8, 128, 1, 1], f32), [8], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 128, 32, 32], f32), T([32, 128, 32, 32], f32), T([128, 128, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 32, 32], f32), T([32, 256, 64, 64], f32), T([512, 256, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 128, 32, 32], f32), T([32, 128, 64, 64], f32), T([128, 128, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 128, 64, 64], f32), T([32, 256, 64, 64], f32), T([128, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 256, 64, 64], f32), T([32, 64, 64, 64], f32), T([256, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 1, 1], f32), T([32, 8, 1, 1], f32), T([64, 8, 1, 1], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 8, 1, 1], f32), T([32, 64, 1, 1], f32), T([8, 64, 1, 1], f32), [8], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 64, 64], f32), T([32, 64, 64, 64], f32), T([64, 64, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 64, 64], f32), T([32, 256, 64, 64], f32), T([64, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 64, 64], f32), T([32, 64, 64, 64], f32), T([64, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 64, 64], f32), T([32, 32, 128, 128], f32), T([64, 32, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 128, 128], f32), T([32, 24, 128, 128], f32), T([32, 24, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 24, 128, 128], f32), T([32, 3, 256, 256], f32), T([24, 3, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([32, 24, 128, 128], f32), T([24], f32), T([24], f32), T([24], f32), T([24], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 128, 128], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 64, 64, 64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 256, 64, 64], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 128, 64, 64], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 128, 32, 32], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 32, 32], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 32, 32], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 256, 16, 16], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 1024, 16, 16], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 16, 16], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 8, 8], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 1536, 8, 8], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1280, 8, 8], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), True, 0.1, 1e-05), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1280, 8, 8], f32), T([32, 1280, 8, 8], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 1536, 8, 8], f32), T([32, 1536, 8, 8], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 8, 8], f32), T([32, 512, 8, 8], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 16, 16], f32), T([32, 512, 16, 16], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 1024, 16, 16], f32), T([32, 1024, 16, 16], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 256, 16, 16], f32), T([32, 256, 16, 16], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 32, 32], f32), T([32, 256, 32, 32], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 32, 32], f32), T([32, 512, 32, 32], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 128, 32, 32], f32), T([32, 128, 32, 32], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 128, 64, 64], f32), T([32, 128, 64, 64], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 256, 64, 64], f32), T([32, 256, 64, 64], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 64, 64, 64], f32), T([32, 64, 64, 64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 128, 128], f32), T([32, 32, 128, 128], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 24, 128, 128], f32), T([32, 24, 128, 128], f32), T([24], f32), T([24], f32), T([24], f32), T([24], f32), T([24], f32), 1e-05, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([32, 1280, 8, 8], f32, stride=(1280, 1, 0, 0)), 64), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 16, 16], f32, stride=(256, 1, 0, 0)), 256), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 32, 32], f32, stride=(128, 1, 0, 0)), 1024), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 64, 64], f32, stride=(64, 1, 0, 0)), 4096), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 2,
            "inputs": "((T([32, 64, 64, 64], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 32, 32], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 16, 16], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1280, 8, 8], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 2,
            "inputs": "((T([131072, 32], f32), T([32, 63], f32, stride=(1, 32))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32768, 64], f32), T([64, 31], f32, stride=(1, 64))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32768, 128], f32), T([128, 31], f32, stride=(1, 128))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([8192, 128], f32), T([128, 15], f32, stride=(1, 128))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([1000, 1280], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 32], f32, stride=(1, 1000)), T([32, 1280], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([15, 8192], f32, stride=(1, 15)), T([8192, 128], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([8192, 15], f32), T([15, 128], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([31, 32768], f32, stride=(1, 31)), T([32768, 128], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32768, 31], f32), T([31, 128], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([31, 32768], f32, stride=(1, 31)), T([32768, 64], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32768, 31], f32), T([31, 64], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([63, 131072], f32, stride=(1, 63)), T([131072, 32], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([131072, 63], f32), T([63, 32], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 4,
            "inputs": "((T([32, 64, 64, 64], f32), T([32, 64, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 128, 32, 32], f32), T([32, 128, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1024, 1024], f32), 0.1767766952966369), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 256, 16, 16], f32), T([32, 256, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 256], f32), 0.125), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 256], f32), 0.08838834764831845), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 64], f32), 0.08838834764831845), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 16, 16], f32), T([32, 256, 16, 16], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 32, 32], f32), T([32, 128, 32, 32], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 64, 64], f32), T([32, 64, 64, 64], f32)), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([32, 1000], f32), T([32], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([32], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([32], i64), 1000), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 4,
            "inputs": "((T([32, 8, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 16, 1, 1], f32),), {})"
        }
    ],
    "aten.sigmoid.default": [
        {
            "count": 2,
            "inputs": "((T([32, 64, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 1, 1], f32),), {})"
        }
    ],
    "aten.sigmoid_backward.default": [
        {
            "count": 2,
            "inputs": "((T([32, 256, 1, 1], f32), T([32, 256, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 1, 1], f32), T([32, 128, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 1, 1], f32), T([32, 64, 1, 1], f32)), {})"
        }
    ],
    "aten.silu_.default": [
        {
            "count": 1,
            "inputs": "((T([32, 24, 128, 128], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 128, 128], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 64, 64, 64], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 64, 64], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 128, 64, 64], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 128, 32, 32], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 32, 32], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 32, 32], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 256, 16, 16], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 1024, 16, 16], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 16, 16], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 8, 8], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 1536, 8, 8], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1280, 8, 8], f32),), {})"
        }
    ],
    "aten.silu_backward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1280, 8, 8], f32), T([32, 1280, 8, 8], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 1536, 8, 8], f32), T([32, 1536, 8, 8], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 8, 8], f32), T([32, 512, 8, 8], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 512, 16, 16], f32), T([32, 512, 16, 16], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 1024, 16, 16], f32), T([32, 1024, 16, 16], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 256, 16, 16], f32), T([32, 256, 16, 16], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 256, 32, 32], f32), T([32, 256, 32, 32], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 512, 32, 32], f32), T([32, 512, 32, 32], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 128, 32, 32], f32), T([32, 128, 32, 32], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 128, 64, 64], f32), T([32, 128, 64, 64], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 64, 64], f32), T([32, 256, 64, 64], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 64, 64, 64], f32), T([32, 64, 64, 64], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 128, 128], f32), T([32, 32, 128, 128], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 24, 128, 128], f32), T([32, 24, 128, 128], f32)), {})"
        }
    ],
    "aten.slice_backward.default": [
        {
            "count": 2,
            "inputs": "((T([1024, 8, 8], f32), [1024, 8, 15], 2, 7, 9223372036854775807, 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 8, 15], f32), [1024, 9, 15], 1, 0, 8, 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([2048, 16, 16], f32), [2048, 16, 31], 2, 15, 9223372036854775807, 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([2048, 16, 31], f32), [2048, 17, 31], 1, 0, 16, 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4096, 32, 32], f32), [4096, 32, 63], 2, 31, 9223372036854775807, 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4096, 32, 63], f32), [4096, 33, 63], 1, 0, 32, 1), {})"
        }
    ],
    "aten.split_with_sizes.default": [
        {
            "count": 1,
            "inputs": "((T([32, 384, 32, 32], f32), [128, 128, 128], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 768, 16, 16], f32), [256, 256, 256], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1536, 16, 16], f32), [512, 512, 512], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1536, 8, 8], f32), [512, 512, 512], 1), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 8, 8, 8, 8], f32, stride=(4096, 64, 1, 512, 8)), [2], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 8, 8, 8, 8], f32, stride=(4096, 512, 8, 64, 1)), [2], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 16, 16, 16, 16], f32, stride=(65536, 256, 1, 4096, 16)), [2], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 16, 16, 16, 16], f32, stride=(65536, 4096, 16, 256, 1)), [2], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 16, 16], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 32, 32, 32], f32, stride=(1048576, 1024, 1, 32768, 32)), [2], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 32, 32, 32], f32, stride=(1048576, 32768, 32, 1024, 1)), [2], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 32, 32], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 64, 64], f32), [2, 3], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 2,
            "inputs": "((T([32, 16, 1, 1], f32), T([32, 16, 1, 1], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 8, 1, 1], f32), T([32, 8, 1, 1], f32), 0), {})"
        }
    ]
}