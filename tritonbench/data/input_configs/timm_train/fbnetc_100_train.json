{
    "aten._foreach_add.List": {
        "count": 1,
        "inputs": "(([T([16, 3, 3, 3], f32), T([16, 16, 1, 1], f32), T([16, 1, 3, 3], f32), T([16, 16, 1, 1], f32), T([96, 16, 1, 1], f32), T([96, 1, 3, 3], f32), T([24, 96, 1, 1], f32), T([24, 24, 1, 1], f32), T([24, 1, 3, 3], f32), T([24, 24, 1, 1], f32), T([24, 24, 1, 1], f32), T([24, 1, 3, 3], f32), T([24, 24, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 5, 5], f32), T([32, 144, 1, 1], f32), T([96, 32, 1, 1], f32), T([96, 1, 5, 5], f32), T([32, 96, 1, 1], f32), T([192, 32, 1, 1], f32), T([192, 1, 5, 5], f32), T([32, 192, 1, 1], f32), T([192, 32, 1, 1], f32), T([192, 1, 3, 3], f32), T([32, 192, 1, 1], f32), T([192, 32, 1, 1], f32), T([192, 1, 5, 5], f32), T([64, 192, 1, 1], f32), T([192, 64, 1, 1], f32), T([192, 1, 5, 5], f32), T([64, 192, 1, 1], f32), T([384, 64, 1, 1], f32), T([384, 1, 5, 5], f32), T([64, 384, 1, 1], f32), T([384, 64, 1, 1], f32), T([384, 1, 5, 5], f32), T([64, 384, 1, 1], f32), T([384, 64, 1, 1], f32), T([384, 1, 5, 5], f32), T([112, 384, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([112, 672, 1, 1], f32), T([336, 112, 1, 1], f32), T([336, 1, 5, 5], f32), T([112, 336, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([184, 672, 1, 1], f32), T([1104, 184, 1, 1], f32), T([1104, 1, 5, 5], f32), T([184, 1104, 1, 1], f32), T([1104, 184, 1, 1], f32), T([1104, 1, 5, 5], f32), T([184, 1104, 1, 1], f32), T([1104, 184, 1, 1], f32), T([1104, 1, 5, 5], f32), T([184, 1104, 1, 1], f32), T([1104, 184, 1, 1], f32), T([1104, 1, 3, 3], f32), T([352, 1104, 1, 1], f32), T([1984, 352, 1, 1], f32), T([1000, 1984], f32)], [T([16, 3, 3, 3], f32), T([16, 16, 1, 1], f32), T([16, 1, 3, 3], f32), T([16, 16, 1, 1], f32), T([96, 16, 1, 1], f32), T([96, 1, 3, 3], f32), T([24, 96, 1, 1], f32), T([24, 24, 1, 1], f32), T([24, 1, 3, 3], f32), T([24, 24, 1, 1], f32), T([24, 24, 1, 1], f32), T([24, 1, 3, 3], f32), T([24, 24, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 5, 5], f32), T([32, 144, 1, 1], f32), T([96, 32, 1, 1], f32), T([96, 1, 5, 5], f32), T([32, 96, 1, 1], f32), T([192, 32, 1, 1], f32), T([192, 1, 5, 5], f32), T([32, 192, 1, 1], f32), T([192, 32, 1, 1], f32), T([192, 1, 3, 3], f32), T([32, 192, 1, 1], f32), T([192, 32, 1, 1], f32), T([192, 1, 5, 5], f32), T([64, 192, 1, 1], f32), T([192, 64, 1, 1], f32), T([192, 1, 5, 5], f32), T([64, 192, 1, 1], f32), T([384, 64, 1, 1], f32), T([384, 1, 5, 5], f32), T([64, 384, 1, 1], f32), T([384, 64, 1, 1], f32), T([384, 1, 5, 5], f32), T([64, 384, 1, 1], f32), T([384, 64, 1, 1], f32), T([384, 1, 5, 5], f32), T([112, 384, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([112, 672, 1, 1], f32), T([336, 112, 1, 1], f32), T([336, 1, 5, 5], f32), T([112, 336, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([184, 672, 1, 1], f32), T([1104, 184, 1, 1], f32), T([1104, 1, 5, 5], f32), T([184, 1104, 1, 1], f32), T([1104, 184, 1, 1], f32), T([1104, 1, 5, 5], f32), T([184, 1104, 1, 1], f32), T([1104, 184, 1, 1], f32), T([1104, 1, 5, 5], f32), T([184, 1104, 1, 1], f32), T([1104, 184, 1, 1], f32), T([1104, 1, 3, 3], f32), T([352, 1104, 1, 1], f32), T([1984, 352, 1, 1], f32), T([1000, 1984], f32)]), {'alpha': 0.0001})"
    },
    "aten._log_softmax.default": {
        "count": 1,
        "inputs": "((T([512, 1000], f32), 1, False), {})"
    },
    "aten._log_softmax_backward_data.default": {
        "count": 1,
        "inputs": "((T([512, 1000], f32), T([512, 1000], f32), 1, f32), {})"
    },
    "aten.add.Tensor": {
        "count": 6,
        "inputs": "((T([512, 184, 7, 7], f32), T([512, 184, 7, 7], f32)), {})"
    },
    "aten.add_.Tensor": {
        "count": 65,
        "inputs": "((T([], i64), 1), {})"
    },
    "aten.addmm.default": {
        "count": 1,
        "inputs": "((T([1000], f32), T([512, 1984], f32), T([1984, 1000], f32, stride=(1, 1984))), {})"
    },
    "aten.clone.default": {
        "count": 1,
        "inputs": "((T([1000, 1984], f32),), {})"
    },
    "aten.convolution.default": {
        "count": 1,
        "inputs": "((T([512, 352, 7, 7], f32), T([1984, 352, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
    },
    "aten.convolution_backward.default": {
        "count": 1,
        "inputs": "((T([512, 16, 112, 112], f32), T([512, 3, 224, 224], f32), T([16, 3, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
    },
    "aten.cudnn_batch_norm.default": {
        "count": 1,
        "inputs": "((T([512, 1984, 7, 7], f32), T([1984], f32), T([1984], f32), T([1984], f32), T([1984], f32), True, 0.1, 0.001), {})"
    },
    "aten.cudnn_batch_norm_backward.default": {
        "count": 4,
        "inputs": "((T([512, 16, 112, 112], f32), T([512, 16, 112, 112], f32), T([16], f32), T([16], f32), T([16], f32), T([16], f32), T([16], f32), 0.001, T([0], u8)), {})"
    },
    "aten.div.Scalar": {
        "count": 1,
        "inputs": "((T([512, 1984, 7, 7], f32, stride=(1984, 1, 0, 0)), 49), {})"
    },
    "aten.mean.dim": {
        "count": 1,
        "inputs": "((T([512, 1984, 7, 7], f32), [-1, -2], True), {})"
    },
    "aten.mm.default": {
        "count": 1,
        "inputs": "((T([1000, 512], f32, stride=(1, 1000)), T([512, 1984], f32)), {})"
    },
    "aten.nll_loss_backward.default": {
        "count": 1,
        "inputs": "((T([], f32), T([512, 1000], f32), T([512], i64), None, 1, -100, T([], f32)), {})"
    },
    "aten.nll_loss_forward.default": {
        "count": 1,
        "inputs": "((T([512, 1000], f32), T([512], i64), None, 1, -100), {})"
    },
    "aten.random_.to": {
        "count": 1,
        "inputs": "((T([512], i64), 1000), {})"
    },
    "aten.relu_.default": {
        "count": 1,
        "inputs": "((T([512, 1984, 7, 7], f32),), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 1,
        "inputs": "((T([512, 1000], f32), [0], True), {})"
    },
    "aten.threshold_backward.default": {
        "count": 3,
        "inputs": "((T([512, 16, 112, 112], f32), T([512, 16, 112, 112], f32), 0), {})"
    }
}