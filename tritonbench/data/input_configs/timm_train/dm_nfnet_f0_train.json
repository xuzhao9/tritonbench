{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([16, 3, 3, 3], f32), T([16, 1, 1, 1], f32), T([32, 16, 3, 3], f32), T([32, 1, 1, 1], f32), T([64, 32, 3, 3], f32), T([64, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([256, 128, 1, 1], f32), T([256, 1, 1, 1], f32), T([128, 128, 1, 1], f32), T([128, 1, 1, 1], f32), T([128, 128, 3, 3], f32), T([128, 1, 1, 1], f32), T([128, 128, 3, 3], f32), T([128, 1, 1, 1], f32), T([256, 128, 1, 1], f32), T([256, 1, 1, 1], f32), T([128, 256, 1, 1], f32), T([256, 128, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 1, 1, 1], f32), T([256, 256, 1, 1], f32), T([256, 1, 1, 1], f32), T([256, 128, 3, 3], f32), T([256, 1, 1, 1], f32), T([256, 128, 3, 3], f32), T([256, 1, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 1, 1, 1], f32), T([256, 512, 1, 1], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 1, 1, 1], f32), T([256, 128, 3, 3], f32), T([256, 1, 1, 1], f32), T([256, 128, 3, 3], f32), T([256, 1, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 1, 1, 1], f32), T([256, 512, 1, 1], f32), T([512, 256, 1, 1], f32), T([1536, 512, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 512, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1536, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([3072, 1536, 1, 1], f32), T([3072, 1, 1, 1], f32), T([1000, 3072], f32)], [T([16, 3, 3, 3], f32), T([16, 1, 1, 1], f32), T([32, 16, 3, 3], f32), T([32, 1, 1, 1], f32), T([64, 32, 3, 3], f32), T([64, 1, 1, 1], f32), T([128, 64, 3, 3], f32), T([128, 1, 1, 1], f32), T([256, 128, 1, 1], f32), T([256, 1, 1, 1], f32), T([128, 128, 1, 1], f32), T([128, 1, 1, 1], f32), T([128, 128, 3, 3], f32), T([128, 1, 1, 1], f32), T([128, 128, 3, 3], f32), T([128, 1, 1, 1], f32), T([256, 128, 1, 1], f32), T([256, 1, 1, 1], f32), T([128, 256, 1, 1], f32), T([256, 128, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 1, 1, 1], f32), T([256, 256, 1, 1], f32), T([256, 1, 1, 1], f32), T([256, 128, 3, 3], f32), T([256, 1, 1, 1], f32), T([256, 128, 3, 3], f32), T([256, 1, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 1, 1, 1], f32), T([256, 512, 1, 1], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 1, 1, 1], f32), T([256, 128, 3, 3], f32), T([256, 1, 1, 1], f32), T([256, 128, 3, 3], f32), T([256, 1, 1, 1], f32), T([512, 256, 1, 1], f32), T([512, 1, 1, 1], f32), T([256, 512, 1, 1], f32), T([512, 256, 1, 1], f32), T([1536, 512, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 512, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1536, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([768, 128, 3, 3], f32), T([768, 1, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536, 1, 1, 1], f32), T([768, 1536, 1, 1], f32), T([1536, 768, 1, 1], f32), T([3072, 1536, 1, 1], f32), T([3072, 1, 1, 1], f32), T([1000, 3072], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128, 1000], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 3,
            "inputs": "((T([128, 256, 48, 48], f32), T([128, 256, 48, 48], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 512, 24, 24], f32), T([128, 512, 24, 24], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 1536, 12, 12], f32), T([128, 1536, 12, 12], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 1536, 6, 6], f32), T([128, 1536, 6, 6], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 48, 48], f32), T([128, 128, 48, 48], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([128, 3072], f32), T([3072, 1000], f32, stride=(1, 3072))), {})"
        }
    ],
    "aten.avg_pool2d.default": [
        {
            "count": 1,
            "inputs": "((T([128, 256, 48, 48], f32), [2, 2], [2, 2], [0, 0], True, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 24, 24], f32), [2, 2], [2, 2], [0, 0], True, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1536, 12, 12], f32), [2, 2], [2, 2], [0, 0], True, False), {})"
        }
    ],
    "aten.avg_pool2d_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1536, 6, 6], f32), T([128, 1536, 12, 12], f32), [2, 2], [2, 2], [0, 0], True, False, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 12, 12], f32), T([128, 512, 24, 24], f32), [2, 2], [2, 2], [0, 0], True, False, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 24, 24], f32), T([128, 256, 48, 48], f32), [2, 2], [2, 2], [0, 0], True, False, None), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 1,
            "inputs": "((T([128, 256, 48, 48], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 6, 6], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([], f32),), {})"
        },
        {
            "count": 11,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 20,
            "inputs": "((T([1536], f32),), {})"
        },
        {
            "count": 36,
            "inputs": "((T([768], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([3072], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 16, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 32, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 3, 3], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 1, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 128, 1, 1], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([256, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([512, 256, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 256, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 128, 3, 3], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1536, 512, 1, 1], f32),), {})"
        },
        {
            "count": 11,
            "inputs": "((T([1536, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([768, 512, 1, 1], f32),), {})"
        },
        {
            "count": 27,
            "inputs": "((T([768, 1, 1, 1], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([768, 128, 3, 3], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1536, 768, 1, 1], f32),), {})"
        },
        {
            "count": 17,
            "inputs": "((T([768, 1536, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1536, 1536, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([3072, 1536, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([3072, 1, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 3072], f32),), {})"
        }
    ],
    "aten.constant_pad_nd.default": [
        {
            "count": 1,
            "inputs": "((T([128, 3, 192, 192], f32), [0, 1, 0, 1], 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 96, 96], f32), [0, 1, 0, 1], 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 48, 48], f32), [0, 1, 0, 1], 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 24, 24], f32), [0, 1, 0, 1], 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 12, 12], f32), [0, 1, 0, 1], 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 13, 13], f32), [0, -1, 0, -1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 25, 25], f32), [0, -1, 0, -1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 49, 49], f32), [0, -1, 0, -1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 97, 97], f32), [0, -1, 0, -1]), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([128, 3, 193, 193], f32), T([16, 3, 3, 3], f32), T([16], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 96, 96], f32), T([32, 16, 3, 3], f32), T([32], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 96, 96], f32), T([64, 32, 3, 3], f32), T([64], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 97, 97], f32), T([128, 64, 3, 3], f32), T([128], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 48, 48], f32), T([256, 128, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 48, 48], f32), T([128, 128, 1, 1], f32), T([128], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 48, 48], f32), T([128, 128, 3, 3], f32), T([128], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32), T([128, 256, 1, 1], f32), T([128], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 1, 1], f32), T([256, 128, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 256, 24, 24], f32), T([512, 256, 1, 1], f32), T([512], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 48, 48], f32), T([256, 256, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 49, 49], f32), T([256, 128, 3, 3], f32), T([256], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 256, 24, 24], f32), T([256, 128, 3, 3], f32), T([256], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 1, 1], f32), T([256, 512, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 1, 1], f32), T([512, 256, 1, 1], f32), T([512], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 24, 24], f32), T([256, 512, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 12, 12], f32), T([1536, 512, 1, 1], f32), T([1536], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 24, 24], f32), T([768, 512, 1, 1], f32), T([768], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 25, 25], f32), T([768, 128, 3, 3], f32), T([768], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 6), {})"
        },
        {
            "count": 11,
            "inputs": "((T([128, 768, 12, 12], f32), T([768, 128, 3, 3], f32), T([768], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 6), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 768, 12, 12], f32), T([1536, 768, 1, 1], f32), T([1536], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 1536, 1, 1], f32), T([768, 1536, 1, 1], f32), T([768], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 768, 1, 1], f32), T([1536, 768, 1, 1], f32), T([1536], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32), T([768, 1536, 1, 1], f32), T([768], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1536, 6, 6], f32), T([1536, 1536, 1, 1], f32), T([1536], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 13, 13], f32), T([768, 128, 3, 3], f32), T([768], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 6), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 768, 6, 6], f32), T([768, 128, 3, 3], f32), T([768], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 6), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 768, 6, 6], f32), T([1536, 768, 1, 1], f32), T([1536], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 6, 6], f32), T([768, 1536, 1, 1], f32), T([768], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1536, 6, 6], f32), T([3072, 1536, 1, 1], f32), T([3072], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 3072, 6, 6], f32), T([128, 1536, 6, 6], f32), T([3072, 1536, 1, 1], f32), [3072], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 1536, 1, 1], f32), T([128, 768, 1, 1], f32), T([1536, 768, 1, 1], f32), [1536], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 768, 1, 1], f32), T([128, 1536, 1, 1], f32), T([768, 1536, 1, 1], f32), [768], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 6, 6], f32), T([128, 768, 6, 6], f32), T([1536, 768, 1, 1], f32), [1536], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 768, 6, 6], f32), T([128, 768, 6, 6], f32), T([768, 128, 3, 3], f32), [768], [1, 1], [1, 1], [1, 1], False, [0, 0], 6, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 768, 6, 6], f32), T([128, 1536, 6, 6], f32), T([768, 1536, 1, 1], f32), [768], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 6, 6], f32), T([128, 768, 13, 13], f32), T([768, 128, 3, 3], f32), [768], [2, 2], [0, 0], [1, 1], False, [0, 0], 6, [True, True, True]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 768, 12, 12], f32), T([128, 1536, 12, 12], f32), T([768, 1536, 1, 1], f32), [768], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1536, 6, 6], f32), T([128, 1536, 6, 6], f32), T([1536, 1536, 1, 1], f32), [1536], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32), T([128, 768, 12, 12], f32), T([1536, 768, 1, 1], f32), [1536], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 11,
            "inputs": "((T([128, 768, 12, 12], f32), T([128, 768, 12, 12], f32), T([768, 128, 3, 3], f32), [768], [1, 1], [1, 1], [1, 1], False, [0, 0], 6, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 12, 12], f32), T([128, 768, 25, 25], f32), T([768, 128, 3, 3], f32), [768], [2, 2], [0, 0], [1, 1], False, [0, 0], 6, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 24, 24], f32), T([128, 512, 24, 24], f32), T([768, 512, 1, 1], f32), [768], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1536, 12, 12], f32), T([128, 512, 12, 12], f32), T([1536, 512, 1, 1], f32), [1536], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 1, 1], f32), T([128, 256, 1, 1], f32), T([512, 256, 1, 1], f32), [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 1, 1], f32), T([128, 512, 1, 1], f32), T([256, 512, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 24, 24], f32), T([128, 256, 24, 24], f32), T([512, 256, 1, 1], f32), [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 256, 24, 24], f32), T([128, 256, 24, 24], f32), T([256, 128, 3, 3], f32), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 24, 24], f32), T([128, 512, 24, 24], f32), T([256, 512, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 24, 24], f32), T([128, 256, 49, 49], f32), T([256, 128, 3, 3], f32), [256], [2, 2], [0, 0], [1, 1], False, [0, 0], 2, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 48, 48], f32), T([128, 256, 48, 48], f32), T([256, 256, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32), T([128, 128, 1, 1], f32), T([256, 128, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 256, 1, 1], f32), [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 48, 48], f32), T([128, 128, 48, 48], f32), T([256, 128, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 48, 48], f32), T([128, 128, 48, 48], f32), T([128, 128, 3, 3], f32), [128], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 48, 48], f32), T([128, 128, 48, 48], f32), T([128, 128, 1, 1], f32), [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 48, 48], f32), T([128, 64, 97, 97], f32), T([128, 64, 3, 3], f32), [128], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 96, 96], f32), T([128, 32, 96, 96], f32), T([64, 32, 3, 3], f32), [64], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 96, 96], f32), T([128, 16, 96, 96], f32), T([32, 16, 3, 3], f32), [32], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 96, 96], f32), T([128, 3, 193, 193], f32), T([16, 3, 3, 3], f32), [16], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([128, 3072, 6, 6], f32, stride=(3072, 1, 0, 0)), 36), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 6, 6], f32, stride=(1536, 1, 0, 0)), 36), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32, stride=(1536, 1, 0, 0)), 144), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32, stride=(512, 1, 0, 0)), 576), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 48, 48], f32, stride=(256, 1, 0, 0)), 2304), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 1,
            "inputs": "((T([128, 16, 96, 96], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 96, 96], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 96, 96], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 128, 48, 48], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 48, 48], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 256, 24, 24], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 24, 24], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 768, 12, 12], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 768, 6, 6], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 6, 6], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 3072, 6, 6], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 3072, 6, 6], f32), T([128, 3072, 6, 6], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 768, 6, 6], f32), T([128, 768, 6, 6], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 6, 6], f32), T([128, 1536, 6, 6], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 768, 12, 12], f32), T([128, 768, 12, 12], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32), T([128, 1536, 12, 12], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 24, 24], f32), T([128, 768, 24, 24], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32), T([128, 512, 24, 24], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 256, 24, 24], f32), T([128, 256, 24, 24], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 48, 48], f32), T([128, 256, 48, 48], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 128, 48, 48], f32), T([128, 128, 48, 48], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 96, 96], f32), T([128, 64, 96, 96], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 96, 96], f32), T([128, 32, 96, 96], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 96, 96], f32), T([128, 16, 96, 96], f32)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([128, 256, 48, 48], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32), [2, 3], True), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32), [2, 3], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 6, 6], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 3072, 6, 6], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([1000, 3072], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 128], f32, stride=(1, 1000)), T([128, 3072], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 2,
            "inputs": "((T([16, 1, 1, 1], f32), 0.19245008972987526), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 1, 1, 1], f32), 0.08333333333333333), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 1, 1, 1], f32), 0.05892556509887896), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1, 1, 1], f32), 0.041666666666666664), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 48, 48], f32), 1.0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 1, 1, 1], f32), 0.08838834764831845), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1, 1, 1], f32), 0.08838834764831845), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 1, 1, 1], f32), 0.02946278254943948), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 48, 48], f32), T([128, 256, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 48, 48], f32), 2.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 48, 48], f32), 0.2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 48, 48], f32), 0.9805806756909201), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 1, 1, 1], f32), 0.0625), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1, 1, 1], f32), 0.0625), {})"
        },
        {
            "count": 8,
            "inputs": "((T([256, 1, 1, 1], f32), 0.02946278254943948), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 24, 24], f32), T([128, 512, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 24, 24], f32), 2.0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 24, 24], f32), 0.2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32), 0.9805806756909201), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1, 1, 1], f32), 0.04419417382415922), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32), 0.9622504486493761), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1536, 1, 1, 1], f32), 0.04419417382415922), {})"
        },
        {
            "count": 2,
            "inputs": "((T([768, 1, 1, 1], f32), 0.04419417382415922), {})"
        },
        {
            "count": 36,
            "inputs": "((T([768, 1, 1, 1], f32), 0.02946278254943948), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1536, 1, 1, 1], f32), 0.03608439182435161), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 1536, 12, 12], f32), T([128, 1536, 1, 1], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 1536, 12, 12], f32), 2.0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 1536, 12, 12], f32), 0.2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 12, 12], f32), 0.9805806756909201), {})"
        },
        {
            "count": 16,
            "inputs": "((T([768, 1, 1, 1], f32), 0.02551551815399144), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 12, 12], f32), 0.9622504486493761), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 12, 12], f32), 0.9449111825230679), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 12, 12], f32), 0.9284766908852592), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 12, 12], f32), 0.9128709291752768), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 12, 12], f32), 0.8980265101338745), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1536, 1, 1, 1], f32), 0.02551551815399144), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 6, 6], f32), T([128, 1536, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 6, 6], f32), 2.0), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 6, 6], f32), 0.2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 6, 6], f32), 0.9805806756909201), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 6, 6], f32), 0.9622504486493761), {})"
        },
        {
            "count": 2,
            "inputs": "((T([3072, 1, 1, 1], f32), 0.02551551815399144), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 3072, 6, 6], f32), 1.7015043497085571), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 6, 6], f32), T([128, 1536, 6, 6], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 6, 6], f32), T([], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 768, 6, 6], f32), 1.7015043497085571), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 6, 6], f32), 1.7015043497085571), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 768, 12, 12], f32), 1.7015043497085571), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32), 1.7015043497085571), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 1536, 12, 12], f32), T([128, 1536, 12, 12], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 24, 24], f32), 1.7015043497085571), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32), 1.7015043497085571), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 24, 24], f32), T([128, 512, 24, 24], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32), T([], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 256, 24, 24], f32), 1.7015043497085571), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 48, 48], f32), 1.7015043497085571), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 48, 48], f32), T([128, 256, 48, 48], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 48, 48], f32), T([], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 128, 48, 48], f32), 1.7015043497085571), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 96, 96], f32), 1.7015043497085571), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 96, 96], f32), 1.7015043497085571), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 96, 96], f32), 1.7015043497085571), {})"
        }
    ],
    "aten.mul_.Tensor": [
        {
            "count": 1,
            "inputs": "((T([128, 16, 96, 96], f32), 1.7015043497085571), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 96, 96], f32), 1.7015043497085571), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 96, 96], f32), 1.7015043497085571), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 128, 48, 48], f32), 1.7015043497085571), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 48, 48], f32), T([], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 48, 48], f32), 1.7015043497085571), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 256, 24, 24], f32), 1.7015043497085571), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32), T([], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32), 1.7015043497085571), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 24, 24], f32), 1.7015043497085571), {})"
        },
        {
            "count": 18,
            "inputs": "((T([128, 768, 12, 12], f32), 1.7015043497085571), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32), T([], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32), 1.7015043497085571), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 768, 6, 6], f32), 1.7015043497085571), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 6, 6], f32), T([], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 6, 6], f32), 1.7015043497085571), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 3072, 6, 6], f32), 1.7015043497085571), {})"
        }
    ],
    "aten.native_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([1, 16, 27], f32), T([16], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 32, 144], f32), T([32], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 64, 288], f32), T([64], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 576], f32), T([128], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 256, 128], f32), T([256], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 128], f32), T([128], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 128, 1152], f32), T([128], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1, 512, 256], f32), T([512], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 256, 256], f32), T([256], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 256, 1152], f32), T([256], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 256, 512], f32), T([256], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1536, 512], f32), T([1536], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 768, 512], f32), T([768], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1, 768, 1152], f32), T([768], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 9,
            "inputs": "((T([1, 1536, 768], f32), T([1536], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1, 768, 1536], f32), T([768], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1536, 1536], f32), T([1536], f32), None, None, None, True, 0.0, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 3072, 1536], f32), T([3072], f32), None, None, None, True, 0.0, 1e-05), {})"
        }
    ],
    "aten.native_batch_norm_backward.default": [
        {
            "count": 1,
            "inputs": "((T([1, 3072, 1536], f32), T([1, 3072, 1536], f32), T([3072], f32), None, None, T([3072], f32), T([3072], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 9,
            "inputs": "((T([1, 1536, 768], f32), T([1, 1536, 768], f32), T([1536], f32), None, None, T([1536], f32), T([1536], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1, 768, 1152], f32), T([1, 768, 1152], f32), T([768], f32), None, None, T([768], f32), T([768], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1, 768, 1536], f32), T([1, 768, 1536], f32), T([768], f32), None, None, T([768], f32), T([768], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1536, 1536], f32), T([1, 1536, 1536], f32), T([1536], f32), None, None, T([1536], f32), T([1536], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 768, 512], f32), T([1, 768, 512], f32), T([768], f32), None, None, T([768], f32), T([768], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1536, 512], f32), T([1, 1536, 512], f32), T([1536], f32), None, None, T([1536], f32), T([1536], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1, 512, 256], f32), T([1, 512, 256], f32), T([512], f32), None, None, T([512], f32), T([512], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 256, 1152], f32), T([1, 256, 1152], f32), T([256], f32), None, None, T([256], f32), T([256], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 256, 512], f32), T([1, 256, 512], f32), T([256], f32), None, None, T([256], f32), T([256], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 256, 256], f32), T([1, 256, 256], f32), T([256], f32), None, None, T([256], f32), T([256], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 256, 128], f32), T([1, 256, 128], f32), T([256], f32), None, None, T([256], f32), T([256], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 128, 1152], f32), T([1, 128, 1152], f32), T([128], f32), None, None, T([128], f32), T([128], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 128], f32), T([1, 128, 128], f32), T([128], f32), None, None, T([128], f32), T([128], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 576], f32), T([1, 128, 576], f32), T([128], f32), None, None, T([128], f32), T([128], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 64, 288], f32), T([1, 64, 288], f32), T([64], f32), None, None, T([64], f32), T([64], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 32, 144], f32), T([1, 32, 144], f32), T([32], f32), None, None, T([32], f32), T([32], f32), True, 1e-05, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 16, 27], f32), T([1, 16, 27], f32), T([16], f32), None, None, T([16], f32), T([16], f32), True, 1e-05, [True, True, False]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([128, 1000], f32), T([128], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([128], i64), 1000), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 1,
            "inputs": "((T([128, 128, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 1, 1], f32),), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 768, 1, 1], f32),), {})"
        }
    ],
    "aten.sigmoid.default": [
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 1, 1], f32),), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 1536, 1, 1], f32),), {})"
        }
    ],
    "aten.sigmoid_backward.default": [
        {
            "count": 9,
            "inputs": "((T([128, 1536, 1, 1], f32), T([128, 1536, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 1, 1], f32), T([128, 512, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32), T([128, 256, 1, 1], f32)), {})"
        }
    ],
    "aten.sum.default": [
        {
            "count": 3,
            "inputs": "((T([128, 1536, 6, 6], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 48, 48], f32),), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1536, 6, 6], f32), [2, 3], True), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 1536, 12, 12], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 24, 24], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 48, 48], f32), [2, 3], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 9,
            "inputs": "((T([128, 768, 1, 1], f32), T([128, 768, 1, 1], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 1, 1], f32), T([128, 256, 1, 1], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 1, 1], f32), T([128, 128, 1, 1], f32), 0), {})"
        }
    ]
}