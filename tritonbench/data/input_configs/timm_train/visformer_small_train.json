{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([1, 192, 28, 28], f32), T([1, 384, 14, 14], f32), T([1, 768, 7, 7], f32), T([32, 3, 7, 7], f32), T([192, 32, 4, 4], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 2, 2], f32), T([1152, 384, 1, 1], f32), T([384, 384, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1152, 384, 1, 1], f32), T([384, 384, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1152, 384, 1, 1], f32), T([384, 384, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1152, 384, 1, 1], f32), T([384, 384, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([768, 384, 2, 2], f32), T([2304, 768, 1, 1], f32), T([768, 768, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([2304, 768, 1, 1], f32), T([768, 768, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([2304, 768, 1, 1], f32), T([768, 768, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([2304, 768, 1, 1], f32), T([768, 768, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([1000, 768], f32)], [T([1, 192, 28, 28], f32), T([1, 384, 14, 14], f32), T([1, 768, 7, 7], f32), T([32, 3, 7, 7], f32), T([192, 32, 4, 4], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 1, 1], f32), T([384, 48, 3, 3], f32), T([192, 384, 1, 1], f32), T([384, 192, 2, 2], f32), T([1152, 384, 1, 1], f32), T([384, 384, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1152, 384, 1, 1], f32), T([384, 384, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1152, 384, 1, 1], f32), T([384, 384, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([1152, 384, 1, 1], f32), T([384, 384, 1, 1], f32), T([1536, 384, 1, 1], f32), T([384, 1536, 1, 1], f32), T([768, 384, 2, 2], f32), T([2304, 768, 1, 1], f32), T([768, 768, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([2304, 768, 1, 1], f32), T([768, 768, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([2304, 768, 1, 1], f32), T([768, 768, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([2304, 768, 1, 1], f32), T([768, 768, 1, 1], f32), T([3072, 768, 1, 1], f32), T([768, 3072, 1, 1], f32), T([1000, 768], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128, 1000], f32), 1, f32), {})"
        }
    ],
    "aten._softmax.default": [
        {
            "count": 4,
            "inputs": "((T([128, 6, 196, 196], f32), -1, False), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 6, 49, 49], f32), -1, False), {})"
        }
    ],
    "aten._softmax_backward_data.default": [
        {
            "count": 4,
            "inputs": "((T([128, 6, 49, 49], f32), T([128, 6, 49, 49], f32), -1, f32), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 6, 196, 196], f32), T([128, 6, 196, 196], f32), -1, f32), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 8,
            "inputs": "((T([128, 6, 196, 64], f32), [768, 196, 64]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 6, 64, 196], f32), [768, 64, 196]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 196, 196], f32), [128, 6, 196, 196]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 196, 64], f32), [128, 6, 196, 64]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 6, 64, 196], f32), [128, 384, 14, 14]), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 6, 49, 128], f32), [768, 49, 128]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 6, 128, 49], f32), [768, 128, 49]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 49, 49], f32), [128, 6, 49, 49]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 49, 128], f32), [128, 6, 49, 128]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 6, 128, 49], f32), [128, 768, 7, 7]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 3, 6, 128, 49], f32), [128, 2304, 7, 7]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 3, 6, 64, 196], f32), [128, 1152, 14, 14]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 1,
            "inputs": "((T([128, 192, 28, 28], f32), T([1, 192, 28, 28], f32)), {})"
        },
        {
            "count": 14,
            "inputs": "((T([128, 192, 28, 28], f32), T([128, 192, 28, 28], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 14, 14], f32), T([1, 384, 14, 14], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([128, 384, 14, 14], f32), T([128, 384, 14, 14], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 7, 7], f32), T([1, 768, 7, 7], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([128, 768, 7, 7], f32), T([128, 768, 7, 7], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 28,
            "inputs": "((T([], i64), 1), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([128, 768], f32), T([768, 1000], f32, stride=(1, 768))), {})"
        }
    ],
    "aten.bmm.default": [
        {
            "count": 4,
            "inputs": "((T([768, 196, 64], f32), T([768, 64, 196], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 196, 196], f32), T([768, 196, 64], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 49, 128], f32), T([768, 128, 49], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 49, 49], f32), T([768, 49, 128], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 49, 49], f32, stride=(2401, 1, 49)), T([768, 49, 128], f32, stride=(6272, 1, 49))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 49, 128], f32, stride=(6272, 1, 49)), T([768, 128, 49], f32, stride=(6272, 1, 128))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 128, 49], f32, stride=(6272, 1, 128)), T([768, 49, 49], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 49, 49], f32), T([768, 49, 128], f32, stride=(6272, 1, 49))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 196, 196], f32, stride=(38416, 1, 196)), T([768, 196, 64], f32, stride=(12544, 1, 196))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 196, 64], f32, stride=(12544, 1, 196)), T([768, 64, 196], f32, stride=(12544, 1, 64))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 64, 196], f32, stride=(12544, 1, 64)), T([768, 196, 196], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 196, 196], f32), T([768, 196, 64], f32, stride=(12544, 1, 196))), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 2,
            "inputs": "((T([32], f32),), {})"
        },
        {
            "count": 17,
            "inputs": "((T([192], f32),), {})"
        },
        {
            "count": 19,
            "inputs": "((T([384], f32),), {})"
        },
        {
            "count": 21,
            "inputs": "((T([768], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 192, 28, 28], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 384, 14, 14], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 768, 7, 7], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 3, 7, 7], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([192, 32, 4, 4], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([384, 192, 1, 1], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([384, 48, 3, 3], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([192, 384, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([384, 192, 2, 2], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1152, 384, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([384, 384, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1536, 384, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([384, 1536, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([768, 384, 2, 2], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([2304, 768, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 768, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([3072, 768, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 3072, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 768], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([128, 3, 224, 224], f32), T([32, 3, 7, 7], f32), None, [2, 2], [3, 3], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([192, 32, 4, 4], f32), T([192], f32), [4, 4], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 192, 28, 28], f32), T([384, 192, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 384, 28, 28], f32), T([384, 48, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 8), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 384, 28, 28], f32), T([192, 384, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 28, 28], f32), T([384, 192, 2, 2], f32), T([384], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 384, 14, 14], f32), T([1152, 384, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 384, 14, 14], f32), T([384, 384, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 384, 14, 14], f32), T([1536, 384, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 1536, 14, 14], f32), T([384, 1536, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 14, 14], f32), T([768, 384, 2, 2], f32), T([768], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 768, 7, 7], f32), T([2304, 768, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 768, 7, 7], f32), T([768, 768, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 768, 7, 7], f32), T([3072, 768, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 3072, 7, 7], f32), T([768, 3072, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 4,
            "inputs": "((T([128, 768, 7, 7], f32), T([128, 3072, 7, 7], f32), T([768, 3072, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 3072, 7, 7], f32), T([128, 768, 7, 7], f32), T([3072, 768, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 768, 7, 7], f32), T([128, 768, 7, 7], f32), T([768, 768, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 2304, 7, 7], f32), T([128, 768, 7, 7], f32), T([2304, 768, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 7, 7], f32), T([128, 384, 14, 14], f32), T([768, 384, 2, 2], f32), [768], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 384, 14, 14], f32), T([128, 1536, 14, 14], f32), T([384, 1536, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 1536, 14, 14], f32), T([128, 384, 14, 14], f32), T([1536, 384, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 384, 14, 14], f32), T([128, 384, 14, 14], f32), T([384, 384, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 1152, 14, 14], f32), T([128, 384, 14, 14], f32), T([1152, 384, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 14, 14], f32), T([128, 192, 28, 28], f32), T([384, 192, 2, 2], f32), [384], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 192, 28, 28], f32), T([128, 384, 28, 28], f32), T([192, 384, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 384, 28, 28], f32), T([128, 384, 28, 28], f32), T([384, 48, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 8, [True, True, False]), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 384, 28, 28], f32), T([128, 192, 28, 28], f32), T([384, 192, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 28, 28], f32), T([128, 32, 112, 112], f32), T([192, 32, 4, 4], f32), [192], [4, 4], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([128, 3, 224, 224], f32), T([32, 3, 7, 7], f32), [0], [2, 2], [3, 3], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 192, 28, 28], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 384, 14, 14], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 10,
            "inputs": "((T([128, 768, 7, 7], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), True, 0.1, 1e-05), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 10,
            "inputs": "((T([128, 768, 7, 7], f32), T([128, 768, 7, 7], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 384, 14, 14], f32), T([128, 384, 14, 14], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 192, 28, 28], f32), T([128, 192, 28, 28], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([128, 32, 112, 112], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 1e-05, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([128, 768, 7, 7], f32, stride=(768, 1, 0, 0)), 49), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 14,
            "inputs": "((T([128, 384, 28, 28], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 1536, 14, 14], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 3072, 7, 7], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 4,
            "inputs": "((T([128, 3072, 7, 7], f32), T([128, 3072, 7, 7], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 1536, 14, 14], f32), T([128, 1536, 14, 14], f32)), {})"
        },
        {
            "count": 14,
            "inputs": "((T([128, 384, 28, 28], f32), T([128, 384, 28, 28], f32)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([128, 768, 7, 7], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([1000, 768], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 128], f32, stride=(1, 1000)), T([128, 768], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 8,
            "inputs": "((T([128, 6, 196, 196], f32), 0.125), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 6, 49, 49], f32), 0.08838834764831845), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([128, 1000], f32), T([128], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([128], i64), 1000), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32),), {})"
        }
    ],
    "aten.stack.default": [
        {
            "count": 4,
            "inputs": "(([T([128, 6, 49, 128], f32), T([128, 6, 49, 128], f32, stride=(37632, 6272, 1, 49)), T([128, 6, 49, 128], f32)],), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([128, 6, 196, 64], f32), T([128, 6, 196, 64], f32, stride=(75264, 12544, 1, 196)), T([128, 6, 196, 64], f32)],), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 7, 7], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 14, 14], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 28, 28], f32), [0], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([128, 32, 112, 112], f32), 0), {})"
        }
    ],
    "aten.unbind.int": [
        {
            "count": 4,
            "inputs": "((T([3, 128, 6, 196, 64], f32, stride=(75264, 225792, 12544, 1, 196)),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([3, 128, 6, 49, 128], f32, stride=(37632, 112896, 6272, 1, 49)),), {})"
        }
    ]
}