{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([64, 3, 4, 4], f32), T([128, 64, 2, 2], f32), T([320, 128, 2, 2], f32), T([512, 320, 2, 2], f32), T([64, 64], f32), T([128, 64], f32), T([64, 64], f32), T([64, 64, 8, 8], f32), T([512, 64], f32), T([64, 512], f32), T([64, 64], f32), T([128, 64], f32), T([64, 64], f32), T([64, 64, 8, 8], f32), T([512, 64], f32), T([64, 512], f32), T([64, 64], f32), T([128, 64], f32), T([64, 64], f32), T([64, 64, 8, 8], f32), T([512, 64], f32), T([64, 512], f32), T([128, 128], f32), T([256, 128], f32), T([128, 128], f32), T([128, 128, 4, 4], f32), T([1024, 128], f32), T([128, 1024], f32), T([128, 128], f32), T([256, 128], f32), T([128, 128], f32), T([128, 128, 4, 4], f32), T([1024, 128], f32), T([128, 1024], f32), T([128, 128], f32), T([256, 128], f32), T([128, 128], f32), T([128, 128, 4, 4], f32), T([1024, 128], f32), T([128, 1024], f32), T([128, 128], f32), T([256, 128], f32), T([128, 128], f32), T([128, 128, 4, 4], f32), T([1024, 128], f32), T([128, 1024], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([512, 512], f32), T([1024, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 512], f32), T([1024, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 512], f32), T([1024, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1000, 512], f32)], [T([64, 3, 4, 4], f32), T([128, 64, 2, 2], f32), T([320, 128, 2, 2], f32), T([512, 320, 2, 2], f32), T([64, 64], f32), T([128, 64], f32), T([64, 64], f32), T([64, 64, 8, 8], f32), T([512, 64], f32), T([64, 512], f32), T([64, 64], f32), T([128, 64], f32), T([64, 64], f32), T([64, 64, 8, 8], f32), T([512, 64], f32), T([64, 512], f32), T([64, 64], f32), T([128, 64], f32), T([64, 64], f32), T([64, 64, 8, 8], f32), T([512, 64], f32), T([64, 512], f32), T([128, 128], f32), T([256, 128], f32), T([128, 128], f32), T([128, 128, 4, 4], f32), T([1024, 128], f32), T([128, 1024], f32), T([128, 128], f32), T([256, 128], f32), T([128, 128], f32), T([128, 128, 4, 4], f32), T([1024, 128], f32), T([128, 1024], f32), T([128, 128], f32), T([256, 128], f32), T([128, 128], f32), T([128, 128, 4, 4], f32), T([1024, 128], f32), T([128, 1024], f32), T([128, 128], f32), T([256, 128], f32), T([128, 128], f32), T([128, 128, 4, 4], f32), T([1024, 128], f32), T([128, 1024], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([320, 320], f32), T([640, 320], f32), T([320, 320], f32), T([320, 320, 2, 2], f32), T([1280, 320], f32), T([320, 1280], f32), T([512, 512], f32), T([1024, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 512], f32), T([1024, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512, 512], f32), T([1024, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1000, 512], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64, 1000], f32), 1, f32), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention.default": [
        {
            "count": 3,
            "inputs": "((T([64, 1, 3136, 64], f32), T([64, 1, 49, 64], f32, stride=(6272, 64, 128, 1)), T([64, 1, 49, 64], f32, stride=(6272, 64, 128, 1)), None, True), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 2, 784, 64], f32, stride=(100352, 64, 128, 1)), T([64, 2, 49, 64], f32, stride=(12544, 64, 256, 1)), T([64, 2, 49, 64], f32, stride=(12544, 64, 256, 1)), None, True), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 5, 196, 64], f32, stride=(62720, 64, 320, 1)), T([64, 5, 49, 64], f32, stride=(31360, 64, 640, 1)), T([64, 5, 49, 64], f32, stride=(31360, 64, 640, 1)), None, True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 8, 49, 64], f32, stride=(25088, 64, 512, 1)), T([64, 8, 49, 64], f32, stride=(50176, 64, 1024, 1)), T([64, 8, 49, 64], f32, stride=(50176, 64, 1024, 1)), None, True), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention_backward.default": [
        {
            "count": 3,
            "inputs": "((T([64, 8, 49, 64], f32, stride=(25088, 64, 512, 1)), T([64, 8, 49, 64], f32, stride=(25088, 64, 512, 1)), T([64, 8, 49, 64], f32, stride=(50176, 64, 1024, 1)), T([64, 8, 49, 64], f32, stride=(50176, 64, 1024, 1)), None, T([64, 8, 49, 64], f32, stride=(25088, 64, 512, 1)), T([64, 8, 64], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 5, 196, 64], f32, stride=(62720, 64, 320, 1)), T([64, 5, 196, 64], f32, stride=(62720, 64, 320, 1)), T([64, 5, 49, 64], f32, stride=(31360, 64, 640, 1)), T([64, 5, 49, 64], f32, stride=(31360, 64, 640, 1)), None, T([64, 5, 196, 64], f32, stride=(62720, 64, 320, 1)), T([64, 5, 224], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 2, 784, 64], f32, stride=(100352, 64, 128, 1)), T([64, 2, 784, 64], f32, stride=(100352, 64, 128, 1)), T([64, 2, 49, 64], f32, stride=(12544, 64, 256, 1)), T([64, 2, 49, 64], f32, stride=(12544, 64, 256, 1)), None, T([64, 2, 784, 64], f32, stride=(100352, 64, 128, 1)), T([64, 2, 800], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 1, 3136, 64], f32), T([64, 1, 3136, 64], f32), T([64, 1, 49, 64], f32, stride=(6272, 64, 128, 1)), T([64, 1, 49, 64], f32, stride=(6272, 64, 128, 1)), None, T([64, 1, 3136, 64], f32), T([64, 1, 3136], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 3,
            "inputs": "((T([64, 49, 2, 8, 64], f32), [64, 49, 1024]), {})"
        },
        {
            "count": 36,
            "inputs": "((T([64, 196, 320], f32), [12544, 320]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 49, 2, 5, 64], f32), [64, 49, 640]), {})"
        },
        {
            "count": 8,
            "inputs": "((T([64, 784, 128], f32), [50176, 128]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 49, 2, 2, 64], f32), [64, 49, 256]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 3136, 64], f32), [200704, 64]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 49, 2, 1, 64], f32), [64, 49, 128]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 9,
            "inputs": "((T([64, 3136, 64], f32), T([64, 3136, 64], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([64, 784, 128], f32), T([64, 784, 128], f32)), {})"
        },
        {
            "count": 54,
            "inputs": "((T([64, 196, 320], f32), T([64, 196, 320], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([64, 49, 512], f32), T([64, 49, 512], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 7, 7], f32, stride=(25088, 1, 3584, 512)), T([64, 512, 7, 7], f32, stride=(25088, 1, 3584, 512))), {})"
        },
        {
            "count": 36,
            "inputs": "((T([64, 196, 320], f32, stride=(62720, 1, 196)), T([64, 196, 320], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 320, 14, 14], f32), T([64, 320, 14, 14], f32, stride=(62720, 1, 4480, 320))), {})"
        },
        {
            "count": 8,
            "inputs": "((T([64, 784, 128], f32, stride=(100352, 1, 784)), T([64, 784, 128], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 28, 28], f32), T([64, 128, 28, 28], f32, stride=(100352, 1, 3584, 128))), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 3136, 64], f32, stride=(200704, 1, 3136)), T([64, 3136, 64], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 56, 56], f32), T([64, 64, 56, 56], f32, stride=(200704, 1, 3584, 64))), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 1,
            "inputs": "((T([64, 64, 56, 56], f32, stride=(200704, 1, 3584, 64)), T([64, 64, 56, 56], f32, stride=(200704, 1, 3584, 64))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 28, 28], f32, stride=(100352, 1, 3584, 128)), T([64, 128, 28, 28], f32, stride=(100352, 1, 3584, 128))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 320, 14, 14], f32, stride=(62720, 1, 4480, 320)), T([64, 320, 14, 14], f32, stride=(62720, 1, 4480, 320))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 7, 7], f32, stride=(25088, 1, 3584, 512)), T([64, 512, 7, 7], f32, stride=(25088, 1, 3584, 512))), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 6,
            "inputs": "((T([64], f32), T([200704, 64], f32), T([64, 64], f32, stride=(1, 64))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128], f32), T([3136, 64], f32), T([64, 128], f32, stride=(1, 64))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512], f32), T([200704, 64], f32), T([64, 512], f32, stride=(1, 64))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64], f32), T([200704, 512], f32), T([512, 64], f32, stride=(1, 512))), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128], f32), T([50176, 128], f32), T([128, 128], f32, stride=(1, 128))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256], f32), T([3136, 128], f32), T([128, 256], f32, stride=(1, 128))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1024], f32), T([50176, 128], f32), T([128, 1024], f32, stride=(1, 128))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128], f32), T([50176, 1024], f32), T([1024, 128], f32, stride=(1, 1024))), {})"
        },
        {
            "count": 36,
            "inputs": "((T([320], f32), T([12544, 320], f32), T([320, 320], f32, stride=(1, 320))), {})"
        },
        {
            "count": 18,
            "inputs": "((T([640], f32), T([3136, 320], f32), T([320, 640], f32, stride=(1, 320))), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1280], f32), T([12544, 320], f32), T([320, 1280], f32, stride=(1, 320))), {})"
        },
        {
            "count": 18,
            "inputs": "((T([320], f32), T([12544, 1280], f32), T([1280, 320], f32, stride=(1, 1280))), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512], f32), T([3136, 512], f32), T([512, 512], f32, stride=(1, 512))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024], f32), T([3136, 512], f32), T([512, 1024], f32, stride=(1, 512))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2048], f32), T([3136, 512], f32), T([512, 2048], f32, stride=(1, 512))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512], f32), T([3136, 2048], f32), T([2048, 512], f32, stride=(1, 2048))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([64, 512], f32), T([512, 1000], f32, stride=(1, 512))), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 34,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 47,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 184,
            "inputs": "((T([320], f32),), {})"
        },
        {
            "count": 30,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([1024], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([640], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1280], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2048], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 3, 4, 4], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 2, 2], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320, 128, 2, 2], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 320, 2, 2], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 64], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 8, 8], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 64], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 512], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 128], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 128], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 128, 4, 4], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1024, 128], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 1024], f32),), {})"
        },
        {
            "count": 36,
            "inputs": "((T([320, 320], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([640, 320], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([320, 320, 2, 2], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1280, 320], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([320, 1280], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 512], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024, 512], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2048, 512], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 2048], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 512], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([64, 3, 224, 224], f32), T([64, 3, 4, 4], f32), T([64], f32), [4, 4], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 56, 56], f32, stride=(200704, 1, 3584, 64)), T([64, 64, 8, 8], f32), T([64], f32), [8, 8], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 56, 56], f32, stride=(200704, 1, 3584, 64)), T([64, 1, 3, 3], f32), T([64], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 64), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 56, 56], f32), T([128, 64, 2, 2], f32), T([128], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 128, 28, 28], f32, stride=(100352, 1, 3584, 128)), T([128, 128, 4, 4], f32), T([128], f32), [4, 4], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 28, 28], f32, stride=(100352, 1, 3584, 128)), T([128, 1, 3, 3], f32), T([128], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 128), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 28, 28], f32), T([320, 128, 2, 2], f32), T([320], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 320, 14, 14], f32, stride=(62720, 1, 4480, 320)), T([320, 320, 2, 2], f32), T([320], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 320, 14, 14], f32, stride=(62720, 1, 4480, 320)), T([320, 1, 3, 3], f32), T([320], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 320), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 320, 14, 14], f32), T([512, 320, 2, 2], f32), T([512], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 7, 7], f32, stride=(25088, 1, 3584, 512)), T([512, 1, 3, 3], f32), T([512], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 512), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 512, 7, 7], f32, stride=(25088, 1, 3584, 512)), T([64, 512, 7, 7], f32, stride=(25088, 1, 3584, 512)), T([512, 1, 3, 3], f32), [512], [1, 1], [1, 1], [1, 1], False, [0, 0], 512, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 7, 7], f32, stride=(25088, 1, 3584, 512)), T([64, 320, 14, 14], f32), T([512, 320, 2, 2], f32), [512], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 320, 7, 7], f32, stride=(15680, 1, 2240, 320)), T([64, 320, 14, 14], f32, stride=(62720, 1, 4480, 320)), T([320, 320, 2, 2], f32), [320], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 320, 14, 14], f32), T([64, 320, 14, 14], f32, stride=(62720, 1, 4480, 320)), T([320, 1, 3, 3], f32), [320], [1, 1], [1, 1], [1, 1], False, [0, 0], 320, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 320, 14, 14], f32, stride=(62720, 1, 4480, 320)), T([64, 128, 28, 28], f32), T([320, 128, 2, 2], f32), [320], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 128, 7, 7], f32, stride=(6272, 1, 896, 128)), T([64, 128, 28, 28], f32, stride=(100352, 1, 3584, 128)), T([128, 128, 4, 4], f32), [128], [4, 4], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 28, 28], f32), T([64, 128, 28, 28], f32, stride=(100352, 1, 3584, 128)), T([128, 1, 3, 3], f32), [128], [1, 1], [1, 1], [1, 1], False, [0, 0], 128, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 28, 28], f32, stride=(100352, 1, 3584, 128)), T([64, 64, 56, 56], f32), T([128, 64, 2, 2], f32), [128], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 7, 7], f32, stride=(3136, 1, 448, 64)), T([64, 64, 56, 56], f32, stride=(200704, 1, 3584, 64)), T([64, 64, 8, 8], f32), [64], [8, 8], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 56, 56], f32), T([64, 64, 56, 56], f32, stride=(200704, 1, 3584, 64)), T([64, 1, 3, 3], f32), [64], [1, 1], [1, 1], [1, 1], False, [0, 0], 64, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 56, 56], f32, stride=(200704, 1, 3584, 64)), T([64, 3, 224, 224], f32), T([64, 3, 4, 4], f32), [64], [4, 4], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.copy_.default": [
        {
            "count": 18,
            "inputs": "((T([320, 320, 2, 2], f32), T([320, 320, 2, 2], f32, stride=(1280, 1, 640, 320))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 128, 4, 4], f32), T([128, 128, 4, 4], f32, stride=(2048, 1, 512, 128))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 8, 8], f32), T([64, 64, 8, 8], f32, stride=(4096, 1, 512, 64))), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([64, 49, 512], f32, stride=(512, 0, 1)), 49), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 3,
            "inputs": "((T([64, 3136, 512], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 784, 1024], f32),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 196, 1280], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 49, 2048], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 3,
            "inputs": "((T([64, 49, 2048], f32), T([64, 49, 2048], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 196, 1280], f32), T([64, 196, 1280], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 784, 1024], f32), T([64, 784, 1024], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 3136, 512], f32), T([64, 3136, 512], f32)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([64, 49, 512], f32), [1]), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([1000, 512], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 64], f32, stride=(1, 1000)), T([64, 512], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3136, 512], f32), T([512, 2048], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 3136], f32, stride=(1, 512)), T([3136, 2048], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3136, 2048], f32), T([2048, 512], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2048, 3136], f32, stride=(1, 2048)), T([3136, 512], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([3136, 512], f32), T([512, 512], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 3136], f32, stride=(1, 512)), T([3136, 512], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3136, 1024], f32), T([1024, 512], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024, 3136], f32, stride=(1, 1024)), T([3136, 512], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([12544, 320], f32), T([320, 1280], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([320, 12544], f32, stride=(1, 320)), T([12544, 1280], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([12544, 1280], f32), T([1280, 320], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([1280, 12544], f32, stride=(1, 1280)), T([12544, 320], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([12544, 320], f32), T([320, 320], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([320, 12544], f32, stride=(1, 320)), T([12544, 320], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([3136, 640], f32), T([640, 320], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([640, 3136], f32, stride=(1, 640)), T([3136, 320], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([50176, 128], f32), T([128, 1024], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 50176], f32, stride=(1, 128)), T([50176, 1024], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([50176, 1024], f32), T([1024, 128], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1024, 50176], f32, stride=(1, 1024)), T([50176, 128], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([50176, 128], f32), T([128, 128], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 50176], f32, stride=(1, 128)), T([50176, 128], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([3136, 256], f32), T([256, 128], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 3136], f32, stride=(1, 256)), T([3136, 128], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([200704, 64], f32), T([64, 512], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 200704], f32, stride=(1, 64)), T([200704, 512], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([200704, 512], f32), T([512, 64], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 200704], f32, stride=(1, 512)), T([200704, 64], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([200704, 64], f32), T([64, 64], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 200704], f32, stride=(1, 64)), T([200704, 64], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3136, 128], f32), T([128, 64], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 3136], f32, stride=(1, 128)), T([3136, 64], f32)), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 1,
            "inputs": "((T([64, 3136, 64], f32, stride=(200704, 1, 3136)), [64], T([64], f32), T([64], f32), 1e-05), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 3136, 64], f32), [64], T([64], f32), T([64], f32), 1e-06), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 49, 64], f32), [64], T([64], f32), T([64], f32), 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 784, 128], f32, stride=(100352, 1, 784)), [128], T([128], f32), T([128], f32), 1e-05), {})"
        },
        {
            "count": 8,
            "inputs": "((T([64, 784, 128], f32), [128], T([128], f32), T([128], f32), 1e-06), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 49, 128], f32), [128], T([128], f32), T([128], f32), 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 196, 320], f32, stride=(62720, 1, 196)), [320], T([320], f32), T([320], f32), 1e-05), {})"
        },
        {
            "count": 36,
            "inputs": "((T([64, 196, 320], f32), [320], T([320], f32), T([320], f32), 1e-06), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 49, 320], f32), [320], T([320], f32), T([320], f32), 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 49, 512], f32, stride=(25088, 1, 49)), [512], T([512], f32), T([512], f32), 1e-05), {})"
        },
        {
            "count": 7,
            "inputs": "((T([64, 49, 512], f32), [512], T([512], f32), T([512], f32), 1e-06), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 7,
            "inputs": "((T([64, 49, 512], f32), T([64, 49, 512], f32), [512], T([64, 49, 1], f32), T([64, 49, 1], f32), T([512], f32), T([512], f32), [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 49, 512], f32), T([64, 49, 512], f32, stride=(25088, 1, 49)), [512], T([64, 49, 1], f32), T([64, 49, 1], f32), T([512], f32), T([512], f32), [True, True, True]), {})"
        },
        {
            "count": 36,
            "inputs": "((T([64, 196, 320], f32), T([64, 196, 320], f32), [320], T([64, 196, 1], f32), T([64, 196, 1], f32), T([320], f32), T([320], f32), [True, True, True]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 49, 320], f32), T([64, 49, 320], f32), [320], T([64, 49, 1], f32), T([64, 49, 1], f32), T([320], f32), T([320], f32), [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 196, 320], f32, stride=(62720, 1, 196)), T([64, 196, 320], f32, stride=(62720, 1, 196)), [320], T([64, 196, 1], f32), T([64, 196, 1], f32), T([320], f32), T([320], f32), [True, True, True]), {})"
        },
        {
            "count": 8,
            "inputs": "((T([64, 784, 128], f32), T([64, 784, 128], f32), [128], T([64, 784, 1], f32), T([64, 784, 1], f32), T([128], f32), T([128], f32), [True, True, True]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 49, 128], f32), T([64, 49, 128], f32), [128], T([64, 49, 1], f32), T([64, 49, 1], f32), T([128], f32), T([128], f32), [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 784, 128], f32, stride=(100352, 1, 784)), T([64, 784, 128], f32, stride=(100352, 1, 784)), [128], T([64, 784, 1], f32), T([64, 784, 1], f32), T([128], f32), T([128], f32), [True, True, True]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 3136, 64], f32), T([64, 3136, 64], f32), [64], T([64, 3136, 1], f32), T([64, 3136, 1], f32), T([64], f32), T([64], f32), [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 49, 64], f32), T([64, 49, 64], f32), [64], T([64, 49, 1], f32), T([64, 49, 1], f32), T([64], f32), T([64], f32), [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 3136, 64], f32, stride=(200704, 1, 3136)), T([64, 3136, 64], f32, stride=(200704, 1, 3136)), [64], T([64, 3136, 1], f32), T([64, 3136, 1], f32), T([64], f32), T([64], f32), [True, True, True]), {})"
        }
    ],
    "aten.new_empty_strided.default": [
        {
            "count": 18,
            "inputs": "((T([320, 320, 2, 2], f32, stride=(1280, 1, 640, 320)), [320, 320, 2, 2], [1280, 4, 2, 1]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 128, 4, 4], f32, stride=(2048, 1, 512, 128)), [128, 128, 4, 4], [2048, 16, 4, 1]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 8, 8], f32, stride=(4096, 1, 512, 64)), [64, 64, 8, 8], [4096, 64, 8, 1]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([64, 1000], f32), T([64], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([64], i64), 1000), {})"
        }
    ],
    "aten.stack.default": [
        {
            "count": 3,
            "inputs": "(([T([64, 8, 49, 64], f32, stride=(25088, 64, 512, 1)), T([64, 8, 49, 64], f32, stride=(25088, 64, 512, 1))],), {})"
        },
        {
            "count": 18,
            "inputs": "(([T([64, 5, 49, 64], f32, stride=(15680, 64, 320, 1)), T([64, 5, 49, 64], f32, stride=(15680, 64, 320, 1))],), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([64, 2, 49, 64], f32, stride=(6272, 64, 128, 1)), T([64, 2, 49, 64], f32, stride=(6272, 64, 128, 1))],), {})"
        },
        {
            "count": 3,
            "inputs": "(([T([64, 1, 49, 64], f32), T([64, 1, 49, 64], f32)],), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), [0], True), {})"
        },
        {
            "count": 9,
            "inputs": "((T([3136, 512], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3136, 2048], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3136, 1024], f32), [0], True), {})"
        },
        {
            "count": 54,
            "inputs": "((T([12544, 320], f32), [0], True), {})"
        },
        {
            "count": 18,
            "inputs": "((T([12544, 1280], f32), [0], True), {})"
        },
        {
            "count": 18,
            "inputs": "((T([3136, 640], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([50176, 128], f32), [0], True), {})"
        },
        {
            "count": 4,
            "inputs": "((T([50176, 1024], f32), [0], True), {})"
        },
        {
            "count": 4,
            "inputs": "((T([3136, 256], f32), [0], True), {})"
        },
        {
            "count": 9,
            "inputs": "((T([200704, 64], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([200704, 512], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3136, 128], f32), [0], True), {})"
        }
    ],
    "aten.unbind.int": [
        {
            "count": 3,
            "inputs": "((T([2, 64, 1, 49, 64], f32, stride=(64, 6272, 64, 128, 1)),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([2, 64, 2, 49, 64], f32, stride=(128, 12544, 64, 256, 1)),), {})"
        },
        {
            "count": 18,
            "inputs": "((T([2, 64, 5, 49, 64], f32, stride=(320, 31360, 64, 640, 1)),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2, 64, 8, 49, 64], f32, stride=(512, 50176, 64, 1024, 1)),), {})"
        }
    ]
}