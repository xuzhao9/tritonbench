{
    "aten._foreach_add.List": {
        "count": 1,
        "inputs": "(([T([24, 3, 3, 3], f32), T([32, 24, 3, 3], f32), T([64, 32, 3, 3], f32), T([256, 64, 1, 1], f32), T([64, 64, 1, 1], f32), T([64, 64, 3, 3], f32), T([256, 64, 1, 1], f32), T([64, 256, 1, 1], f32), T([64, 64, 3, 3], f32), T([256, 64, 1, 1], f32), T([512, 256, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([1024, 512, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([768, 256, 1, 1], f32), T([31, 64], f32), T([31, 64], f32), T([1024, 256, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([512, 1024, 1, 1], f32), T([1536, 512, 1, 1], f32), T([31, 128], f32), T([31, 128], f32), T([2048, 512, 1, 1], f32), T([512, 2048, 1, 1], f32), T([1536, 512, 1, 1], f32), T([15, 128], f32), T([15, 128], f32), T([2048, 512, 1, 1], f32), T([1000, 2048], f32)], [T([24, 3, 3, 3], f32), T([32, 24, 3, 3], f32), T([64, 32, 3, 3], f32), T([256, 64, 1, 1], f32), T([64, 64, 1, 1], f32), T([64, 64, 3, 3], f32), T([256, 64, 1, 1], f32), T([64, 256, 1, 1], f32), T([64, 64, 3, 3], f32), T([256, 64, 1, 1], f32), T([512, 256, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([1024, 512, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([768, 256, 1, 1], f32), T([31, 64], f32), T([31, 64], f32), T([1024, 256, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([512, 1024, 1, 1], f32), T([1536, 512, 1, 1], f32), T([31, 128], f32), T([31, 128], f32), T([2048, 512, 1, 1], f32), T([512, 2048, 1, 1], f32), T([1536, 512, 1, 1], f32), T([15, 128], f32), T([15, 128], f32), T([2048, 512, 1, 1], f32), T([1000, 2048], f32)]), {'alpha': 0.0001})"
    },
    "aten._log_softmax.default": {
        "count": 1,
        "inputs": "((T([128, 1000], f32), 1, False), {})"
    },
    "aten._log_softmax_backward_data.default": {
        "count": 1,
        "inputs": "((T([128, 1000], f32), T([128, 1000], f32), 1, f32), {})"
    },
    "aten._softmax.default": {
        "count": 1,
        "inputs": "((T([512, 64, 64], f32), -1, False), {})"
    },
    "aten._softmax_backward_data.default": {
        "count": 2,
        "inputs": "((T([512, 256, 256], f32), T([512, 256, 256], f32), -1, f32), {})"
    },
    "aten._unsafe_view.default": {
        "count": 1,
        "inputs": "((T([512, 16, 16, 64], f32), [512, 256, 64]), {})"
    },
    "aten.add.Tensor": {
        "count": 1,
        "inputs": "((T([128, 64, 64, 64], f32), T([128, 64, 64, 64], f32)), {})"
    },
    "aten.add_.Tensor": {
        "count": 31,
        "inputs": "((T([], i64), 1), {})"
    },
    "aten.addmm.default": {
        "count": 1,
        "inputs": "((T([1000], f32), T([128, 2048], f32), T([2048, 1000], f32, stride=(1, 2048))), {})"
    },
    "aten.avg_pool2d.default": {
        "count": 1,
        "inputs": "((T([128, 512, 16, 16], f32), [2, 2], [2, 2]), {})"
    },
    "aten.avg_pool2d_backward.default": {
        "count": 1,
        "inputs": "((T([128, 512, 8, 8], f32), T([128, 512, 16, 16], f32), [2, 2], [2, 2], [0, 0], False, True, None), {})"
    },
    "aten.bmm.default": {
        "count": 1,
        "inputs": "((T([512, 64, 256], f32), T([512, 256, 256], f32)), {})"
    },
    "aten.cat.default": {
        "count": 1,
        "inputs": "(([T([128, 256, 16, 16], f32), T([128, 256, 16, 16], f32), T([128, 256, 16, 16], f32)], 1), {})"
    },
    "aten.clone.default": {
        "count": 1,
        "inputs": "((T([1000, 2048], f32),), {})"
    },
    "aten.constant_pad_nd.default": {
        "count": 4,
        "inputs": "((T([8192, 16, 32], f32), [0, -1]), {})"
    },
    "aten.convolution.default": {
        "count": 1,
        "inputs": "((T([128, 512, 8, 8], f32), T([1536, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
    },
    "aten.convolution_backward.default": {
        "count": 1,
        "inputs": "((T([128, 24, 128, 128], f32), T([128, 3, 256, 256], f32), T([24, 3, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
    },
    "aten.cudnn_batch_norm.default": {
        "count": 3,
        "inputs": "((T([128, 2048, 8, 8], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), True, 0.1, 1e-05), {})"
    },
    "aten.cudnn_batch_norm_backward.default": {
        "count": 1,
        "inputs": "((T([128, 24, 128, 128], f32), T([128, 24, 128, 128], f32), T([24], f32), T([24], f32), T([24], f32), T([24], f32), T([24], f32), 1e-05, T([0], u8)), {})"
    },
    "aten.div.Scalar": {
        "count": 1,
        "inputs": "((T([128, 2048, 8, 8], f32, stride=(2048, 1, 0, 0)), 64), {})"
    },
    "aten.max_pool2d_with_indices.default": {
        "count": 1,
        "inputs": "((T([128, 64, 128, 128], f32), [3, 3], [2, 2], [1, 1]), {})"
    },
    "aten.max_pool2d_with_indices_backward.default": {
        "count": 1,
        "inputs": "((T([128, 64, 64, 64], f32), T([128, 64, 128, 128], f32), [3, 3], [2, 2], [1, 1], [1, 1], False, T([128, 64, 64, 64], i64)), {})"
    },
    "aten.mean.dim": {
        "count": 1,
        "inputs": "((T([128, 2048, 8, 8], f32), [-1, -2], True), {})"
    },
    "aten.mm.default": {
        "count": 2,
        "inputs": "((T([131072, 31], f32), T([31, 64], f32)), {})"
    },
    "aten.mul.Tensor": {
        "count": 2,
        "inputs": "((T([512, 64, 64], f32), 0.08838834764831845), {})"
    },
    "aten.nll_loss_backward.default": {
        "count": 1,
        "inputs": "((T([], f32), T([128, 1000], f32), T([128], i64), None, 1, -100, T([], f32)), {})"
    },
    "aten.nll_loss_forward.default": {
        "count": 1,
        "inputs": "((T([128, 1000], f32), T([128], i64), None, 1, -100), {})"
    },
    "aten.random_.to": {
        "count": 1,
        "inputs": "((T([128], i64), 1000), {})"
    },
    "aten.relu_.default": {
        "count": 2,
        "inputs": "((T([128, 2048, 8, 8], f32),), {})"
    },
    "aten.slice_backward.default": {
        "count": 4,
        "inputs": "((T([8192, 16, 31], f32), [8192, 17, 31], 1, 0, 16, 1), {})"
    },
    "aten.split_with_sizes.default": {
        "count": 1,
        "inputs": "((T([128, 1536, 8, 8], f32), [512, 512, 512], 1), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 2,
        "inputs": "((T([512, 16, 16, 16, 16], f32, stride=(65536, 4096, 16, 256, 1)), [2], True), {})"
    },
    "aten.threshold_backward.default": {
        "count": 1,
        "inputs": "((T([128, 24, 128, 128], f32), T([128, 24, 128, 128], f32), 0), {})"
    }
}