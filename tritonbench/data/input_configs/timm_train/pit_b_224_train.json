{
    "aten._foreach_add.List": {
        "count": 1,
        "inputs": "(([T([256, 3, 14, 14], f32), T([768, 256], f32), T([256, 256], f32), T([1024, 256], f32), T([256, 1024], f32), T([768, 256], f32), T([256, 256], f32), T([1024, 256], f32), T([256, 1024], f32), T([768, 256], f32), T([256, 256], f32), T([1024, 256], f32), T([256, 1024], f32), T([512, 1, 3, 3], f32), T([512, 256], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1024, 1, 3, 3], f32), T([1024, 512], f32), T([3072, 1024], f32), T([1024, 1024], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([3072, 1024], f32), T([1024, 1024], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([3072, 1024], f32), T([1024, 1024], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([3072, 1024], f32), T([1024, 1024], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([1000, 1024], f32)], [T([256, 3, 14, 14], f32), T([768, 256], f32), T([256, 256], f32), T([1024, 256], f32), T([256, 1024], f32), T([768, 256], f32), T([256, 256], f32), T([1024, 256], f32), T([256, 1024], f32), T([768, 256], f32), T([256, 256], f32), T([1024, 256], f32), T([256, 1024], f32), T([512, 1, 3, 3], f32), T([512, 256], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1536, 512], f32), T([512, 512], f32), T([2048, 512], f32), T([512, 2048], f32), T([1024, 1, 3, 3], f32), T([1024, 512], f32), T([3072, 1024], f32), T([1024, 1024], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([3072, 1024], f32), T([1024, 1024], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([3072, 1024], f32), T([1024, 1024], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([3072, 1024], f32), T([1024, 1024], f32), T([4096, 1024], f32), T([1024, 4096], f32), T([1000, 1024], f32)]), {'alpha': 0.0001})"
    },
    "aten._log_softmax.default": {
        "count": 1,
        "inputs": "((T([32, 1000], f32), 1, False), {})"
    },
    "aten._log_softmax_backward_data.default": {
        "count": 1,
        "inputs": "((T([32, 1000], f32), T([32, 1000], f32), 1, f32), {})"
    },
    "aten._scaled_dot_product_efficient_attention.default": {
        "count": 4,
        "inputs": "((T([32, 16, 65, 64], f32, stride=(199680, 64, 3072, 1)), T([32, 16, 65, 64], f32, stride=(199680, 64, 3072, 1)), T([32, 16, 65, 64], f32, stride=(199680, 64, 3072, 1)), None, True), {})"
    },
    "aten._scaled_dot_product_efficient_attention_backward.default": {
        "count": 3,
        "inputs": "((T([32, 4, 962, 64], f32, stride=(246272, 64, 256, 1)), T([32, 4, 962, 64], f32, stride=(738816, 64, 768, 1)), T([32, 4, 962, 64], f32, stride=(738816, 64, 768, 1)), T([32, 4, 962, 64], f32, stride=(738816, 64, 768, 1)), None, T([32, 4, 962, 64], f32, stride=(246272, 64, 256, 1)), T([32, 4, 992], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
    },
    "aten._unsafe_view.default": {
        "count": 3,
        "inputs": "((T([32, 962, 3, 4, 64], f32), [32, 962, 768]), {})"
    },
    "aten.add.Tensor": {
        "count": 16,
        "inputs": "((T([32, 65, 1024], f32), T([32, 65, 1024], f32)), {})"
    },
    "aten.addmm.default": {
        "count": 1,
        "inputs": "((T([1000], f32), T([32, 1024], f32), T([1024, 1000], f32, stride=(1, 1024))), {})"
    },
    "aten.cat.default": {
        "count": 1,
        "inputs": "(([T([32, 1, 1024], f32), T([32, 64, 1024], f32)], 1), {})"
    },
    "aten.clone.default": {
        "count": 1,
        "inputs": "((T([1000, 1024], f32),), {})"
    },
    "aten.convolution.default": {
        "count": 1,
        "inputs": "((T([32, 512, 16, 16], f32, stride=(131584, 1, 8192, 512)), T([1024, 1, 3, 3], f32), T([1024], f32), [2, 2], [1, 1], [1, 1], False, [0, 0], 512), {})"
    },
    "aten.convolution_backward.default": {
        "count": 1,
        "inputs": "((T([32, 256, 31, 31], f32, stride=(246272, 1, 7936, 256)), T([32, 3, 224, 224], f32), T([256, 3, 14, 14], f32), [256], [7, 7], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
    },
    "aten.gelu.default": {
        "count": 4,
        "inputs": "((T([32, 65, 4096], f32),), {})"
    },
    "aten.gelu_backward.default": {
        "count": 3,
        "inputs": "((T([32, 962, 1024], f32), T([32, 962, 1024], f32)), {})"
    },
    "aten.mm.default": {
        "count": 3,
        "inputs": "((T([768, 30784], f32, stride=(1, 768)), T([30784, 256], f32)), {})"
    },
    "aten.native_layer_norm.default": {
        "count": 1,
        "inputs": "((T([32, 1, 1024], f32, stride=(66560, 1024, 1)), [1024], T([1024], f32), T([1024], f32), 1e-06), {})"
    },
    "aten.native_layer_norm_backward.default": {
        "count": 6,
        "inputs": "((T([32, 962, 256], f32), T([32, 962, 256], f32), [256], T([32, 962, 1], f32), T([32, 962, 1], f32), T([256], f32), T([256], f32), [True, True, True]), {})"
    },
    "aten.nll_loss_backward.default": {
        "count": 1,
        "inputs": "((T([], f32), T([32, 1000], f32), T([32], i64), None, 1, -100, T([], f32)), {})"
    },
    "aten.nll_loss_forward.default": {
        "count": 1,
        "inputs": "((T([32, 1000], f32), T([32], i64), None, 1, -100), {})"
    },
    "aten.random_.to": {
        "count": 1,
        "inputs": "((T([32], i64), 1000), {})"
    },
    "aten.select_backward.default": {
        "count": 1,
        "inputs": "((T([32, 1024], f32), [32, 1, 1024], 1, 0), {})"
    },
    "aten.slice_backward.default": {
        "count": 1,
        "inputs": "((T([32, 1, 256], f32), [32, 962, 256], 1, 0, 1, 1), {})"
    },
    "aten.stack.default": {
        "count": 3,
        "inputs": "(([T([32, 4, 962, 64], f32, stride=(246272, 64, 256, 1)), T([32, 4, 962, 64], f32, stride=(246272, 64, 256, 1)), T([32, 4, 962, 64], f32, stride=(246272, 64, 256, 1))],), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 1,
        "inputs": "((T([32, 256, 31, 31], f32, stride=(246272, 1, 7936, 256)), [0], True), {})"
    },
    "aten.unbind.int": {
        "count": 4,
        "inputs": "((T([3, 32, 16, 65, 64], f32, stride=(1024, 199680, 64, 3072, 1)),), {})"
    }
}