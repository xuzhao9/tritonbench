{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([64, 3, 3, 3], f32), T([64, 64, 3, 3], f32), T([128, 64, 3, 3], f32), T([64, 128, 1, 1], f32), T([128, 32, 3, 3], f32), T([32, 64, 1, 1], f32), T([128, 32, 1, 1], f32), T([256, 64, 1, 1], f32), T([256, 128, 1, 1], f32), T([64, 256, 1, 1], f32), T([128, 32, 3, 3], f32), T([32, 64, 1, 1], f32), T([128, 32, 1, 1], f32), T([256, 64, 1, 1], f32), T([64, 256, 1, 1], f32), T([128, 32, 3, 3], f32), T([32, 64, 1, 1], f32), T([128, 32, 1, 1], f32), T([256, 64, 1, 1], f32), T([128, 256, 1, 1], f32), T([256, 64, 3, 3], f32), T([64, 128, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 128, 1, 1], f32), T([512, 256, 1, 1], f32), T([128, 512, 1, 1], f32), T([256, 64, 3, 3], f32), T([64, 128, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([256, 64, 3, 3], f32), T([64, 128, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([256, 64, 3, 3], f32), T([64, 128, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 128, 1, 1], f32), T([256, 512, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([1024, 512, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([512, 1024, 1, 1], f32), T([1024, 256, 3, 3], f32), T([256, 512, 1, 1], f32), T([1024, 256, 1, 1], f32), T([2048, 512, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([512, 2048, 1, 1], f32), T([1024, 256, 3, 3], f32), T([256, 512, 1, 1], f32), T([1024, 256, 1, 1], f32), T([2048, 512, 1, 1], f32), T([512, 2048, 1, 1], f32), T([1024, 256, 3, 3], f32), T([256, 512, 1, 1], f32), T([1024, 256, 1, 1], f32), T([2048, 512, 1, 1], f32), T([1000, 2048], f32)], [T([64, 3, 3, 3], f32), T([64, 64, 3, 3], f32), T([128, 64, 3, 3], f32), T([64, 128, 1, 1], f32), T([128, 32, 3, 3], f32), T([32, 64, 1, 1], f32), T([128, 32, 1, 1], f32), T([256, 64, 1, 1], f32), T([256, 128, 1, 1], f32), T([64, 256, 1, 1], f32), T([128, 32, 3, 3], f32), T([32, 64, 1, 1], f32), T([128, 32, 1, 1], f32), T([256, 64, 1, 1], f32), T([64, 256, 1, 1], f32), T([128, 32, 3, 3], f32), T([32, 64, 1, 1], f32), T([128, 32, 1, 1], f32), T([256, 64, 1, 1], f32), T([128, 256, 1, 1], f32), T([256, 64, 3, 3], f32), T([64, 128, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 128, 1, 1], f32), T([512, 256, 1, 1], f32), T([128, 512, 1, 1], f32), T([256, 64, 3, 3], f32), T([64, 128, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([256, 64, 3, 3], f32), T([64, 128, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([256, 64, 3, 3], f32), T([64, 128, 1, 1], f32), T([256, 64, 1, 1], f32), T([512, 128, 1, 1], f32), T([256, 512, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([1024, 512, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([512, 128, 3, 3], f32), T([128, 256, 1, 1], f32), T([512, 128, 1, 1], f32), T([1024, 256, 1, 1], f32), T([512, 1024, 1, 1], f32), T([1024, 256, 3, 3], f32), T([256, 512, 1, 1], f32), T([1024, 256, 1, 1], f32), T([2048, 512, 1, 1], f32), T([2048, 1024, 1, 1], f32), T([512, 2048, 1, 1], f32), T([1024, 256, 3, 3], f32), T([256, 512, 1, 1], f32), T([1024, 256, 1, 1], f32), T([2048, 512, 1, 1], f32), T([512, 2048, 1, 1], f32), T([1024, 256, 3, 3], f32), T([256, 512, 1, 1], f32), T([1024, 256, 1, 1], f32), T([2048, 512, 1, 1], f32), T([1000, 2048], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64, 1000], f32), 1, f32), {})"
        }
    ],
    "aten._softmax.default": [
        {
            "count": 3,
            "inputs": "((T([64, 2, 1, 64], f32), 1, False), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 2, 1, 128], f32), 1, False), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 2, 1, 256], f32), 1, False), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2, 1, 512], f32), 1, False), {})"
        }
    ],
    "aten._softmax_backward_data.default": [
        {
            "count": 3,
            "inputs": "((T([64, 2, 1, 512], f32), T([64, 2, 1, 512], f32), 1, f32), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 2, 1, 256], f32), T([64, 2, 1, 256], f32), 1, f32), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 2, 1, 128], f32), T([64, 2, 1, 128], f32), 1, f32), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2, 1, 64], f32), T([64, 2, 1, 64], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 2,
            "inputs": "((T([64, 2, 512, 8, 8], f32), T([64, 2, 512, 8, 8], f32, stride=(32768, 0, 64, 8, 1))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 2048, 8, 8], f32), T([64, 2048, 8, 8], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 512, 16, 16], f32), T([64, 2, 512, 16, 16], f32, stride=(131072, 0, 256, 16, 1))), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 1024, 16, 16], f32), T([64, 1024, 16, 16], f32)), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 2, 256, 16, 16], f32), T([64, 2, 256, 16, 16], f32, stride=(65536, 0, 256, 16, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 256, 32, 32], f32), T([64, 2, 256, 32, 32], f32, stride=(262144, 0, 1024, 32, 1))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 512, 32, 32], f32), T([64, 512, 32, 32], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2, 128, 32, 32], f32), T([64, 2, 128, 32, 32], f32, stride=(131072, 0, 1024, 32, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 128, 64, 64], f32), T([64, 2, 128, 64, 64], f32, stride=(524288, 0, 4096, 64, 1))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 256, 64, 64], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2, 64, 64, 64], f32), T([64, 2, 64, 64, 64], f32, stride=(262144, 0, 4096, 64, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), T([64, 128, 64, 64], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 139,
            "inputs": "((T([], i64), 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 256, 64, 64], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 512, 32, 32], f32), T([64, 512, 32, 32], f32)), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 1024, 16, 16], f32), T([64, 1024, 16, 16], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2048, 8, 8], f32), T([64, 2048, 8, 8], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([64, 2048], f32), T([2048, 1000], f32, stride=(1, 2048))), {})"
        }
    ],
    "aten.avg_pool2d.default": [
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), [3, 3], [2, 2], [1, 1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 64, 64], f32), [2, 2], [2, 2], [0, 0], True, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32), [3, 3], [2, 2], [1, 1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 32, 32], f32), [2, 2], [2, 2], [0, 0], True, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32), [3, 3], [2, 2], [1, 1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1024, 16, 16], f32), [2, 2], [2, 2], [0, 0], True, False), {})"
        }
    ],
    "aten.avg_pool2d_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1024, 8, 8], f32), T([64, 1024, 16, 16], f32), [2, 2], [2, 2], [0, 0], True, False, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 8, 8], f32), T([64, 512, 16, 16], f32), [3, 3], [2, 2], [1, 1], False, True, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32), T([64, 512, 32, 32], f32), [2, 2], [2, 2], [0, 0], True, False, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 16, 16], f32), T([64, 256, 32, 32], f32), [3, 3], [2, 2], [1, 1], False, True, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32), T([64, 256, 64, 64], f32), [2, 2], [2, 2], [0, 0], True, False, None), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 32, 32], f32), T([64, 128, 64, 64], f32), [3, 3], [2, 2], [1, 1], False, True, None), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 22,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 88,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 9,
            "inputs": "((T([32], f32),), {})"
        },
        {
            "count": 75,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 85,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 57,
            "inputs": "((T([1024], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([2048], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 3, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 3, 3], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([64, 128, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 32, 3, 3], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 64, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 32, 1, 1], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([256, 64, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 128, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 256, 1, 1], f32),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([128, 256, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 64, 3, 3], f32),), {})"
        },
        {
            "count": 27,
            "inputs": "((T([512, 128, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 256, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 512, 1, 1], f32),), {})"
        },
        {
            "count": 23,
            "inputs": "((T([512, 128, 3, 3], f32),), {})"
        },
        {
            "count": 26,
            "inputs": "((T([1024, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 512, 1, 1], f32),), {})"
        },
        {
            "count": 22,
            "inputs": "((T([256, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024, 256, 3, 3], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2048, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2048, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 2048], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([64, 3, 256, 256], f32), T([64, 3, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 128, 128], f32), T([64, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 128, 128], f32), T([128, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), T([64, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 64, 64], f32), T([128, 32, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 1, 1], f32), T([32, 64, 1, 1], f32), T([32], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 32, 1, 1], f32), T([128, 32, 1, 1], f32), T([128], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 64, 64], f32), T([256, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), T([256, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 64, 64], f32), T([128, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), T([256, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 128, 1, 1], f32), T([64, 128, 1, 1], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 64, 1, 1], f32), T([256, 64, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 128, 32, 32], f32), T([512, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32), T([512, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 512, 32, 32], f32), T([128, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 32, 32], f32), T([256, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 32, 32], f32), T([256, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32), T([512, 128, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 256, 1, 1], f32), T([128, 256, 1, 1], f32), T([128], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 128, 1, 1], f32), T([512, 128, 1, 1], f32), T([512], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 256, 16, 16], f32), T([1024, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32), T([1024, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 1024, 16, 16], f32), T([256, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 256, 16, 16], f32), T([512, 128, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1024, 16, 16], f32), T([512, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32), T([1024, 256, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 512, 1, 1], f32), T([256, 512, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 1, 1], f32), T([1024, 256, 1, 1], f32), T([1024], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 512, 8, 8], f32), T([2048, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1024, 8, 8], f32), T([2048, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 2048, 8, 8], f32), T([512, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 512, 8, 8], f32), T([1024, 256, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 3,
            "inputs": "((T([64, 2048, 8, 8], f32), T([64, 512, 8, 8], f32), T([2048, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 1024, 1, 1], f32), T([64, 256, 1, 1], f32), T([1024, 256, 1, 1], f32), [1024], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 1, 1], f32), T([64, 512, 1, 1], f32), T([256, 512, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 1024, 8, 8], f32), T([64, 512, 8, 8], f32), T([1024, 256, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 512, 8, 8], f32), T([64, 2048, 8, 8], f32), T([512, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2048, 8, 8], f32), T([64, 1024, 8, 8], f32), T([2048, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1024, 16, 16], f32), T([64, 512, 16, 16], f32), T([1024, 256, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32), T([64, 1024, 16, 16], f32), T([512, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 1024, 16, 16], f32), T([64, 256, 16, 16], f32), T([1024, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 512, 1, 1], f32), T([64, 128, 1, 1], f32), T([512, 128, 1, 1], f32), [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 128, 1, 1], f32), T([64, 256, 1, 1], f32), T([128, 256, 1, 1], f32), [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 512, 16, 16], f32), T([64, 256, 16, 16], f32), T([512, 128, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 256, 16, 16], f32), T([64, 1024, 16, 16], f32), T([256, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1024, 16, 16], f32), T([64, 512, 16, 16], f32), T([1024, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 32, 32], f32), T([64, 256, 32, 32], f32), T([512, 128, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32), T([64, 512, 32, 32], f32), T([256, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 512, 32, 32], f32), T([64, 128, 32, 32], f32), T([512, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 1, 1], f32), T([64, 64, 1, 1], f32), T([256, 64, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 64, 1, 1], f32), T([64, 128, 1, 1], f32), T([64, 128, 1, 1], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 32, 32], f32), T([64, 128, 32, 32], f32), T([256, 64, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 32, 32], f32), T([64, 512, 32, 32], f32), T([128, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 32, 32], f32), T([64, 256, 32, 32], f32), T([512, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 128, 64, 64], f32), T([256, 64, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), T([64, 256, 64, 64], f32), T([128, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 64, 64, 64], f32), T([256, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 1, 1], f32), T([64, 32, 1, 1], f32), T([128, 32, 1, 1], f32), [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 32, 1, 1], f32), T([64, 64, 1, 1], f32), T([32, 64, 1, 1], f32), [32], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 64, 64], f32), T([64, 64, 64, 64], f32), T([128, 32, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 64, 64], f32), T([64, 256, 64, 64], f32), T([64, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 128, 64, 64], f32), T([256, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 64, 64], f32), T([64, 128, 64, 64], f32), T([64, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32), T([64, 64, 128, 128], f32), T([128, 64, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 128, 128], f32), T([64, 64, 128, 128], f32), T([64, 64, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 128, 128], f32), T([64, 3, 256, 256], f32), T([64, 3, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 2,
            "inputs": "((T([64, 64, 128, 128], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 64, 64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 128, 64, 64], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 32, 1, 1], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([64, 256, 64, 64], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 64, 1, 1], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 512, 32, 32], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 32, 32], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 32, 32], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 128, 1, 1], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 25,
            "inputs": "((T([64, 1024, 16, 16], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 256, 16, 16], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 512, 16, 16], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 1, 1], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 2048, 8, 8], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 512, 8, 8], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 1024, 8, 8], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), True, 0.1, 1e-05), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 4,
            "inputs": "((T([64, 2048, 8, 8], f32), T([64, 2048, 8, 8], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 1, 1], f32), T([64, 256, 1, 1], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 1024, 8, 8], f32), T([64, 1024, 8, 8], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 512, 8, 8], f32), T([64, 512, 8, 8], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 25,
            "inputs": "((T([64, 1024, 16, 16], f32), T([64, 1024, 16, 16], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 512, 16, 16], f32), T([64, 512, 16, 16], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 128, 1, 1], f32), T([64, 128, 1, 1], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 256, 16, 16], f32), T([64, 256, 16, 16], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 512, 32, 32], f32), T([64, 512, 32, 32], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 32, 32], f32), T([64, 256, 32, 32], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 64, 1, 1], f32), T([64, 64, 1, 1], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 32, 32], f32), T([64, 128, 32, 32], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 256, 64, 64], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 128, 64, 64], f32), T([64, 128, 64, 64], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 32, 1, 1], f32), T([64, 32, 1, 1], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 64, 64], f32), T([64, 64, 64, 64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32), T([64, 128, 128, 128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 128, 128], f32), T([64, 64, 128, 128], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([64, 2048, 8, 8], f32, stride=(2048, 1, 0, 0)), 64), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 512, 8, 8], f32, stride=(512, 1, 0, 0)), 64), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32, stride=(512, 1, 0, 0)), 256), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 256, 16, 16], f32, stride=(256, 1, 0, 0)), 256), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32, stride=(256, 1, 0, 0)), 1024), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 32, 32], f32, stride=(128, 1, 0, 0)), 1024), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32, stride=(128, 1, 0, 0)), 4096), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 64, 64], f32, stride=(64, 1, 0, 0)), 4096), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32), [3, 3], [2, 2], [1, 1]), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), T([64, 128, 128, 128], f32), [3, 3], [2, 2], [1, 1], [1, 1], False, T([64, 128, 64, 64], i64)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 3,
            "inputs": "((T([64, 64, 64, 64], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), [2, 3], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 32, 32], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32), [2, 3], True), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 256, 16, 16], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 512, 8, 8], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2048, 8, 8], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([1000, 2048], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 64], f32, stride=(1, 1000)), T([64, 2048], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 3,
            "inputs": "((T([64, 2, 64, 64, 64], f32), T([64, 2, 64, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 128, 64, 64], f32), T([64, 2, 128, 1, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2, 128, 32, 32], f32), T([64, 2, 128, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 256, 32, 32], f32), T([64, 2, 256, 1, 1], f32)), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 2, 256, 16, 16], f32), T([64, 2, 256, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 512, 16, 16], f32), T([64, 2, 512, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 2, 512, 8, 8], f32), T([64, 2, 512, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 2, 512, 8, 8], f32, stride=(32768, 0, 64, 8, 1)), T([64, 2, 512, 8, 8], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 2, 512, 8, 8], f32, stride=(32768, 0, 64, 8, 1)), T([64, 2, 512, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 512, 16, 16], f32, stride=(131072, 0, 256, 16, 1)), T([64, 2, 512, 16, 16], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 512, 16, 16], f32, stride=(131072, 0, 256, 16, 1)), T([64, 2, 512, 1, 1], f32)), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 2, 256, 16, 16], f32, stride=(65536, 0, 256, 16, 1)), T([64, 2, 256, 16, 16], f32)), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 2, 256, 16, 16], f32, stride=(65536, 0, 256, 16, 1)), T([64, 2, 256, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 256, 32, 32], f32, stride=(262144, 0, 1024, 32, 1)), T([64, 2, 256, 32, 32], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 256, 32, 32], f32, stride=(262144, 0, 1024, 32, 1)), T([64, 2, 256, 1, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2, 128, 32, 32], f32, stride=(131072, 0, 1024, 32, 1)), T([64, 2, 128, 32, 32], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2, 128, 32, 32], f32, stride=(131072, 0, 1024, 32, 1)), T([64, 2, 128, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 128, 64, 64], f32, stride=(524288, 0, 4096, 64, 1)), T([64, 2, 128, 64, 64], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 128, 64, 64], f32, stride=(524288, 0, 4096, 64, 1)), T([64, 2, 128, 1, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2, 64, 64, 64], f32, stride=(262144, 0, 4096, 64, 1)), T([64, 2, 64, 64, 64], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2, 64, 64, 64], f32, stride=(262144, 0, 4096, 64, 1)), T([64, 2, 64, 1, 1], f32)), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([64, 1000], f32), T([64], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([64], i64), 1000), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 2,
            "inputs": "((T([64, 64, 128, 128], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 64, 64], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 128, 64, 64], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 32, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 64, 64], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 64, 1, 1], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([64, 512, 32, 32], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 32, 32], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 32, 32], f32),), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 128, 1, 1], f32),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([64, 1024, 16, 16], f32),), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 256, 16, 16], f32),), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 512, 16, 16], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2048, 8, 8], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 512, 8, 8], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 1024, 8, 8], f32),), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 6,
            "inputs": "((T([64, 2, 64, 64, 64], f32), [1]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 2, 128, 64, 64], f32), [1]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 2, 128, 32, 32], f32), [1]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 2, 256, 32, 32], f32), [1]), {})"
        },
        {
            "count": 44,
            "inputs": "((T([64, 2, 256, 16, 16], f32), [1]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 2, 512, 16, 16], f32), [1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 2, 512, 8, 8], f32), [1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), [0], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 2, 512, 8, 8], f32), [3, 4], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 512, 16, 16], f32), [3, 4], True), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 2, 256, 16, 16], f32), [3, 4], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 256, 32, 32], f32), [3, 4], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2, 128, 32, 32], f32), [3, 4], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 2, 128, 64, 64], f32), [3, 4], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 2, 64, 64, 64], f32), [3, 4], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 3,
            "inputs": "((T([64, 2048, 8, 8], f32), T([64, 2048, 8, 8], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 1, 1], f32), T([64, 256, 1, 1], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 1024, 8, 8], f32), T([64, 1024, 8, 8], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 512, 8, 8], f32), T([64, 512, 8, 8], f32), 0), {})"
        },
        {
            "count": 24,
            "inputs": "((T([64, 1024, 16, 16], f32), T([64, 1024, 16, 16], f32), 0), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 512, 16, 16], f32), T([64, 512, 16, 16], f32), 0), {})"
        },
        {
            "count": 23,
            "inputs": "((T([64, 128, 1, 1], f32), T([64, 128, 1, 1], f32), 0), {})"
        },
        {
            "count": 22,
            "inputs": "((T([64, 256, 16, 16], f32), T([64, 256, 16, 16], f32), 0), {})"
        },
        {
            "count": 5,
            "inputs": "((T([64, 512, 32, 32], f32), T([64, 512, 32, 32], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 32, 32], f32), T([64, 256, 32, 32], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 64, 1, 1], f32), T([64, 64, 1, 1], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 32, 32], f32), T([64, 128, 32, 32], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 256, 64, 64], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 128, 64, 64], f32), T([64, 128, 64, 64], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 32, 1, 1], f32), T([64, 32, 1, 1], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 64, 64], f32), T([64, 64, 64, 64], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32), T([64, 128, 128, 128], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 128, 128], f32), T([64, 64, 128, 128], f32), 0), {})"
        }
    ]
}