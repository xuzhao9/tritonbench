{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([192, 3, 3, 3], f32), T([384, 192, 3, 3], f32), T([768, 384, 3, 3], f32), T([768, 64, 1, 1], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([768, 768], f32), T([768, 768], f32), T([768, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([768, 768], f32), T([768, 768], f32), T([768, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([1000, 768], f32)], [T([192, 3, 3, 3], f32), T([384, 192, 3, 3], f32), T([768, 384, 3, 3], f32), T([768, 64, 1, 1], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([16, 1, 1], f32), T([2304, 768], f32), T([768, 768], f32), T([768, 1, 3, 3], f32), T([768, 1, 3, 3], f32), T([3072, 768], f32), T([768, 3072], f32), T([768, 768], f32), T([768, 768], f32), T([768, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([768, 768], f32), T([768, 768], f32), T([768, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([1000, 768], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([4, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([4, 1000], f32), T([4, 1000], f32), 1, f32), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention.default": [
        {
            "count": 2,
            "inputs": "((T([4, 16, 1, 48], f32), T([4, 16, 785, 48], f32, stride=(602880, 48, 768, 1)), T([4, 16, 785, 48], f32, stride=(602880, 48, 768, 1)), None, True), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention_backward.default": [
        {
            "count": 2,
            "inputs": "((T([4, 16, 1, 48], f32), T([4, 16, 1, 48], f32), T([4, 16, 785, 48], f32, stride=(602880, 48, 768, 1)), T([4, 16, 785, 48], f32, stride=(602880, 48, 768, 1)), None, T([4, 16, 1, 48], f32), T([4, 16, 32], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
        }
    ],
    "aten._softmax.default": [
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 48], f32), -1, False), {})"
        }
    ],
    "aten._softmax_backward_data.default": [
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 48], f32), T([4, 16, 48, 48], f32), -1, f32), {})"
        }
    ],
    "aten._to_copy.default": [
        {
            "count": 2,
            "inputs": "((T([28], i64),), {'dtype': f32})"
        },
        {
            "count": 1,
            "inputs": "((T([32], i64),), {'dtype': f32})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 72,
            "inputs": "((T([4, 16, 48, 784], f32), [64, 48, 784]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 784, 48], f32), [64, 784, 48]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([64, 48, 48], f32), [4, 16, 48, 48]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([64, 48, 784], f32), [4, 16, 48, 784]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 784, 768], f32), [3136, 768]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3136, 768], f32), [4, 784, 768]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 3072], f32), [4, 1, 3072]), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 784, 3, 16, 48], f32), [4, 784, 2304]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1, 1, 28], f32), 1e-06), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 28, 1], f32, stride=(784, 28, 1)), 1e-06), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 784, 768], f32, stride=(602112, 1, 784)), T([4, 784, 768], f32, stride=(602112, 1, 784))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 784, 768], f32), T([768], f32)), {})"
        },
        {
            "count": 72,
            "inputs": "((T([4, 784, 768], f32, stride=(602112, 1, 784)), T([4, 784, 768], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([4, 785, 768], f32), T([4, 785, 768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 1, 3072], f32), T([3072], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 784, 768], f32, stride=(602880, 768, 1)), T([4, 784, 768], f32)), {})"
        },
        {
            "count": 71,
            "inputs": "((T([4, 784, 768], f32), T([4, 784, 768], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 784], f32, stride=(602112, 37632, 1, 48)), T([4, 16, 48, 784], f32, stride=(602112, 48, 1, 768))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 784], f32), T([4, 16, 48, 784], f32, stride=(602112, 48, 1, 768))), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 27,
            "inputs": "((T([], i64), 1), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 24,
            "inputs": "((T([2304], f32), T([3136, 768], f32), T([768, 2304], f32, stride=(1, 768))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3072], f32), T([3136, 768], f32), T([768, 3072], f32, stride=(1, 768))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([768], f32), T([3136, 3072], f32), T([3072, 768], f32, stride=(1, 3072))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([768], f32), T([4, 768], f32, stride=(602880, 1)), T([768, 768], f32, stride=(1, 768))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768], f32), T([3140, 768], f32), T([768, 768], f32, stride=(1, 768))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([768], f32), T([4, 768], f32), T([768, 768], f32, stride=(1, 768))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([768], f32), T([4, 3072], f32), T([3072, 768], f32, stride=(1, 3072))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([4, 768], f32, stride=(602880, 1)), T([768, 1000], f32, stride=(1, 768))), {})"
        }
    ],
    "aten.bmm.default": [
        {
            "count": 24,
            "inputs": "((T([64, 48, 784], f32), T([64, 784, 48], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([64, 48, 48], f32), T([64, 48, 784], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([64, 48, 48], f32, stride=(2304, 1, 48)), T([64, 48, 784], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([64, 48, 784], f32), T([64, 784, 48], f32, stride=(37632, 1, 784))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([64, 784, 48], f32, stride=(37632, 1, 784)), T([64, 48, 48], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([64, 48, 48], f32), T([64, 48, 784], f32, stride=(37632, 1, 48))), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 1,
            "inputs": "(([T([1, 28, 28, 32], f32), T([1, 28, 28, 32], f32)], 3), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([4, 1, 768], f32, stride=(0, 768, 1)), T([4, 784, 768], f32, stride=(602112, 1, 784))], 1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([4, 1, 768], f32), T([4, 784, 768], f32, stride=(602880, 768, 1))], 1), {})"
        }
    ],
    "aten.clamp_min.default": [
        {
            "count": 48,
            "inputs": "((T([4, 16, 48, 1], f32), 1e-12), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 1,
            "inputs": "((T([1, 1, 768], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([192], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([384], f32),), {})"
        },
        {
            "count": 387,
            "inputs": "((T([768], f32),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([2304], f32),), {})"
        },
        {
            "count": 26,
            "inputs": "((T([3072], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([192, 3, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([384, 192, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([768, 384, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([768, 64, 1, 1], f32),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([16, 1, 1], f32),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([2304, 768], f32),), {})"
        },
        {
            "count": 32,
            "inputs": "((T([768, 768], f32),), {})"
        },
        {
            "count": 48,
            "inputs": "((T([768, 1, 3, 3], f32),), {})"
        },
        {
            "count": 26,
            "inputs": "((T([3072, 768], f32),), {})"
        },
        {
            "count": 26,
            "inputs": "((T([768, 3072], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 768], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([4, 3, 224, 224], f32), T([192, 3, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 192, 112, 112], f32), T([384, 192, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 384, 56, 56], f32), T([768, 384, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 64, 28, 28], f32, stride=(50176, 1, 1792, 64)), T([768, 64, 1, 1], f32), T([768], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 48,
            "inputs": "((T([4, 768, 28, 28], f32, stride=(602112, 1, 21504, 768)), T([768, 1, 3, 3], f32), T([768], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 768), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 48,
            "inputs": "((T([4, 768, 28, 28], f32, stride=(602112, 1, 21504, 768)), T([4, 768, 28, 28], f32, stride=(602112, 1, 21504, 768)), T([768, 1, 3, 3], f32), [768], [1, 1], [1, 1], [1, 1], False, [0, 0], 768, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 768, 28, 28], f32), T([1, 64, 28, 28], f32, stride=(50176, 1, 1792, 64)), T([768, 64, 1, 1], f32), [768], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 768, 28, 28], f32), T([4, 384, 56, 56], f32), T([768, 384, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 384, 56, 56], f32), T([4, 192, 112, 112], f32), T([384, 192, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 192, 112, 112], f32), T([4, 3, 224, 224], f32), T([192, 3, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cos.default": [
        {
            "count": 2,
            "inputs": "((T([1, 28, 28, 16], f32, stride=(25088, 896, 32, 2)),), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([4, 192, 112, 112], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 384, 56, 56], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 768, 28, 28], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 768, 28, 28], f32, stride=(602112, 1, 21504, 768)), T([768], f32), T([768], f32), T([768], f32), T([768], f32), True, 0.1, 1e-05), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 24,
            "inputs": "((T([4, 768, 28, 28], f32, stride=(602112, 1, 21504, 768)), T([4, 768, 28, 28], f32, stride=(602112, 1, 21504, 768)), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 768, 28, 28], f32), T([4, 768, 28, 28], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), T([768], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 384, 56, 56], f32), T([4, 384, 56, 56], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 192, 112, 112], f32), T([4, 192, 112, 112], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), 1e-05, T([0], u8)), {})"
        }
    ],
    "aten.div.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1, 28, 28], f32), T([1, 1, 28], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 28, 28], f32), T([1, 28, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32], f32), 32), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 28, 28, 1], f32), T([32], f32)), {})"
        },
        {
            "count": 96,
            "inputs": "((T([4, 16, 48, 784], f32, stride=(1806336, 48, 1, 2304)), T([4, 16, 48, 784], f32, stride=(768, 48, 1, 0))), {})"
        },
        {
            "count": 48,
            "inputs": "((T([4, 16, 48, 784], f32, stride=(602112, 48, 1, 768)), T([4, 16, 48, 784], f32, stride=(768, 48, 1, 0))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 784], f32, stride=(602112, 37632, 1, 48)), T([4, 16, 48, 784], f32, stride=(768, 48, 1, 0))), {})"
        },
        {
            "count": 48,
            "inputs": "((T([4, 16, 48, 784], f32, stride=(1806336, 48, 1, 2304)), T([4, 16, 48, 1], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 784], f32), T([4, 16, 48, 784], f32, stride=(768, 48, 1, 0))), {})"
        }
    ],
    "aten.div.Tensor_mode": [
        {
            "count": 1,
            "inputs": "((T([32], f32), 2), {'rounding_mode': 'floor'})"
        }
    ],
    "aten.eq.Scalar": [
        {
            "count": 48,
            "inputs": "((T([4, 16, 48, 1], f32), 0), {})"
        }
    ],
    "aten.ge.Scalar": [
        {
            "count": 48,
            "inputs": "((T([4, 16, 48, 1], f32), 1e-12), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 1,
            "inputs": "((T([4, 192, 112, 112], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 384, 56, 56], f32),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 768, 28, 28], f32, stride=(602112, 1, 21504, 768)),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 784, 3072], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 1, 3072], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 2,
            "inputs": "((T([4, 1, 3072], f32), T([4, 1, 3072], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 784, 3072], f32), T([4, 784, 3072], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 768, 28, 28], f32, stride=(602112, 1, 21504, 768)), T([4, 768, 28, 28], f32, stride=(602112, 1, 21504, 768))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 384, 56, 56], f32), T([4, 384, 56, 56], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 192, 112, 112], f32), T([4, 192, 112, 112], f32)), {})"
        }
    ],
    "aten.linalg_vector_norm.default": [
        {
            "count": 48,
            "inputs": "((T([4, 16, 48, 784], f32, stride=(1806336, 48, 1, 2304)), 2.0, [-1], True), {})"
        }
    ],
    "aten.masked_fill_.Scalar": [
        {
            "count": 48,
            "inputs": "((T([4, 16, 48, 784], f32, stride=(602112, 48, 1, 768)), T([4, 16, 48, 1], b8), 0), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 24,
            "inputs": "((T([3136, 768], f32), T([768, 768], f32, stride=(1, 768))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 768], f32, stride=(602880, 1)), T([768, 3072], f32, stride=(1, 768))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 1000], f32), T([1000, 768], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 4], f32, stride=(1, 1000)), T([4, 768], f32, stride=(602880, 1))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 768], f32), T([768, 3072], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([768, 4], f32, stride=(1, 768)), T([4, 3072], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([3072, 4], f32, stride=(1, 3072)), T([4, 768], f32, stride=(602880, 1))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 3072], f32), T([3072, 768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 768], f32, stride=(602880, 1)), T([768, 768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([768, 4], f32, stride=(1, 602880)), T([4, 768], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([3140, 768], f32), T([768, 768], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([768, 3140], f32, stride=(1, 768)), T([3140, 768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 768], f32), T([768, 768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([768, 4], f32, stride=(1, 768)), T([4, 768], f32, stride=(602880, 1))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3136, 768], f32), T([768, 3072], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([768, 3136], f32, stride=(1, 768)), T([3136, 3072], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3136, 3072], f32), T([3072, 768], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3072, 3136], f32, stride=(1, 3072)), T([3136, 768], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([768, 3136], f32, stride=(1, 768)), T([3136, 768], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3136, 768], f32), T([768, 768], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3136, 2304], f32), T([2304, 768], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([2304, 3136], f32, stride=(1, 2304)), T([3136, 768], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 2,
            "inputs": "((T([1, 28, 28], f32), 6.283185307179586), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32], f32), 2), {})"
        },
        {
            "count": 48,
            "inputs": "((T([4, 16, 48, 48], f32), T([16, 1, 1], f32)), {})"
        },
        {
            "count": 72,
            "inputs": "((T([768], f32), T([4, 784, 768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([768], f32), T([4, 785, 768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([768], f32), T([4, 1, 768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 1, 768], f32, stride=(602880, 768, 1)), T([768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 1, 768], f32, stride=(602880, 768, 1)), T([4, 1, 768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 785, 768], f32), T([768], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 785, 768], f32), T([4, 785, 768], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 784, 768], f32, stride=(602880, 768, 1)), T([768], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 784, 768], f32, stride=(602880, 768, 1)), T([4, 784, 768], f32)), {})"
        },
        {
            "count": 71,
            "inputs": "((T([4, 784, 768], f32), T([768], f32)), {})"
        },
        {
            "count": 71,
            "inputs": "((T([4, 784, 768], f32), T([4, 784, 768], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 48], f32), T([4, 16, 48, 48], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 784], f32, stride=(602112, 37632, 1, 48)), T([4, 16, 48, 784], f32, stride=(602112, 48, 1, 768))), {})"
        },
        {
            "count": 48,
            "inputs": "((T([4, 16, 48, 1], f32), T([4, 16, 48, 784], f32, stride=(602112, 48, 1, 768))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 784], f32), T([4, 16, 48, 784], f32, stride=(602112, 48, 1, 768))), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 72,
            "inputs": "((T([4, 784, 768], f32, stride=(602112, 1, 784)), [768], T([768], f32), T([768], f32), 1e-06), {})"
        },
        {
            "count": 5,
            "inputs": "((T([4, 785, 768], f32), [768], T([768], f32), T([768], f32), 1e-06), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 5,
            "inputs": "((T([4, 785, 768], f32), T([4, 785, 768], f32), [768], T([4, 785, 1], f32), T([4, 785, 1], f32), T([768], f32), T([768], f32), [True, True, True]), {})"
        },
        {
            "count": 72,
            "inputs": "((T([4, 784, 768], f32), T([4, 784, 768], f32, stride=(602112, 1, 784)), [768], T([4, 784, 1], f32), T([4, 784, 1], f32), T([768], f32), T([768], f32), [True, True, True]), {})"
        }
    ],
    "aten.neg.default": [
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 784], f32, stride=(602112, 37632, 1, 48)),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 784], f32),), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([4, 1000], f32), T([4], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([4, 1000], f32), T([4], i64), None, 1, -100), {})"
        }
    ],
    "aten.pow.Scalar": [
        {
            "count": 1,
            "inputs": "((10000, T([32], f32)), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([4], i64), 1000), {})"
        }
    ],
    "aten.repeat.default": [
        {
            "count": 1,
            "inputs": "((T([28, 1], f32), [1, 1, 28]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([28], f32), [1, 28, 1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 768, 28, 28], f32, stride=(602112, 1, 21504, 768)), [4, 1, 1, 1]), {})"
        }
    ],
    "aten.select_backward.default": [
        {
            "count": 3,
            "inputs": "((T([4, 768], f32), [4, 785, 768], 1, 0), {})"
        }
    ],
    "aten.sin.default": [
        {
            "count": 2,
            "inputs": "((T([1, 28, 28, 16], f32, stride=(25088, 896, 32, 2)),), {})"
        }
    ],
    "aten.slice_backward.default": [
        {
            "count": 4,
            "inputs": "((T([4, 784, 768], f32, stride=(602880, 768, 1)), [4, 785, 768], 1, 1, 9223372036854775807, 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 1, 768], f32), [4, 785, 768], 1, 0, 1, 1), {})"
        }
    ],
    "aten.stack.default": [
        {
            "count": 2,
            "inputs": "(([T([1, 28, 28, 16], f32), T([1, 28, 28, 16], f32)], 4), {})"
        },
        {
            "count": 24,
            "inputs": "(([T([4, 16, 48, 784], f32), T([4, 16, 48, 784], f32, stride=(602112, 37632, 1, 48)), T([4, 16, 48, 784], f32)],), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([4, 1000], f32), [0], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 1, 768], f32), [0, 1], True), {})"
        },
        {
            "count": 4,
            "inputs": "((T([4, 768], f32), [0], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 1, 3072], f32), [0, 1], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 785, 768], f32), [0, 1], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4, 768], f32, stride=(602880, 1)), [0], True), {})"
        },
        {
            "count": 4,
            "inputs": "((T([3140, 768], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 1, 768], f32, stride=(602880, 768, 1)), [0], True), {})"
        },
        {
            "count": 96,
            "inputs": "((T([4, 784, 768], f32), [0, 1], True), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3136, 768], f32), [0], True), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3136, 3072], f32), [0], True), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 48], f32), [0, 2, 3], True), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 784], f32, stride=(602112, 37632, 1, 48)), [3], True), {})"
        },
        {
            "count": 24,
            "inputs": "((T([4, 16, 48, 784], f32), [3], True), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3136, 2304], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 1, 768, 28, 28], f32, stride=(602112, 768, 1, 21504, 768)), [0]), {})"
        }
    ],
    "aten.unbind.int": [
        {
            "count": 24,
            "inputs": "((T([3, 4, 16, 48, 784], f32, stride=(768, 1806336, 48, 1, 2304)),), {})"
        }
    ],
    "aten.where.self": [
        {
            "count": 48,
            "inputs": "((T([4, 16, 48, 1], b8), T([4, 16, 48, 1], f32), T([], f32)), {})"
        }
    ]
}