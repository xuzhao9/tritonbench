{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([16, 3, 7, 7], f32), T([16, 16, 3, 3], f32), T([32, 16, 3, 3], f32), T([128, 32, 1, 1], f32), T([64, 32, 1, 1], f32), T([64, 64, 3, 3], f32), T([128, 64, 1, 1], f32), T([64, 128, 1, 1], f32), T([64, 64, 3, 3], f32), T([128, 64, 1, 1], f32), T([128, 256, 1, 1], f32), T([256, 128, 1, 1], f32), T([128, 128, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([256, 512, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([256, 768, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([256, 512, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([256, 1152, 1, 1], f32), T([512, 256, 1, 1], f32), T([256, 256, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1024, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1536, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1024, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 2048, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1024, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1536, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1024, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 2816, 1, 1], f32), T([1024, 512, 1, 1], f32), T([512, 512, 1, 1], f32), T([512, 512, 3, 3], f32), T([1024, 512, 1, 1], f32), T([512, 1024, 1, 1], f32), T([512, 512, 3, 3], f32), T([1024, 512, 1, 1], f32), T([1024, 2560, 1, 1], f32), T([1000, 1024, 1, 1], f32)], [T([16, 3, 7, 7], f32), T([16, 16, 3, 3], f32), T([32, 16, 3, 3], f32), T([128, 32, 1, 1], f32), T([64, 32, 1, 1], f32), T([64, 64, 3, 3], f32), T([128, 64, 1, 1], f32), T([64, 128, 1, 1], f32), T([64, 64, 3, 3], f32), T([128, 64, 1, 1], f32), T([128, 256, 1, 1], f32), T([256, 128, 1, 1], f32), T([128, 128, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([256, 512, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([256, 768, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([256, 512, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([256, 128, 1, 1], f32), T([256, 1152, 1, 1], f32), T([512, 256, 1, 1], f32), T([256, 256, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1024, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1536, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1024, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 2048, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1024, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1536, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 1024, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([512, 256, 1, 1], f32), T([512, 2816, 1, 1], f32), T([1024, 512, 1, 1], f32), T([512, 512, 1, 1], f32), T([512, 512, 3, 3], f32), T([1024, 512, 1, 1], f32), T([512, 1024, 1, 1], f32), T([512, 512, 3, 3], f32), T([1024, 512, 1, 1], f32), T([1024, 2560, 1, 1], f32), T([1000, 1024, 1, 1], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128, 1000], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 1,
            "inputs": "((T([128, 1024, 7, 7], f32), T([128, 1024, 7, 7], f32, stride=(125440, 49, 7, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 7, 7], f32, stride=(125440, 49, 7, 1)), T([128, 1024, 7, 7], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 7, 7], f32), T([128, 1024, 7, 7], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 7, 7], f32, stride=(125440, 49, 7, 1)), T([128, 512, 7, 7], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32, stride=(551936, 196, 14, 1))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 14, 14], f32, stride=(551936, 196, 14, 1)), T([128, 512, 14, 14], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32, stride=(200704, 196, 14, 1))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 14, 14], f32, stride=(200704, 196, 14, 1)), T([128, 512, 14, 14], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32, stride=(301056, 196, 14, 1))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 14, 14], f32, stride=(301056, 196, 14, 1)), T([128, 512, 14, 14], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32, stride=(401408, 196, 14, 1))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 14, 14], f32, stride=(401408, 196, 14, 1)), T([128, 512, 14, 14], f32)), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32, stride=(903168, 784, 28, 1))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 256, 28, 28], f32, stride=(903168, 784, 28, 1)), T([128, 256, 28, 28], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32, stride=(401408, 784, 28, 1))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 28, 28], f32, stride=(401408, 784, 28, 1)), T([128, 256, 28, 28], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32, stride=(602112, 784, 28, 1))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 28, 28], f32, stride=(602112, 784, 28, 1)), T([128, 256, 28, 28], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 128, 56, 56], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 128, 56, 56], f32, stride=(802816, 3136, 56, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32, stride=(802816, 3136, 56, 1)), T([128, 128, 56, 56], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([128, 32, 112, 112], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 105,
            "inputs": "((T([], i64), 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 128, 56, 56], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1024, 7, 7], f32), T([128, 1024, 7, 7], f32)), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 1,
            "inputs": "(([T([128, 128, 56, 56], f32), T([128, 128, 56, 56], f32)], 1), {})"
        },
        {
            "count": 2,
            "inputs": "(([T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32), T([128, 128, 28, 28], f32), T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32)], 1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32)], 1), {})"
        },
        {
            "count": 2,
            "inputs": "(([T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32), T([128, 256, 14, 14], f32), T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 1024, 7, 7], f32), T([128, 1024, 7, 7], f32), T([128, 512, 7, 7], f32)], 1), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 4,
            "inputs": "((T([16], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 90,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 58,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1024], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 7, 7], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 16, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 32, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 3, 3], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 1, 1], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 256, 1, 1], f32),), {})"
        },
        {
            "count": 9,
            "inputs": "((T([256, 128, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 1, 1], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 128, 3, 3], f32),), {})"
        },
        {
            "count": 17,
            "inputs": "((T([256, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 768, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 1152, 1, 1], f32),), {})"
        },
        {
            "count": 17,
            "inputs": "((T([512, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 256, 1, 1], f32),), {})"
        },
        {
            "count": 16,
            "inputs": "((T([256, 256, 3, 3], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([512, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 1536, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 2816, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1024, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 512, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 512, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 2560, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 1024, 1, 1], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([128, 3, 224, 224], f32), T([16, 3, 7, 7], f32), None, [1, 1], [3, 3], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 224, 224], f32), T([16, 16, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 224, 224], f32), T([32, 16, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 56, 56], f32), T([128, 32, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([64, 32, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([64, 64, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 56, 56], f32), T([128, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([64, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 56, 56], f32), T([64, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 56, 56], f32), T([128, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 128, 28, 28], f32), T([256, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 128, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 128, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 28, 28], f32), T([256, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 768, 28, 28], f32), T([256, 768, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1152, 28, 28], f32), T([256, 1152, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 17,
            "inputs": "((T([128, 256, 14, 14], f32), T([512, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 28, 28], f32), T([256, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 28, 28], f32), T([256, 256, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 15,
            "inputs": "((T([128, 512, 14, 14], f32), T([256, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 15,
            "inputs": "((T([128, 256, 14, 14], f32), T([256, 256, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 1024, 14, 14], f32), T([512, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 1536, 14, 14], f32), T([512, 1536, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2048, 14, 14], f32), T([512, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2816, 14, 14], f32), T([512, 2816, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 7, 7], f32), T([1024, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 14, 14], f32), T([512, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 14, 14], f32), T([512, 512, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 7, 7], f32), T([512, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 7, 7], f32), T([512, 512, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2560, 7, 7], f32), T([1024, 2560, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 1, 1], f32), T([1000, 1024, 1, 1], f32), T([1000], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000, 1, 1], f32), T([128, 1024, 1, 1], f32), T([1000, 1024, 1, 1], f32), [1000], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1024, 7, 7], f32), T([128, 2560, 7, 7], f32), T([1024, 2560, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1024, 7, 7], f32), T([128, 512, 7, 7], f32), T([1024, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 7, 7], f32), T([128, 512, 7, 7], f32), T([512, 512, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 7, 7], f32), T([128, 1024, 7, 7], f32), T([512, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 7, 7], f32), T([128, 512, 14, 14], f32), T([512, 512, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32), T([512, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 2816, 14, 14], f32), T([512, 2816, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 17,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 256, 14, 14], f32), T([512, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 15,
            "inputs": "((T([128, 256, 14, 14], f32), T([128, 256, 14, 14], f32), T([256, 256, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 15,
            "inputs": "((T([128, 256, 14, 14], f32), T([128, 512, 14, 14], f32), T([256, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 1024, 14, 14], f32), T([512, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 1536, 14, 14], f32), T([512, 1536, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 2048, 14, 14], f32), T([512, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 14, 14], f32), T([128, 256, 28, 28], f32), T([256, 256, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32), T([256, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 1152, 28, 28], f32), T([256, 1152, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 9,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 128, 28, 28], f32), T([256, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 128, 28, 28], f32), T([128, 128, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 7,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 256, 28, 28], f32), T([128, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 512, 28, 28], f32), T([256, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 768, 28, 28], f32), T([256, 768, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 128, 56, 56], f32), T([128, 128, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 128, 56, 56], f32), T([128, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 256, 56, 56], f32), T([128, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 64, 56, 56], f32), T([128, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 56, 56], f32), T([128, 64, 56, 56], f32), T([64, 64, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 56, 56], f32), T([128, 128, 56, 56], f32), T([64, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 56, 56], f32), T([128, 64, 112, 112], f32), T([64, 64, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([128, 32, 112, 112], f32), T([64, 32, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 32, 56, 56], f32), T([128, 32, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([128, 16, 224, 224], f32), T([32, 16, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 224, 224], f32), T([128, 16, 224, 224], f32), T([16, 16, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 16, 224, 224], f32), T([128, 3, 224, 224], f32), T([16, 3, 7, 7], f32), [0], [1, 1], [3, 3], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 2,
            "inputs": "((T([128, 16, 224, 224], f32), T([16], f32), T([16], f32), T([16], f32), T([16], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 128, 56, 56], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 56, 56], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 14,
            "inputs": "((T([128, 256, 28, 28], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 15,
            "inputs": "((T([128, 128, 28, 28], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 26,
            "inputs": "((T([128, 512, 14, 14], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 31,
            "inputs": "((T([128, 256, 14, 14], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 1024, 7, 7], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 7, 7], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 4,
            "inputs": "((T([128, 1024, 7, 7], f32), T([128, 1024, 7, 7], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 7, 7], f32), T([128, 512, 7, 7], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 26,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 31,
            "inputs": "((T([128, 256, 14, 14], f32), T([128, 256, 14, 14], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 14,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 128, 28, 28], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 128, 56, 56], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 56, 56], f32), T([128, 64, 56, 56], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([128, 64, 112, 112], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([128, 32, 112, 112], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 16, 224, 224], f32), T([128, 16, 224, 224], f32), T([16], f32), T([16], f32), T([16], f32), T([16], f32), T([16], f32), 1e-05, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([128, 1024, 7, 7], f32, stride=(1024, 1, 0, 0)), 49), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 128, 56, 56], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 256, 28, 28], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 512, 14, 14], f32), [2, 2], [2, 2]), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 512, 7, 7], f32), T([128, 512, 14, 14], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([128, 512, 7, 7], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 14, 14], f32), T([128, 256, 28, 28], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([128, 256, 14, 14], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 14, 14], f32, stride=(551936, 196, 14, 1)), T([128, 256, 28, 28], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([128, 256, 14, 14], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 128, 56, 56], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([128, 128, 28, 28], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 28, 28], f32, stride=(903168, 784, 28, 1)), T([128, 128, 56, 56], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([128, 128, 28, 28], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 56, 56], f32), T([128, 32, 112, 112], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([128, 32, 56, 56], i64)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([128, 1024, 7, 7], f32), [-1, -2], True), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([128, 1000], f32), T([128], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([128], i64), 1000), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 2,
            "inputs": "((T([128, 16, 224, 224], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 56, 56], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 128, 56, 56], f32),), {})"
        },
        {
            "count": 15,
            "inputs": "((T([128, 128, 28, 28], f32),), {})"
        },
        {
            "count": 13,
            "inputs": "((T([128, 256, 28, 28], f32),), {})"
        },
        {
            "count": 31,
            "inputs": "((T([128, 256, 14, 14], f32),), {})"
        },
        {
            "count": 25,
            "inputs": "((T([128, 512, 14, 14], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 7, 7], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 1024, 7, 7], f32),), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 3,
            "inputs": "((T([128, 1024, 7, 7], f32), T([128, 1024, 7, 7], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 7, 7], f32), T([128, 512, 7, 7], f32), 0), {})"
        },
        {
            "count": 25,
            "inputs": "((T([128, 512, 14, 14], f32), T([128, 512, 14, 14], f32), 0), {})"
        },
        {
            "count": 31,
            "inputs": "((T([128, 256, 14, 14], f32), T([128, 256, 14, 14], f32), 0), {})"
        },
        {
            "count": 13,
            "inputs": "((T([128, 256, 28, 28], f32), T([128, 256, 28, 28], f32), 0), {})"
        },
        {
            "count": 15,
            "inputs": "((T([128, 128, 28, 28], f32), T([128, 128, 28, 28], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 128, 56, 56], f32), T([128, 128, 56, 56], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 56, 56], f32), T([128, 64, 56, 56], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 112, 112], f32), T([128, 64, 112, 112], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 112, 112], f32), T([128, 32, 112, 112], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 16, 224, 224], f32), T([128, 16, 224, 224], f32), 0), {})"
        }
    ]
}