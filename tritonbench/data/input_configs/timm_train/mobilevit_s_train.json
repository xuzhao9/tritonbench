{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([16, 3, 3, 3], f32), T([64, 16, 1, 1], f32), T([64, 1, 3, 3], f32), T([32, 64, 1, 1], f32), T([128, 32, 1, 1], f32), T([128, 1, 3, 3], f32), T([64, 128, 1, 1], f32), T([256, 64, 1, 1], f32), T([256, 1, 3, 3], f32), T([64, 256, 1, 1], f32), T([256, 64, 1, 1], f32), T([256, 1, 3, 3], f32), T([64, 256, 1, 1], f32), T([256, 64, 1, 1], f32), T([256, 1, 3, 3], f32), T([96, 256, 1, 1], f32), T([96, 96, 3, 3], f32), T([144, 96, 1, 1], f32), T([432, 144], f32), T([144, 144], f32), T([288, 144], f32), T([144, 288], f32), T([432, 144], f32), T([144, 144], f32), T([288, 144], f32), T([144, 288], f32), T([96, 144, 1, 1], f32), T([96, 192, 3, 3], f32), T([384, 96, 1, 1], f32), T([384, 1, 3, 3], f32), T([128, 384, 1, 1], f32), T([128, 128, 3, 3], f32), T([192, 128, 1, 1], f32), T([576, 192], f32), T([192, 192], f32), T([384, 192], f32), T([192, 384], f32), T([576, 192], f32), T([192, 192], f32), T([384, 192], f32), T([192, 384], f32), T([576, 192], f32), T([192, 192], f32), T([384, 192], f32), T([192, 384], f32), T([576, 192], f32), T([192, 192], f32), T([384, 192], f32), T([192, 384], f32), T([128, 192, 1, 1], f32), T([128, 256, 3, 3], f32), T([512, 128, 1, 1], f32), T([512, 1, 3, 3], f32), T([160, 512, 1, 1], f32), T([160, 160, 3, 3], f32), T([240, 160, 1, 1], f32), T([720, 240], f32), T([240, 240], f32), T([480, 240], f32), T([240, 480], f32), T([720, 240], f32), T([240, 240], f32), T([480, 240], f32), T([240, 480], f32), T([720, 240], f32), T([240, 240], f32), T([480, 240], f32), T([240, 480], f32), T([160, 240, 1, 1], f32), T([160, 320, 3, 3], f32), T([640, 160, 1, 1], f32), T([1000, 640], f32)], [T([16, 3, 3, 3], f32), T([64, 16, 1, 1], f32), T([64, 1, 3, 3], f32), T([32, 64, 1, 1], f32), T([128, 32, 1, 1], f32), T([128, 1, 3, 3], f32), T([64, 128, 1, 1], f32), T([256, 64, 1, 1], f32), T([256, 1, 3, 3], f32), T([64, 256, 1, 1], f32), T([256, 64, 1, 1], f32), T([256, 1, 3, 3], f32), T([64, 256, 1, 1], f32), T([256, 64, 1, 1], f32), T([256, 1, 3, 3], f32), T([96, 256, 1, 1], f32), T([96, 96, 3, 3], f32), T([144, 96, 1, 1], f32), T([432, 144], f32), T([144, 144], f32), T([288, 144], f32), T([144, 288], f32), T([432, 144], f32), T([144, 144], f32), T([288, 144], f32), T([144, 288], f32), T([96, 144, 1, 1], f32), T([96, 192, 3, 3], f32), T([384, 96, 1, 1], f32), T([384, 1, 3, 3], f32), T([128, 384, 1, 1], f32), T([128, 128, 3, 3], f32), T([192, 128, 1, 1], f32), T([576, 192], f32), T([192, 192], f32), T([384, 192], f32), T([192, 384], f32), T([576, 192], f32), T([192, 192], f32), T([384, 192], f32), T([192, 384], f32), T([576, 192], f32), T([192, 192], f32), T([384, 192], f32), T([192, 384], f32), T([576, 192], f32), T([192, 192], f32), T([384, 192], f32), T([192, 384], f32), T([128, 192, 1, 1], f32), T([128, 256, 3, 3], f32), T([512, 128, 1, 1], f32), T([512, 1, 3, 3], f32), T([160, 512, 1, 1], f32), T([160, 160, 3, 3], f32), T([240, 160, 1, 1], f32), T([720, 240], f32), T([240, 240], f32), T([480, 240], f32), T([240, 480], f32), T([720, 240], f32), T([240, 240], f32), T([480, 240], f32), T([240, 480], f32), T([720, 240], f32), T([240, 240], f32), T([480, 240], f32), T([240, 480], f32), T([160, 240, 1, 1], f32), T([160, 320, 3, 3], f32), T([640, 160, 1, 1], f32), T([1000, 640], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64, 1000], f32), 1, f32), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention.default": [
        {
            "count": 2,
            "inputs": "((T([256, 4, 256, 36], f32, stride=(110592, 36, 432, 1)), T([256, 4, 256, 36], f32, stride=(110592, 36, 432, 1)), T([256, 4, 256, 36], f32, stride=(110592, 36, 432, 1)), None, True), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 4, 64, 48], f32, stride=(36864, 48, 576, 1)), T([256, 4, 64, 48], f32, stride=(36864, 48, 576, 1)), T([256, 4, 64, 48], f32, stride=(36864, 48, 576, 1)), None, True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 4, 16, 60], f32, stride=(11520, 60, 720, 1)), T([256, 4, 16, 60], f32, stride=(11520, 60, 720, 1)), T([256, 4, 16, 60], f32, stride=(11520, 60, 720, 1)), None, True), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention_backward.default": [
        {
            "count": 3,
            "inputs": "((T([256, 4, 16, 60], f32, stride=(3840, 60, 240, 1)), T([256, 4, 16, 60], f32, stride=(11520, 60, 720, 1)), T([256, 4, 16, 60], f32, stride=(11520, 60, 720, 1)), T([256, 4, 16, 60], f32, stride=(11520, 60, 720, 1)), None, T([256, 4, 16, 60], f32, stride=(3840, 60, 240, 1)), T([256, 4, 32], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 4, 64, 48], f32, stride=(12288, 48, 192, 1)), T([256, 4, 64, 48], f32, stride=(36864, 48, 576, 1)), T([256, 4, 64, 48], f32, stride=(36864, 48, 576, 1)), T([256, 4, 64, 48], f32, stride=(36864, 48, 576, 1)), None, T([256, 4, 64, 48], f32, stride=(12288, 48, 192, 1)), T([256, 4, 64], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 4, 256, 36], f32, stride=(36864, 36, 144, 1)), T([256, 4, 256, 36], f32, stride=(110592, 36, 432, 1)), T([256, 4, 256, 36], f32, stride=(110592, 36, 432, 1)), T([256, 4, 256, 36], f32, stride=(110592, 36, 432, 1)), None, T([256, 4, 256, 36], f32, stride=(36864, 36, 144, 1)), T([256, 4, 256], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 2,
            "inputs": "((T([147456, 16, 2, 2], f32), [64, 144, 256, 4]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 4, 256, 144], f32), [256, 256, 144]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 144, 256, 4], f32), [147456, 16, 2, 2]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([147456, 2, 16, 2], f32), [64, 144, 32, 32]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([98304, 8, 2, 2], f32), [64, 192, 64, 4]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 4, 64, 192], f32), [256, 64, 192]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 192, 64, 4], f32), [98304, 8, 2, 2]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([98304, 2, 8, 2], f32), [64, 192, 16, 16]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([61440, 4, 2, 2], f32), [64, 240, 16, 4]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 4, 16, 240], f32), [256, 16, 240]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 240, 16, 4], f32), [61440, 4, 2, 2]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([61440, 2, 4, 2], f32), [64, 240, 8, 8]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 16, 3, 4, 60], f32), [256, 16, 720]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 64, 3, 4, 48], f32), [256, 64, 576]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 256, 3, 4, 36], f32), [256, 256, 432]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 4,
            "inputs": "((T([64, 64, 64, 64], f32), T([64, 64, 64, 64], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([256, 256, 144], f32), T([256, 256, 144], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([256, 64, 192], f32), T([256, 64, 192], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([256, 16, 240], f32), T([256, 16, 240], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 160, 8, 8], f32, stride=(20480, 64, 8, 1)), T([64, 160, 8, 8], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 16, 16], f32, stride=(65536, 256, 16, 1)), T([64, 128, 16, 16], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 96, 32, 32], f32, stride=(196608, 1024, 32, 1)), T([64, 96, 32, 32], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 32,
            "inputs": "((T([], i64), 1), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 2,
            "inputs": "((T([432], f32), T([65536, 144], f32), T([144, 432], f32, stride=(1, 144))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([144], f32), T([65536, 144], f32), T([144, 144], f32, stride=(1, 144))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([288], f32), T([65536, 144], f32), T([144, 288], f32, stride=(1, 144))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([144], f32), T([65536, 288], f32), T([288, 144], f32, stride=(1, 288))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([576], f32), T([16384, 192], f32), T([192, 576], f32, stride=(1, 192))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([192], f32), T([16384, 192], f32), T([192, 192], f32, stride=(1, 192))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([384], f32), T([16384, 192], f32), T([192, 384], f32, stride=(1, 192))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([192], f32), T([16384, 384], f32), T([384, 192], f32, stride=(1, 384))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([720], f32), T([4096, 240], f32), T([240, 720], f32, stride=(1, 240))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([240], f32), T([4096, 240], f32), T([240, 240], f32, stride=(1, 240))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([480], f32), T([4096, 240], f32), T([240, 480], f32, stride=(1, 240))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([240], f32), T([4096, 480], f32), T([480, 240], f32, stride=(1, 480))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([64, 640], f32), T([640, 1000], f32, stride=(1, 640))), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 1,
            "inputs": "(([T([64, 96, 32, 32], f32), T([64, 96, 32, 32], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([64, 128, 16, 16], f32), T([64, 128, 16, 16], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([64, 160, 8, 8], f32), T([64, 160, 8, 8], f32)], 1), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 1,
            "inputs": "((T([64, 16, 128, 128], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 128, 128], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([64, 256, 64, 64], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 96, 32, 32], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 32, 32], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 16, 16], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 16, 16], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 8, 8], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 160, 8, 8], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 640, 8, 8], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16], f32),), {})"
        },
        {
            "count": 10,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([96], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([144], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([432], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([288], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([384], f32),), {})"
        },
        {
            "count": 26,
            "inputs": "((T([192], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([576], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([160], f32),), {})"
        },
        {
            "count": 20,
            "inputs": "((T([240], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([720], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([480], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([640], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 16, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 32, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 64, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 1, 3, 3], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 96, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([144, 96, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([432, 144], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([144, 144], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([288, 144], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([144, 288], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 144, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 192, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([384, 96, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([384, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 128, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([192, 128, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([576, 192], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([192, 192], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([384, 192], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([192, 384], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 128, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([160, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([160, 160, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([240, 160, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([720, 240], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([240, 240], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([480, 240], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([240, 480], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([160, 240, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([160, 320, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([640, 160, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 640], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([64, 3, 256, 256], f32), T([16, 3, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 16, 128, 128], f32), T([64, 16, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 128, 128], f32), T([64, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 64), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 128, 128], f32), T([32, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 32, 128, 128], f32), T([128, 32, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32), T([128, 1, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 128), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), T([64, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 64, 64], f32), T([256, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 256, 64, 64], f32), T([256, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 256), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 64, 64], f32), T([256, 1, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 256), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32), T([96, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 96, 32, 32], f32), T([96, 96, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 96, 32, 32], f32), T([144, 96, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 144, 32, 32], f32), T([96, 144, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 192, 32, 32], f32), T([96, 192, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 96, 32, 32], f32), T([384, 96, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 32, 32], f32), T([384, 1, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 384), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 16, 16], f32), T([128, 384, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 16, 16], f32), T([128, 128, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 16, 16], f32), T([192, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 192, 16, 16], f32), T([128, 192, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 16, 16], f32), T([128, 256, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 16, 16], f32), T([512, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32), T([512, 1, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 512), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 8, 8], f32), T([160, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 160, 8, 8], f32), T([160, 160, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 160, 8, 8], f32), T([240, 160, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 240, 8, 8], f32), T([160, 240, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 320, 8, 8], f32), T([160, 320, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 160, 8, 8], f32), T([640, 160, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 640, 8, 8], f32), T([64, 160, 8, 8], f32), T([640, 160, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 160, 8, 8], f32), T([64, 320, 8, 8], f32), T([160, 320, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 160, 8, 8], f32), T([64, 240, 8, 8], f32), T([160, 240, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 240, 8, 8], f32), T([64, 160, 8, 8], f32), T([240, 160, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 160, 8, 8], f32), T([64, 160, 8, 8], f32), T([160, 160, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 160, 8, 8], f32), T([64, 512, 8, 8], f32), T([160, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 8, 8], f32), T([64, 512, 16, 16], f32), T([512, 1, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 512, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32), T([64, 128, 16, 16], f32), T([512, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 16, 16], f32), T([64, 256, 16, 16], f32), T([128, 256, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 16, 16], f32), T([64, 192, 16, 16], f32), T([128, 192, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 192, 16, 16], f32), T([64, 128, 16, 16], f32), T([192, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 16, 16], f32), T([64, 128, 16, 16], f32), T([128, 128, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 16, 16], f32), T([64, 384, 16, 16], f32), T([128, 384, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 16, 16], f32), T([64, 384, 32, 32], f32), T([384, 1, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 384, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 32, 32], f32), T([64, 96, 32, 32], f32), T([384, 96, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 96, 32, 32], f32), T([64, 192, 32, 32], f32), T([96, 192, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 96, 32, 32], f32), T([64, 144, 32, 32], f32), T([96, 144, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 144, 32, 32], f32), T([64, 96, 32, 32], f32), T([144, 96, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 96, 32, 32], f32), T([64, 96, 32, 32], f32), T([96, 96, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 96, 32, 32], f32), T([64, 256, 32, 32], f32), T([96, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32), T([64, 256, 64, 64], f32), T([256, 1, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 256, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 64, 64, 64], f32), T([256, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 64, 64], f32), T([64, 256, 64, 64], f32), T([64, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 256, 64, 64], f32), T([256, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 256, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 64, 64], f32), T([64, 128, 64, 64], f32), T([64, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), T([64, 128, 128, 128], f32), T([128, 1, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 128, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32), T([64, 32, 128, 128], f32), T([128, 32, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 32, 128, 128], f32), T([64, 64, 128, 128], f32), T([32, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 128, 128], f32), T([64, 64, 128, 128], f32), T([64, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 64, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 128, 128], f32), T([64, 16, 128, 128], f32), T([64, 16, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 16, 128, 128], f32), T([64, 3, 256, 256], f32), T([16, 3, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([64, 16, 128, 128], f32), T([16], f32), T([16], f32), T([16], f32), T([16], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 128, 128], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 32, 128, 128], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 64, 64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([64, 256, 64, 64], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 96, 32, 32], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 32, 32], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 16, 16], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 128, 16, 16], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 8, 8], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 160, 8, 8], f32), T([160], f32), T([160], f32), T([160], f32), T([160], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 640, 8, 8], f32), T([640], f32), T([640], f32), T([640], f32), T([640], f32), True, 0.1, 1e-05), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 640, 8, 8], f32), T([64, 640, 8, 8], f32), T([640], f32), T([640], f32), T([640], f32), T([640], f32), T([640], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 160, 8, 8], f32), T([64, 160, 8, 8], f32), T([160], f32), T([160], f32), T([160], f32), T([160], f32), T([160], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 8, 8], f32), T([64, 512, 8, 8], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32), T([64, 512, 16, 16], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 128, 16, 16], f32), T([64, 128, 16, 16], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 16, 16], f32), T([64, 384, 16, 16], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 32, 32], f32), T([64, 384, 32, 32], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), T([384], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 96, 32, 32], f32), T([64, 96, 32, 32], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32), T([64, 256, 32, 32], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 256, 64, 64], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 64, 64], f32), T([64, 64, 64, 64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), T([64, 128, 64, 64], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32), T([64, 128, 128, 128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 32, 128, 128], f32), T([64, 32, 128, 128], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 128, 128], f32), T([64, 64, 128, 128], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 16, 128, 128], f32), T([64, 16, 128, 128], f32), T([16], f32), T([16], f32), T([16], f32), T([16], f32), T([16], f32), 1e-05, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([64, 640, 8, 8], f32, stride=(640, 1, 0, 0)), 64), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([64, 640, 8, 8], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([1000, 640], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 64], f32, stride=(1, 1000)), T([64, 640], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([4096, 240], f32), T([240, 480], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([240, 4096], f32, stride=(1, 240)), T([4096, 480], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([4096, 480], f32), T([480, 240], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([480, 4096], f32, stride=(1, 480)), T([4096, 240], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([4096, 240], f32), T([240, 240], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([240, 4096], f32, stride=(1, 240)), T([4096, 240], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([4096, 720], f32), T([720, 240], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([720, 4096], f32, stride=(1, 720)), T([4096, 240], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16384, 192], f32), T([192, 384], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([192, 16384], f32, stride=(1, 192)), T([16384, 384], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16384, 384], f32), T([384, 192], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([384, 16384], f32, stride=(1, 384)), T([16384, 192], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16384, 192], f32), T([192, 192], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([192, 16384], f32, stride=(1, 192)), T([16384, 192], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16384, 576], f32), T([576, 192], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([576, 16384], f32, stride=(1, 576)), T([16384, 192], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([65536, 144], f32), T([144, 288], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([144, 65536], f32, stride=(1, 144)), T([65536, 288], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([65536, 288], f32), T([288, 144], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([288, 65536], f32, stride=(1, 288)), T([65536, 144], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([65536, 144], f32), T([144, 144], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([144, 65536], f32, stride=(1, 144)), T([65536, 144], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([65536, 432], f32), T([432, 144], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([432, 65536], f32, stride=(1, 432)), T([65536, 144], f32)), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 5,
            "inputs": "((T([256, 256, 144], f32), [144], T([144], f32), T([144], f32), 1e-05), {})"
        },
        {
            "count": 9,
            "inputs": "((T([256, 64, 192], f32), [192], T([192], f32), T([192], f32), 1e-05), {})"
        },
        {
            "count": 7,
            "inputs": "((T([256, 16, 240], f32), [240], T([240], f32), T([240], f32), 1e-05), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 7,
            "inputs": "((T([256, 16, 240], f32), T([256, 16, 240], f32), [240], T([256, 16, 1], f32), T([256, 16, 1], f32), T([240], f32), T([240], f32), [True, True, True]), {})"
        },
        {
            "count": 9,
            "inputs": "((T([256, 64, 192], f32), T([256, 64, 192], f32), [192], T([256, 64, 1], f32), T([256, 64, 1], f32), T([192], f32), T([192], f32), [True, True, True]), {})"
        },
        {
            "count": 5,
            "inputs": "((T([256, 256, 144], f32), T([256, 256, 144], f32), [144], T([256, 256, 1], f32), T([256, 256, 1], f32), T([144], f32), T([144], f32), [True, True, True]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([64, 1000], f32), T([64], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([64], i64), 1000), {})"
        }
    ],
    "aten.silu.default": [
        {
            "count": 2,
            "inputs": "((T([256, 256, 288], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 64, 384], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 16, 480], f32),), {})"
        }
    ],
    "aten.silu_.default": [
        {
            "count": 1,
            "inputs": "((T([64, 16, 128, 128], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 128, 128], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([64, 256, 64, 64], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 96, 32, 32], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 32, 32], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 16, 16], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 128, 16, 16], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 8, 8], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 160, 8, 8], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 640, 8, 8], f32),), {})"
        }
    ],
    "aten.silu_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 640, 8, 8], f32), T([64, 640, 8, 8], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 160, 8, 8], f32), T([64, 160, 8, 8], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 160, 8, 8], f32, stride=(20480, 64, 8, 1)), T([64, 160, 8, 8], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 16, 480], f32), T([256, 16, 480], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 8, 8], f32), T([64, 512, 8, 8], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 16, 16], f32), T([64, 512, 16, 16], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 128, 16, 16], f32), T([64, 128, 16, 16], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 16, 16], f32, stride=(65536, 256, 16, 1)), T([64, 128, 16, 16], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 64, 384], f32), T([256, 64, 384], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 16, 16], f32), T([64, 384, 16, 16], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 384, 32, 32], f32), T([64, 384, 32, 32], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 96, 32, 32], f32), T([64, 96, 32, 32], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 96, 32, 32], f32, stride=(196608, 1024, 32, 1)), T([64, 96, 32, 32], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 256, 288], f32), T([256, 256, 288], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 32, 32], f32), T([64, 256, 32, 32], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([64, 256, 64, 64], f32), T([64, 256, 64, 64], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 64, 64], f32), T([64, 128, 64, 64], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 128, 128], f32), T([64, 128, 128, 128], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 128, 128], f32), T([64, 64, 128, 128], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 16, 128, 128], f32), T([64, 16, 128, 128], f32)), {})"
        }
    ],
    "aten.stack.default": [
        {
            "count": 3,
            "inputs": "(([T([256, 4, 16, 60], f32, stride=(3840, 60, 240, 1)), T([256, 4, 16, 60], f32, stride=(3840, 60, 240, 1)), T([256, 4, 16, 60], f32, stride=(3840, 60, 240, 1))],), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([256, 4, 64, 48], f32, stride=(12288, 48, 192, 1)), T([256, 4, 64, 48], f32, stride=(12288, 48, 192, 1)), T([256, 4, 64, 48], f32, stride=(12288, 48, 192, 1))],), {})"
        },
        {
            "count": 2,
            "inputs": "(([T([256, 4, 256, 36], f32, stride=(36864, 36, 144, 1)), T([256, 4, 256, 36], f32, stride=(36864, 36, 144, 1)), T([256, 4, 256, 36], f32, stride=(36864, 36, 144, 1))],), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), [0], True), {})"
        },
        {
            "count": 6,
            "inputs": "((T([4096, 240], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([4096, 480], f32), [0], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([4096, 720], f32), [0], True), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16384, 192], f32), [0], True), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16384, 384], f32), [0], True), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16384, 576], f32), [0], True), {})"
        },
        {
            "count": 4,
            "inputs": "((T([65536, 144], f32), [0], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([65536, 288], f32), [0], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([65536, 432], f32), [0], True), {})"
        }
    ],
    "aten.unbind.int": [
        {
            "count": 2,
            "inputs": "((T([3, 256, 4, 256, 36], f32, stride=(144, 110592, 36, 432, 1)),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([3, 256, 4, 64, 48], f32, stride=(192, 36864, 48, 576, 1)),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3, 256, 4, 16, 60], f32, stride=(240, 11520, 60, 720, 1)),), {})"
        }
    ]
}