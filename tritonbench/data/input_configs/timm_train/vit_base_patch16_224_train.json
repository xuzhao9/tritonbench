{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([768, 3, 16, 16], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([1000, 768], f32)], [T([768, 3, 16, 16], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([2304, 768], f32), T([768, 768], f32), T([3072, 768], f32), T([768, 3072], f32), T([1000, 768], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64, 1000], f32), 1, f32), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention.default": [
        {
            "count": 12,
            "inputs": "((T([64, 12, 197, 64], f32, stride=(453888, 64, 2304, 1)), T([64, 12, 197, 64], f32, stride=(453888, 64, 2304, 1)), T([64, 12, 197, 64], f32, stride=(453888, 64, 2304, 1)), None, True), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention_backward.default": [
        {
            "count": 12,
            "inputs": "((T([64, 12, 197, 64], f32, stride=(151296, 64, 768, 1)), T([64, 12, 197, 64], f32, stride=(453888, 64, 2304, 1)), T([64, 12, 197, 64], f32, stride=(453888, 64, 2304, 1)), T([64, 12, 197, 64], f32, stride=(453888, 64, 2304, 1)), None, T([64, 12, 197, 64], f32, stride=(151296, 64, 768, 1)), T([64, 12, 224], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 12,
            "inputs": "((T([64, 197, 3, 12, 64], f32), [64, 197, 2304]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 1,
            "inputs": "((T([64, 197, 768], f32), T([1, 197, 768], f32)), {})"
        },
        {
            "count": 48,
            "inputs": "((T([64, 197, 768], f32), T([64, 197, 768], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 12,
            "inputs": "((T([2304], f32), T([12608, 768], f32), T([768, 2304], f32, stride=(1, 768))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768], f32), T([12608, 768], f32), T([768, 768], f32, stride=(1, 768))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3072], f32), T([12608, 768], f32), T([768, 3072], f32, stride=(1, 768))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768], f32), T([12608, 3072], f32), T([3072, 768], f32, stride=(1, 3072))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([64, 768], f32, stride=(151296, 1)), T([768, 1000], f32, stride=(1, 768))), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 1,
            "inputs": "(([T([64, 1, 768], f32, stride=(0, 768, 1)), T([64, 196, 768], f32, stride=(150528, 1, 196))], 1), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 1,
            "inputs": "((T([1, 1, 768], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 197, 768], f32),), {})"
        },
        {
            "count": 75,
            "inputs": "((T([768], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([2304], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3072], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([768, 3, 16, 16], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([2304, 768], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768, 768], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3072, 768], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768, 3072], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 768], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([64, 3, 224, 224], f32), T([768, 3, 16, 16], f32), T([768], f32), [16, 16], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 768, 14, 14], f32, stride=(151296, 1, 10752, 768)), T([64, 3, 224, 224], f32), T([768, 3, 16, 16], f32), [768], [16, 16], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 12,
            "inputs": "((T([64, 197, 3072], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 12,
            "inputs": "((T([64, 197, 3072], f32), T([64, 197, 3072], f32)), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([1000, 768], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 64], f32, stride=(1, 1000)), T([64, 768], f32, stride=(151296, 1))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([12608, 768], f32), T([768, 3072], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768, 12608], f32, stride=(1, 768)), T([12608, 3072], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([12608, 3072], f32), T([3072, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3072, 12608], f32, stride=(1, 3072)), T([12608, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([12608, 768], f32), T([768, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([768, 12608], f32, stride=(1, 768)), T([12608, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([12608, 2304], f32), T([2304, 768], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([2304, 12608], f32, stride=(1, 2304)), T([12608, 768], f32)), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 25,
            "inputs": "((T([64, 197, 768], f32), [768], T([768], f32), T([768], f32), 1e-06), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 25,
            "inputs": "((T([64, 197, 768], f32), T([64, 197, 768], f32), [768], T([64, 197, 1], f32), T([64, 197, 1], f32), T([768], f32), T([768], f32), [True, True, True]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([64, 1000], f32), T([64], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([64], i64), 1000), {})"
        }
    ],
    "aten.select_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 768], f32), [64, 197, 768], 1, 0), {})"
        }
    ],
    "aten.stack.default": [
        {
            "count": 12,
            "inputs": "(([T([64, 12, 197, 64], f32, stride=(151296, 64, 768, 1)), T([64, 12, 197, 64], f32, stride=(151296, 64, 768, 1)), T([64, 12, 197, 64], f32, stride=(151296, 64, 768, 1))],), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), [0], True), {})"
        },
        {
            "count": 24,
            "inputs": "((T([12608, 768], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([12608, 3072], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([12608, 2304], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 197, 768], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1, 768], f32, stride=(151296, 768, 1)), [0], True), {})"
        }
    ],
    "aten.unbind.int": [
        {
            "count": 12,
            "inputs": "((T([3, 64, 12, 197, 64], f32, stride=(768, 453888, 64, 2304, 1)),), {})"
        }
    ]
}