{
    "aten._cudnn_rnn.default": {
        "count": 1,
        "inputs": "((T([92, 64, 2048], f32, stride=(1, 188416, 92)), [T([8192, 2048], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32), T([8192, 2048], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32), T([8192, 4096], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32), T([8192, 4096], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32)], 4, T([167837696], f32), T([4, 64, 2048], f32), T([4, 64, 2048], f32), 2, 2048, 0, 2, False, 0.0, True, True, [], None), {})"
    },
    "aten._cudnn_rnn_backward.default": {
        "count": 1,
        "inputs": "((T([92, 64, 2048], f32, stride=(1, 188416, 92)), [T([8192, 2048], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32), T([8192, 2048], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32), T([8192, 4096], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32), T([8192, 4096], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32)], 4, T([167837696], f32), T([4, 64, 2048], f32), T([4, 64, 2048], f32), T([92, 64, 4096], f32), T([92, 64, 4096], f32), None, None, 2, 2048, 0, 2, False, 0.0, True, True, [], None, T([1061159168], u8), [True, False, False, True]), {})"
    },
    "aten._foreach_sqrt.default": {
        "count": 1,
        "inputs": "(([T([64, 2, 8], f32), T([64], f32), T([128, 64, 1], f32), T([128], f32), T([128, 64, 8], f32), T([128], f32), T([256, 128, 1], f32), T([256], f32), T([256, 128, 8], f32), T([256], f32), T([512, 256, 1], f32), T([512], f32), T([512, 256, 8], f32), T([512], f32), T([1024, 512, 1], f32), T([1024], f32), T([1024, 512, 8], f32), T([1024], f32), T([2048, 1024, 1], f32), T([2048], f32), T([2048, 1024, 8], f32), T([2048], f32), T([4096, 2048, 1], f32), T([4096], f32), T([4096, 2048, 3], f32), T([4096], f32), T([2048, 1024, 8], f32), T([1024], f32), T([2048, 1024, 3], f32), T([2048], f32), T([1024, 512, 8], f32), T([512], f32), T([1024, 512, 3], f32), T([1024], f32), T([512, 256, 8], f32), T([256], f32), T([512, 256, 3], f32), T([512], f32), T([256, 128, 8], f32), T([128], f32), T([256, 128, 3], f32), T([256], f32), T([128, 64, 8], f32), T([64], f32), T([128, 64, 3], f32), T([128], f32), T([64, 8, 8], f32), T([8], f32), T([8192, 2048], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32), T([8192, 2048], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32), T([8192, 4096], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32), T([8192, 4096], f32), T([8192, 2048], f32), T([8192], f32), T([8192], f32), T([2048, 4096], f32), T([2048], f32)],), {})"
    },
    "aten._unsafe_view.default": {
        "count": 1,
        "inputs": "((T([92, 64, 2048], f32), [5888, 2048]), {})"
    },
    "aten.abs.default": {
        "count": 1,
        "inputs": "((T([64, 4, 2, 371372], f32),), {})"
    },
    "aten.add.Tensor": {
        "count": 1,
        "inputs": "((T([64, 64, 95696], f32), T([64, 64, 95696], f32)), {})"
    },
    "aten.addmm.default": {
        "count": 1,
        "inputs": "((T([2048], f32), T([5888, 4096], f32), T([4096, 2048], f32, stride=(1, 4096))), {})"
    },
    "aten.cat.default": {
        "count": 1,
        "inputs": "(([T([64, 4, 1, 426888], f32), T([64, 4, 1, 426888], f32)], 2), {})"
    },
    "aten.convolution.default": {
        "count": 1,
        "inputs": "((T([64, 64, 92842], f32), T([64, 8, 8], f32), T([8], f32), [4], [0], [1], True, [0], 1), {})"
    },
    "aten.convolution_backward.default": {
        "count": 1,
        "inputs": "((T([64, 64, 95696], f32), T([64, 2, 382788], f32), T([64, 2, 8], f32), [64], [4], [0], [1], False, [0], 1, [False, True, True]), {})"
    },
    "aten.div.Scalar": {
        "count": 1,
        "inputs": "((T([64, 4, 2, 371372], f32, stride=(0, 0, 0, 0)), 190142464), {})"
    },
    "aten.gather.default": {
        "count": 1,
        "inputs": "((T([16, 4, 4, 2, 382788], f32), 1, T([16, 4, 4, 2, 382788], i64, stride=(16, 4, 1, 0, 0))), {})"
    },
    "aten.glu.default": {
        "count": 1,
        "inputs": "((T([64, 128, 92842], f32), 1), {})"
    },
    "aten.glu_backward.default": {
        "count": 1,
        "inputs": "((T([64, 64, 95696], f32), T([64, 128, 95696], f32), 1), {})"
    },
    "aten.mean.default": {
        "count": 1,
        "inputs": "((T([64, 4, 2, 371372], f32),), {})"
    },
    "aten.mm.default": {
        "count": 1,
        "inputs": "((T([2048, 5888], f32, stride=(1, 2048)), T([5888, 4096], f32)), {})"
    },
    "aten.mul.Tensor": {
        "count": 1,
        "inputs": "((T([64, 4, 2, 371372], f32), T([64, 4, 2, 371372], f32)), {})"
    },
    "aten.relu.default": {
        "count": 1,
        "inputs": "((T([64, 64, 92844], f32),), {})"
    },
    "aten.rsub.Scalar": {
        "count": 1,
        "inputs": "((T([64, 4, 1, 426888], i64, stride=(4, 1, 1, 0)), 1), {})"
    },
    "aten.sgn.default": {
        "count": 1,
        "inputs": "((T([64, 4, 2, 371372], f32),), {})"
    },
    "aten.slice_backward.default": {
        "count": 1,
        "inputs": "((T([64, 1024, 364], f32), [64, 1024, 372], 2, 4, -4, 1), {})"
    },
    "aten.sort.default": {
        "count": 1,
        "inputs": "((T([16, 4, 4, 1, 1], f32), 1), {})"
    },
    "aten.sub.Tensor": {
        "count": 1,
        "inputs": "((T([64, 4, 2, 371372], f32), T([64, 4, 2, 371372], f32, stride=(3062304, 765576, 382788, 1))), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 1,
        "inputs": "((T([5888, 2048], f32), [0], True), {})"
    },
    "aten.threshold_backward.default": {
        "count": 1,
        "inputs": "((T([64, 64, 95696], f32), T([64, 64, 95696], f32), 0), {})"
    }
}