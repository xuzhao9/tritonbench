{
    "aten._foreach_sqrt.default": {
        "count": 1,
        "inputs": "(([T([64, 1, 3, 3], f32), T([64], f32), T([64], f32), T([64], f32), T([64, 64, 3, 3], f32), T([64], f32), T([64], f32), T([64], f32), T([64, 64, 3, 3], f32), T([64], f32), T([64], f32), T([64], f32), T([5, 64], f32), T([5], f32)],), {})"
    },
    "aten._log_softmax.default": {
        "count": 32,
        "inputs": "((T([75, 5], f32), 1, False), {})"
    },
    "aten._log_softmax_backward_data.default": {
        "count": 32,
        "inputs": "((T([75, 5], f32), T([75, 5], f32), 1, f32), {})"
    },
    "aten.add.Tensor": {
        "count": 160,
        "inputs": "((T([5, 64, 13, 13], f32), T([5, 64, 13, 13], f32)), {})"
    },
    "aten.add_.Tensor": {
        "count": 31,
        "inputs": "((T([64, 1, 3, 3], f32), T([64, 1, 3, 3], f32)), {})"
    },
    "aten.addmm.default": {
        "count": 32,
        "inputs": "((T([5], f32), T([75, 64], f32), T([64, 5], f32, stride=(1, 64))), {})"
    },
    "aten.clone.default": {
        "count": 480,
        "inputs": "((T([0], u8),), {})"
    },
    "aten.convolution.default": {
        "count": 160,
        "inputs": "((T([5, 64, 3, 3], f32), T([64, 64, 3, 3], f32), None, [1, 1], [0, 0], [1, 1], True, [0, 0], 1), {})"
    },
    "aten.convolution_backward.default": {
        "count": 32,
        "inputs": "((T([75, 64, 26, 26], f32), T([75, 1, 28, 28], f32), T([64, 1, 3, 3], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
    },
    "aten.cudnn_batch_norm.default": {
        "count": 32,
        "inputs": "((T([75, 64, 3, 3], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 1.0, 1e-05), {})"
    },
    "aten.cudnn_batch_norm_backward.default": {
        "count": 32,
        "inputs": "((T([75, 64, 26, 26], f32), T([75, 64, 26, 26], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
    },
    "aten.div.Scalar": {
        "count": 320,
        "inputs": "((T([1, 64, 1, 1], f32), 45), {})"
    },
    "aten.div_.Scalar": {
        "count": 160,
        "inputs": "((T([5, 64, 3, 3], f32), -45), {})"
    },
    "aten.exp.default": {
        "count": 320,
        "inputs": "((T([5, 5], f32),), {})"
    },
    "aten.gather.default": {
        "count": 160,
        "inputs": "((T([5, 64, 9], f32), -1, T([5, 64, 1], i64)), {})"
    },
    "aten.max_pool2d_with_indices.default": {
        "count": 32,
        "inputs": "((T([75, 64, 3, 3], f32), [2, 2], [2, 2]), {})"
    },
    "aten.max_pool2d_with_indices_backward.default": {
        "count": 32,
        "inputs": "((T([75, 64, 13, 13], f32), T([75, 64, 26, 26], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([75, 64, 13, 13], i64)), {})"
    },
    "aten.mm.default": {
        "count": 320,
        "inputs": "((T([5, 64], f32), T([64, 5], f32, stride=(1, 64))), {})"
    },
    "aten.mul.Scalar": {
        "count": 320,
        "inputs": "((T([5, 64, 3, 3], f32), 45), {})"
    },
    "aten.mul.Tensor": {
        "count": 160,
        "inputs": "((T([5, 1], f32), T([5, 5], f32)), {})"
    },
    "aten.mul_.Scalar": {
        "count": 160,
        "inputs": "((T([1, 64, 1, 1], f32), 0.06666666666666667), {})"
    },
    "aten.neg.default": {
        "count": 160,
        "inputs": "((T([5, 1], f32),), {})"
    },
    "aten.nll_loss_backward.default": {
        "count": 32,
        "inputs": "((T([], f32), T([75, 5], f32), T([75], i64), None, 1, -100, T([], f32)), {})"
    },
    "aten.nll_loss_forward.default": {
        "count": 32,
        "inputs": "((T([75, 5], f32), T([75], i64), None, 1, -100), {})"
    },
    "aten.pow.Tensor_Scalar": {
        "count": 480,
        "inputs": "((T([1, 64, 1, 1], f32), 3), {})"
    },
    "aten.relu_.default": {
        "count": 32,
        "inputs": "((T([75, 64, 3, 3], f32),), {})"
    },
    "aten.sub.Tensor": {
        "count": 160,
        "inputs": "((T([5, 5], f32), T([5, 1], f32)), {})"
    },
    "aten.sub_.Tensor": {
        "count": 320,
        "inputs": "((T([5, 64, 3, 3], f32), T([5, 64, 3, 3], f32)), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 320,
        "inputs": "((T([5, 5], f32), [1], True), {})"
    },
    "aten.threshold_backward.default": {
        "count": 32,
        "inputs": "((T([75, 64, 26, 26], f32), T([75, 64, 26, 26], f32), 0), {})"
    }
}