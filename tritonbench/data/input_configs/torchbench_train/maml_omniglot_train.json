{
    "aten._foreach_sqrt.default": [
        {
            "count": 1,
            "inputs": "(([T([64, 1, 3, 3], f32), T([64], f32), T([64], f32), T([64], f32), T([64, 64, 3, 3], f32), T([64], f32), T([64], f32), T([64], f32), T([64, 64, 3, 3], f32), T([64], f32), T([64], f32), T([64], f32), T([5, 64], f32), T([5], f32)],), {})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 160,
            "inputs": "((T([5, 5], f32), 1, False), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 5], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 320,
            "inputs": "((T([5, 5], f32), T([5, 5], f32), 1, f32), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 5], f32), T([75, 5], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 320,
            "inputs": "((T([64, 1, 3, 3], f32), T([64, 1, 3, 3], f32)), {})"
        },
        {
            "count": 3360,
            "inputs": "((T([64], f32), T([64], f32)), {})"
        },
        {
            "count": 640,
            "inputs": "((T([64, 64, 3, 3], f32), T([64, 64, 3, 3], f32)), {})"
        },
        {
            "count": 480,
            "inputs": "((T([5, 64], f32), T([5, 64], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5], f32), T([5], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 26, 26], f32), T([5, 64, 26, 26], f32, stride=(0, 1, 0, 0))), {})"
        },
        {
            "count": 480,
            "inputs": "((T([5, 64, 26, 26], f32), T([5, 64, 26, 26], f32)), {})"
        },
        {
            "count": 640,
            "inputs": "((T([5, 64, 11, 11], f32), T([5, 64, 11, 11], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 11, 11], f32), T([5, 64, 11, 11], f32, stride=(0, 1, 0, 0))), {})"
        },
        {
            "count": 320,
            "inputs": "((T([64, 64, 3, 3], f32), T([64, 64, 3, 3], f32, stride=(9, 576, 3, 1))), {})"
        },
        {
            "count": 640,
            "inputs": "((T([5, 64, 3, 3], f32), T([5, 64, 3, 3], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 3, 3], f32), T([5, 64, 3, 3], f32, stride=(0, 1, 0, 0))), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 5], f32, stride=(0, 1)), T([5, 5], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 5], f32), T([5, 5], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([64, 5], f32, stride=(1, 64)), T([64, 5], f32, stride=(1, 64))), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 5, 5], f32), T([5, 64, 5, 5], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 13, 13], f32), T([5, 64, 13, 13], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 576,
            "inputs": "((T([], i64), 1), {})"
        },
        {
            "count": 480,
            "inputs": "((T([1, 64, 1, 1], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 800,
            "inputs": "((T([5, 64, 26, 26], f32), T([5, 64, 26, 26], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 26, 26], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 26, 26], f32), T([5, 64, 26, 26], f32, stride=(0, 1, 0, 0))), {})"
        },
        {
            "count": 800,
            "inputs": "((T([5, 64, 11, 11], f32), T([5, 64, 11, 11], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 11, 11], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 11, 11], f32), T([5, 64, 11, 11], f32, stride=(0, 1, 0, 0))), {})"
        },
        {
            "count": 800,
            "inputs": "((T([5, 64, 3, 3], f32), T([5, 64, 3, 3], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 3, 3], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 3, 3], f32), T([5, 64, 3, 3], f32, stride=(0, 1, 0, 0))), {})"
        },
        {
            "count": 31,
            "inputs": "((T([5], f32), T([5], f32)), {})"
        },
        {
            "count": 31,
            "inputs": "((T([5, 64], f32), T([5, 64], f32)), {})"
        },
        {
            "count": 279,
            "inputs": "((T([64], f32), T([64], f32)), {})"
        },
        {
            "count": 62,
            "inputs": "((T([64, 64, 3, 3], f32), T([64, 64, 3, 3], f32)), {})"
        },
        {
            "count": 31,
            "inputs": "((T([64, 1, 3, 3], f32), T([64, 1, 3, 3], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 160,
            "inputs": "((T([5], f32), T([5, 64], f32), T([64, 5], f32, stride=(1, 64))), {})"
        },
        {
            "count": 32,
            "inputs": "((T([5], f32), T([75, 64], f32), T([64, 5], f32, stride=(1, 64))), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 32,
            "inputs": "((T([64, 1, 3, 3], f32),), {})"
        },
        {
            "count": 480,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 64,
            "inputs": "((T([64, 64, 3, 3], f32),), {})"
        },
        {
            "count": 32,
            "inputs": "((T([5, 64], f32),), {})"
        },
        {
            "count": 32,
            "inputs": "((T([5], f32),), {})"
        },
        {
            "count": 96,
            "inputs": "((T([], i64),), {})"
        },
        {
            "count": 480,
            "inputs": "((T([0], u8),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 160,
            "inputs": "((T([5, 1, 28, 28], f32), T([64, 1, 3, 3], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 13, 13], f32), T([64, 64, 3, 3], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 5, 5], f32), T([64, 64, 3, 3], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 1, 28, 28], f32), T([64, 1, 3, 3], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 13, 13], f32), T([64, 64, 3, 3], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 5, 5], f32), T([64, 64, 3, 3], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 1, 28, 28], f32), T([64, 1, 3, 3], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 26, 26], f32), T([64, 1, 3, 3], f32), None, [1, 1], [0, 0], [1, 1], True, [0, 0], 1), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 13, 13], f32), T([64, 64, 3, 3], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 160,
            "inputs": "((T([64, 5, 13, 13], f32, stride=(169, 10816, 13, 1)), T([64, 5, 11, 11], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 11, 11], f32), T([64, 64, 3, 3], f32), None, [1, 1], [0, 0], [1, 1], True, [0, 0], 1), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 5, 5], f32), T([64, 64, 3, 3], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 160,
            "inputs": "((T([64, 5, 5, 5], f32, stride=(25, 1600, 5, 1)), T([64, 5, 3, 3], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 3, 3], f32), T([64, 64, 3, 3], f32), None, [1, 1], [0, 0], [1, 1], True, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 320,
            "inputs": "((T([5, 64, 3, 3], f32), T([5, 64, 5, 5], f32), T([64, 64, 3, 3], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 11, 11], f32), T([5, 64, 13, 13], f32), T([64, 64, 3, 3], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 26, 26], f32), T([5, 1, 28, 28], f32), T([64, 1, 3, 3], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 3, 3], f32), T([75, 64, 5, 5], f32), T([64, 64, 3, 3], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 11, 11], f32), T([75, 64, 13, 13], f32), T([64, 64, 3, 3], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 26, 26], f32), T([75, 1, 28, 28], f32), T([64, 1, 3, 3], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 160,
            "inputs": "((T([5, 64, 26, 26], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 1.0, 1e-05), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 11, 11], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 1.0, 1e-05), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 3, 3], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 1.0, 1e-05), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 26, 26], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 1.0, 1e-05), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 11, 11], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 1.0, 1e-05), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 3, 3], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 1.0, 1e-05), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 320,
            "inputs": "((T([5, 64, 3, 3], f32), T([5, 64, 3, 3], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 11, 11], f32), T([5, 64, 11, 11], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 26, 26], f32), T([5, 64, 26, 26], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 3, 3], f32), T([75, 64, 3, 3], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 11, 11], f32), T([75, 64, 11, 11], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 26, 26], f32), T([75, 64, 26, 26], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 320,
            "inputs": "((T([1, 64, 1, 1], f32), 3380), {})"
        },
        {
            "count": 320,
            "inputs": "((T([1, 64, 1, 1], f32), 605), {})"
        },
        {
            "count": 320,
            "inputs": "((T([1, 64, 1, 1], f32), 45), {})"
        }
    ],
    "aten.div_.Scalar": [
        {
            "count": 640,
            "inputs": "((T([1, 64, 1, 1], f32), 3380), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 26, 26], f32), 3380), {})"
        },
        {
            "count": 160,
            "inputs": "((T([1, 64, 1, 1], f32), -3380), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 26, 26], f32), -3380), {})"
        },
        {
            "count": 640,
            "inputs": "((T([1, 64, 1, 1], f32), 605), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 11, 11], f32), 605), {})"
        },
        {
            "count": 160,
            "inputs": "((T([1, 64, 1, 1], f32), -605), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 11, 11], f32), -605), {})"
        },
        {
            "count": 640,
            "inputs": "((T([1, 64, 1, 1], f32), 45), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 3, 3], f32), 45), {})"
        },
        {
            "count": 160,
            "inputs": "((T([1, 64, 1, 1], f32), -45), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 3, 3], f32), -45), {})"
        }
    ],
    "aten.exp.default": [
        {
            "count": 320,
            "inputs": "((T([5, 5], f32),), {})"
        }
    ],
    "aten.gather.default": [
        {
            "count": 160,
            "inputs": "((T([5, 64, 676], f32), -1, T([5, 64, 169], i64)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 121], f32), -1, T([5, 64, 25], i64)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 9], f32), -1, T([5, 64, 1], i64)), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 160,
            "inputs": "((T([5, 64, 26, 26], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 11, 11], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 3, 3], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 26, 26], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 11, 11], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 3, 3], f32), [2, 2], [2, 2]), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 320,
            "inputs": "((T([5, 64, 1, 1], f32), T([5, 64, 3, 3], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([5, 64, 1, 1], i64)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 5, 5], f32), T([5, 64, 11, 11], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([5, 64, 5, 5], i64)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 13, 13], f32), T([5, 64, 26, 26], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([5, 64, 13, 13], i64)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 1, 1], f32), T([75, 64, 3, 3], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([75, 64, 1, 1], i64)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 5, 5], f32), T([75, 64, 11, 11], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([75, 64, 5, 5], i64)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 13, 13], f32), T([75, 64, 26, 26], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([75, 64, 13, 13], i64)), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 480,
            "inputs": "((T([5, 5], f32), T([5, 64], f32)), {})"
        },
        {
            "count": 480,
            "inputs": "((T([5, 5], f32, stride=(1, 5)), T([5, 64], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 5], f32), T([5, 64], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([5, 75], f32, stride=(1, 5)), T([75, 64], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64], f32), T([64, 5], f32, stride=(1, 64))), {})"
        }
    ],
    "aten.mul.Scalar": [
        {
            "count": 320,
            "inputs": "((T([5, 64, 26, 26], f32), 3380), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 11, 11], f32), 605), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 3, 3], f32), 45), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 320,
            "inputs": "((T([64, 1, 3, 3], f32), -0.1), {})"
        },
        {
            "count": 2880,
            "inputs": "((T([64], f32), -0.1), {})"
        },
        {
            "count": 640,
            "inputs": "((T([64, 64, 3, 3], f32), -0.1), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64], f32), -0.1), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5], f32), -0.1), {})"
        },
        {
            "count": 1440,
            "inputs": "((T([5, 64, 26, 26], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 1280,
            "inputs": "((T([5, 64, 26, 26], f32), T([5, 64, 26, 26], f32)), {})"
        },
        {
            "count": 2880,
            "inputs": "((T([1, 64, 1, 1], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 480,
            "inputs": "((T([1, 64, 1, 1], f32), T([5, 64, 26, 26], f32)), {})"
        },
        {
            "count": 480,
            "inputs": "((T([5, 64, 26, 26], f32, stride=(0, 1, 0, 0)), T([5, 64, 26, 26], f32)), {})"
        },
        {
            "count": 480,
            "inputs": "((T([], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 26, 26], f32, stride=(0, 1, 0, 0)), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 1440,
            "inputs": "((T([5, 64, 11, 11], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 1280,
            "inputs": "((T([5, 64, 11, 11], f32), T([5, 64, 11, 11], f32)), {})"
        },
        {
            "count": 480,
            "inputs": "((T([1, 64, 1, 1], f32), T([5, 64, 11, 11], f32)), {})"
        },
        {
            "count": 480,
            "inputs": "((T([5, 64, 11, 11], f32, stride=(0, 1, 0, 0)), T([5, 64, 11, 11], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 11, 11], f32, stride=(0, 1, 0, 0)), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 1440,
            "inputs": "((T([5, 64, 3, 3], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 1280,
            "inputs": "((T([5, 64, 3, 3], f32), T([5, 64, 3, 3], f32)), {})"
        },
        {
            "count": 480,
            "inputs": "((T([1, 64, 1, 1], f32), T([5, 64, 3, 3], f32)), {})"
        },
        {
            "count": 480,
            "inputs": "((T([5, 64, 3, 3], f32, stride=(0, 1, 0, 0)), T([5, 64, 3, 3], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 3, 3], f32, stride=(0, 1, 0, 0)), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 5], f32), T([5, 5], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 1], f32), T([5, 5], f32)), {})"
        }
    ],
    "aten.mul_.Scalar": [
        {
            "count": 160,
            "inputs": "((T([1, 64, 1, 1], f32), 0.0008875739644970414), {})"
        },
        {
            "count": 160,
            "inputs": "((T([1, 64, 1, 1], f32), 0.0049586776859504135), {})"
        },
        {
            "count": 160,
            "inputs": "((T([1, 64, 1, 1], f32), 0.06666666666666667), {})"
        }
    ],
    "aten.neg.default": [
        {
            "count": 160,
            "inputs": "((T([5, 1], f32),), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 160,
            "inputs": "((T([], f32), T([5, 5], f32), T([5], i64), None, 1, -100, T([], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([], f32), T([75, 5], f32), T([75], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 160,
            "inputs": "((T([5, 5], f32), T([5], i64), None, 1, -100), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 5], f32), T([75], i64), None, 1, -100), {})"
        }
    ],
    "aten.pow.Tensor_Scalar": [
        {
            "count": 480,
            "inputs": "((T([1, 64, 1, 1], f32), 2), {})"
        },
        {
            "count": 480,
            "inputs": "((T([1, 64, 1, 1], f32), 3), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 160,
            "inputs": "((T([5, 64, 26, 26], f32),), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 11, 11], f32),), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 3, 3], f32),), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 26, 26], f32),), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 11, 11], f32),), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 3, 3], f32),), {})"
        }
    ],
    "aten.sub.Tensor": [
        {
            "count": 160,
            "inputs": "((T([5, 64, 26, 26], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([1, 64, 1, 1], f32), T([5, 64, 26, 26], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 11, 11], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([1, 64, 1, 1], f32), T([5, 64, 11, 11], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 3, 3], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([1, 64, 1, 1], f32), T([5, 64, 3, 3], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 5], f32), T([5, 1], f32)), {})"
        }
    ],
    "aten.sub_.Tensor": [
        {
            "count": 480,
            "inputs": "((T([1, 64, 1, 1], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 26, 26], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 26, 26], f32), T([5, 64, 26, 26], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 11, 11], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 11, 11], f32), T([5, 64, 11, 11], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 3, 3], f32), T([1, 64, 1, 1], f32)), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 64, 3, 3], f32), T([5, 64, 3, 3], f32)), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 320,
            "inputs": "((T([5, 5], f32), [0], True), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 5], f32), [0], True), {})"
        },
        {
            "count": 1600,
            "inputs": "((T([5, 64, 26, 26], f32), [0], True), {})"
        },
        {
            "count": 1600,
            "inputs": "((T([1, 64, 26, 26], f32), [3], True), {})"
        },
        {
            "count": 1600,
            "inputs": "((T([1, 64, 26, 1], f32), [2], True), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 26, 26], f32), [0]), {})"
        },
        {
            "count": 160,
            "inputs": "((T([64, 26, 26], f32), [2]), {})"
        },
        {
            "count": 160,
            "inputs": "((T([64, 26], f32), [1]), {})"
        },
        {
            "count": 1600,
            "inputs": "((T([5, 64, 11, 11], f32), [0], True), {})"
        },
        {
            "count": 1600,
            "inputs": "((T([1, 64, 11, 11], f32), [3], True), {})"
        },
        {
            "count": 1600,
            "inputs": "((T([1, 64, 11, 1], f32), [2], True), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 11, 11], f32), [0]), {})"
        },
        {
            "count": 160,
            "inputs": "((T([64, 11, 11], f32), [2]), {})"
        },
        {
            "count": 160,
            "inputs": "((T([64, 11], f32), [1]), {})"
        },
        {
            "count": 1600,
            "inputs": "((T([5, 64, 3, 3], f32), [0], True), {})"
        },
        {
            "count": 1600,
            "inputs": "((T([1, 64, 3, 3], f32), [3], True), {})"
        },
        {
            "count": 1600,
            "inputs": "((T([1, 64, 3, 1], f32), [2], True), {})"
        },
        {
            "count": 160,
            "inputs": "((T([5, 64, 3, 3], f32), [0]), {})"
        },
        {
            "count": 160,
            "inputs": "((T([64, 3, 3], f32), [2]), {})"
        },
        {
            "count": 160,
            "inputs": "((T([64, 3], f32), [1]), {})"
        },
        {
            "count": 320,
            "inputs": "((T([5, 5], f32), [1], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 480,
            "inputs": "((T([5, 64, 3, 3], f32), T([5, 64, 3, 3], f32), 0), {})"
        },
        {
            "count": 480,
            "inputs": "((T([5, 64, 11, 11], f32), T([5, 64, 11, 11], f32), 0), {})"
        },
        {
            "count": 480,
            "inputs": "((T([5, 64, 26, 26], f32), T([5, 64, 26, 26], f32), 0), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 3, 3], f32), T([75, 64, 3, 3], f32), 0), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 11, 11], f32), T([75, 64, 11, 11], f32), 0), {})"
        },
        {
            "count": 32,
            "inputs": "((T([75, 64, 26, 26], f32), T([75, 64, 26, 26], f32), 0), {})"
        }
    ]
}