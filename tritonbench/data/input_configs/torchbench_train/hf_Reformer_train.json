{
    "aten._foreach_sqrt.default": [
        {
            "count": 1,
            "inputs": "(([T([320, 256], f32), T([64, 1, 64], f32), T([1, 64, 192], f32), T([256], f32), T([256], f32), T([768, 256], f32), T([768, 256], f32), T([768, 256], f32), T([256, 768], f32), T([256], f32), T([256], f32), T([512, 256], f32), T([512], f32), T([256, 512], f32), T([256], f32), T([256], f32), T([256], f32), T([768, 256], f32), T([768, 256], f32), T([256, 768], f32), T([256], f32), T([256], f32), T([512, 256], f32), T([512], f32), T([256, 512], f32), T([256], f32), T([256], f32), T([256], f32), T([768, 256], f32), T([768, 256], f32), T([768, 256], f32), T([256, 768], f32), T([256], f32), T([256], f32), T([512, 256], f32), T([512], f32), T([256, 512], f32), T([256], f32), T([256], f32), T([256], f32), T([768, 256], f32), T([768, 256], f32), T([256, 768], f32), T([256], f32), T([256], f32), T([512, 256], f32), T([512], f32), T([256, 512], f32), T([256], f32), T([256], f32), T([256], f32), T([768, 256], f32), T([768, 256], f32), T([768, 256], f32), T([256, 768], f32), T([256], f32), T([256], f32), T([512, 256], f32), T([512], f32), T([256, 512], f32), T([256], f32), T([256], f32), T([256], f32), T([768, 256], f32), T([768, 256], f32), T([256, 768], f32), T([256], f32), T([256], f32), T([512, 256], f32), T([512], f32), T([256, 512], f32), T([256], f32), T([512], f32), T([512], f32), T([320], f32), T([320, 512], f32)],), {})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([32768, 320], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([32768, 320], f32), T([32768, 320], f32), 1, f32), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 30,
            "inputs": "((T([32768, 768], f32), [8, 4096, 768]), {})"
        },
        {
            "count": 9,
            "inputs": "((T([8, 12, 64, 64, 64], f32), [6144, 64, 64]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([6144, 64, 128], f32), [8, 12, 64, 64, 128]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([6144, 64, 64], f32), [8, 12, 64, 64, 64]), {})"
        },
        {
            "count": 27,
            "inputs": "((T([8, 4096, 12, 64], f32), [8, 4096, 768]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32768, 256], f32), [8, 4096, 256]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 64], f32), [8, 12, 4096, 64]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 30,
            "inputs": "((T([8, 4096, 256], f32), T([8, 4096, 256], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([8, 4096, 256], f32, stride=(2097152, 512, 1)), T([8, 4096, 256], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 1, 4096], i64), T([8, 12, 1, 1], i64, stride=(0, 0, 1, 1))), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 4096], i64), T([8, 12, 4096], i64)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 1], f32), 1e-06), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 1], f32), T([8, 12, 64, 64, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 128], f32), T([8, 12, 64, 64, 128], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 64], f32, stride=(6291456, 524288, 8192, 64, 1)), T([8, 12, 64, 64, 64], f32)), {})"
        },
        {
            "count": 9,
            "inputs": "((T([8, 12, 64, 64, 64], f32), T([8, 12, 64, 64, 64], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 64], f32, stride=(6291456, 524288, 8192, 1, 128)), T([8, 12, 64, 64, 64], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 64], f32, stride=(3145728, 262144, 4096, 1, 64)), T([8, 12, 64, 64, 64], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 64], f32), T([8, 12, 64, 64, 64], f32, stride=(3145728, 262144, 4096, 1, 64))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 4096, 256], f32, stride=(2097152, 512, 1)), T([8, 4096, 256], f32, stride=(2097152, 512, 1))), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 12,
            "inputs": "((T([512], f32), T([32768, 256], f32), T([256, 512], f32, stride=(1, 256))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([256], f32), T([32768, 512], f32), T([512, 256], f32, stride=(1, 512))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320], f32), T([32768, 512], f32), T([512, 320], f32, stride=(1, 512))), {})"
        }
    ],
    "aten.any.default": [
        {
            "count": 1,
            "inputs": "((T([8, 2], b8),), {})"
        }
    ],
    "aten.argmax.default": [
        {
            "count": 3,
            "inputs": "((T([8, 12, 1, 4096, 128], f32), -1), {})"
        }
    ],
    "aten.bernoulli_.float": [
        {
            "count": 1,
            "inputs": "((T([8, 64, 1, 1], f32), 0.95), {})"
        }
    ],
    "aten.bmm.default": [
        {
            "count": 18,
            "inputs": "((T([6144, 64, 64], f32), T([6144, 64, 128], f32, stride=(8192, 1, 64))), {})"
        },
        {
            "count": 18,
            "inputs": "((T([6144, 64, 128], f32), T([6144, 128, 64], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([12, 32768, 64], f32, stride=(64, 768, 1)), T([12, 64, 64], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([6144, 128, 64], f32, stride=(8192, 1, 128)), T([6144, 64, 64], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([6144, 64, 64], f32, stride=(4096, 1, 64)), T([6144, 64, 128], f32)), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 1,
            "inputs": "(([T([8, 64, 64, 64], f32, stride=(0, 64, 0, 1)), T([8, 64, 64, 192], f32, stride=(0, 0, 192, 1))], -1), {})"
        },
        {
            "count": 3,
            "inputs": "(([T([8, 4096, 256], f32), T([8, 4096, 256], f32)], -1), {})"
        },
        {
            "count": 12,
            "inputs": "(([T([8, 12, 1, 64, 64], f32, stride=(3145728, 64, 49152, 768, 1)), T([8, 12, 63, 64, 64], f32, stride=(3145728, 64, 49152, 768, 1))], 2), {})"
        },
        {
            "count": 12,
            "inputs": "(([T([8, 12, 64, 64, 64], f32), T([8, 12, 64, 64, 64], f32, stride=(3145728, 64, 49152, 768, 1))], 3), {})"
        },
        {
            "count": 12,
            "inputs": "(([T([8, 12, 1, 64], i64, stride=(49152, 4096, 64, 1)), T([8, 12, 63, 64], i64, stride=(49152, 4096, 64, 1))], 2), {})"
        },
        {
            "count": 12,
            "inputs": "(([T([8, 12, 64, 64], i64), T([8, 12, 64, 64], i64)], 3), {})"
        },
        {
            "count": 3,
            "inputs": "(([T([8, 12, 1, 4096, 64], f32, stride=(262144, 2097152, 262144, 64, 1)), T([8, 12, 1, 4096, 64], f32, stride=(262144, 2097152, 262144, 64, 1))], -1), {})"
        },
        {
            "count": 12,
            "inputs": "(([T([8, 12, 1, 64, 64], f32, stride=(3145728, 262144, 4096, 64, 1)), T([8, 12, 63, 64, 64], f32, stride=(3145728, 262144, 4096, 64, 1))], 2), {})"
        },
        {
            "count": 12,
            "inputs": "(([T([8, 12, 64, 64, 64], f32), T([8, 12, 64, 64, 64], f32)], 3), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 64], f32, stride=(49152, 4096, 64, 1, 0)), 64), {})"
        }
    ],
    "aten.div.Tensor": [
        {
            "count": 6,
            "inputs": "((T([8, 12, 4096, 64], f32, stride=(3145728, 64, 768, 1)), 8.0), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 64], f32), 8.0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 64], f32, stride=(3145728, 262144, 4096, 1, 64)), 8.0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 4096, 64], f32), 8.0), {})"
        }
    ],
    "aten.div_.Scalar": [
        {
            "count": 1,
            "inputs": "((T([8, 64, 1, 1], f32), 0.95), {})"
        }
    ],
    "aten.embedding.default": [
        {
            "count": 1,
            "inputs": "((T([320, 256], f32), T([8, 4096], i64)), {})"
        }
    ],
    "aten.embedding_dense_backward.default": [
        {
            "count": 1,
            "inputs": "((T([8, 4096, 256], f32), T([8, 4096], i64), 320, -1, False), {})"
        }
    ],
    "aten.eq.Scalar": [
        {
            "count": 1,
            "inputs": "((T([8, 2], i64), 0), {})"
        }
    ],
    "aten.exp.default": [
        {
            "count": 18,
            "inputs": "((T([8, 12, 64, 64, 128], f32),), {})"
        }
    ],
    "aten.gather.default": [
        {
            "count": 18,
            "inputs": "((T([8, 12, 4096, 64], f32), 2, T([8, 12, 4096, 64], i64, stride=(49152, 4096, 1, 0))), {})"
        },
        {
            "count": 9,
            "inputs": "((T([8, 12, 4096], f32), 2, T([8, 12, 4096], i64)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 4096, 64], f32, stride=(3145728, 64, 768, 1)), 2, T([8, 12, 4096, 64], i64, stride=(49152, 4096, 1, 0))), {})"
        }
    ],
    "aten.index.Tensor": [
        {
            "count": 1,
            "inputs": "((T([8, 4096], i64), [None, T([2], i64)]), {})"
        }
    ],
    "aten.logsumexp.default": [
        {
            "count": 12,
            "inputs": "((T([8, 12, 64, 64, 128], f32), [-1], True), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 64], f32), [-1], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 30,
            "inputs": "((T([32768, 256], f32), T([256, 768], f32, stride=(1, 256))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32768, 768], f32), T([768, 256], f32, stride=(1, 768))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32768, 320], f32), T([320, 512], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320, 32768], f32, stride=(1, 320)), T([32768, 512], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32768, 256], f32), T([256, 512], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([256, 32768], f32, stride=(1, 256)), T([32768, 512], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32768, 512], f32), T([512, 256], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 32768], f32, stride=(1, 512)), T([32768, 256], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([256, 32768], f32, stride=(1, 256)), T([32768, 768], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32768, 256], f32), T([256, 768], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([768, 32768], f32, stride=(1, 768)), T([32768, 256], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([32768, 768], f32), T([768, 256], f32)), {})"
        }
    ],
    "aten.mul.Scalar": [
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 1], f32), -0.5), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 64], f32), 2.0), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 2,
            "inputs": "((T([8, 64, 64, 256], f32, stride=(1048576, 256, 16384, 1)), T([8, 64, 1, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1], i64), 128), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 4096], i64), 4096), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 64], f32), T([8, 12, 64, 64, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 128], f32), T([8, 12, 64, 64, 128], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 1], f32), T([8, 12, 64, 64, 128], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 64], f32, stride=(3145728, 262144, 4096, 1, 64)), T([8, 12, 64, 64, 64], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 64], f32, stride=(3145728, 262144, 4096, 1, 64)), T([8, 12, 64, 64, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 1], f32), T([8, 12, 64, 64, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 64], f32), T([8, 12, 64, 64, 64], f32)), {})"
        }
    ],
    "aten.native_dropout.default": [
        {
            "count": 25,
            "inputs": "((T([8, 4096, 256], f32), 0.05, True), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 128], f32), 0.05, True), {})"
        },
        {
            "count": 13,
            "inputs": "((T([8, 4096, 512], f32), 0.05, True), {})"
        }
    ],
    "aten.native_dropout_backward.default": [
        {
            "count": 7,
            "inputs": "((T([8, 4096, 512], f32), T([8, 4096, 512], b8), 1.0526315789473684), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 4096, 256], f32, stride=(2097152, 512, 1)), T([8, 4096, 256], b8), 1.0526315789473684), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8, 4096, 256], f32), T([8, 4096, 256], b8), 1.0526315789473684), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 128], f32), T([8, 12, 64, 64, 128], b8), 1.0526315789473684), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 1,
            "inputs": "((T([8, 4096, 256], f32, stride=(2097152, 512, 1)), [256], T([256], f32), T([256], f32), 1e-12), {})"
        },
        {
            "count": 23,
            "inputs": "((T([8, 4096, 256], f32), [256], T([256], f32), T([256], f32), 1e-12), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 4096, 512], f32), [512], T([512], f32), T([512], f32), 1e-12), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 1,
            "inputs": "((T([8, 4096, 512], f32), T([8, 4096, 512], f32), [512], T([8, 4096, 1], f32), T([8, 4096, 1], f32), T([512], f32), T([512], f32), [True, True, True]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8, 4096, 256], f32), T([8, 4096, 256], f32), [256], T([8, 4096, 1], f32), T([8, 4096, 1], f32), T([256], f32), T([256], f32), [True, True, True]), {})"
        }
    ],
    "aten.ne.Tensor": [
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 1], i64), T([8, 12, 64, 1, 128], i64)), {})"
        }
    ],
    "aten.neg.default": [
        {
            "count": 3,
            "inputs": "((T([8, 12, 1, 4096, 64], f32, stride=(262144, 2097152, 262144, 64, 1)),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 128], f32),), {})"
        }
    ],
    "aten.new_empty.default": [
        {
            "count": 1,
            "inputs": "((T([8, 64, 64, 256], f32, stride=(1048576, 256, 16384, 1)), [8, 64, 1, 1]), {})"
        }
    ],
    "aten.new_zeros.default": [
        {
            "count": 6,
            "inputs": "((T([8, 12, 4096, 64], f32), [8, 12, 4096, 64]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([32768, 320], f32), T([32768], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([32768, 320], f32), T([32768], i64), None, 1, -100), {})"
        }
    ],
    "aten.pow.Tensor_Scalar": [
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 64], f32), 2), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 1], f32), 3), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 64], f32), 1.0), {})"
        }
    ],
    "aten.relu.default": [
        {
            "count": 12,
            "inputs": "((T([8, 4096, 512], f32),), {})"
        }
    ],
    "aten.remainder.Scalar": [
        {
            "count": 6,
            "inputs": "((T([8, 12, 4096], i64, stride=(0, 0, 1)), 4096), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 4096], i64), 4096), {})"
        }
    ],
    "aten.repeat.default": [
        {
            "count": 6,
            "inputs": "((T([4096], i64), [8, 12, 1]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8, 12, 4096, 64], f32, stride=(3145728, 64, 768, 1)), [1, 1, 1, 1]), {})"
        }
    ],
    "aten.rsqrt.default": [
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 1], f32),), {})"
        }
    ],
    "aten.scatter_.src": [
        {
            "count": 6,
            "inputs": "((T([8, 12, 4096], i64), -1, T([8, 12, 4096], i64), T([8, 12, 4096], i64, stride=(0, 0, 1))), {})"
        }
    ],
    "aten.scatter_add.default": [
        {
            "count": 6,
            "inputs": "((T([8, 12, 4096, 64], f32), 2, T([8, 12, 4096, 64], i64, stride=(49152, 4096, 1, 0)), T([8, 12, 4096, 64], f32)), {})"
        }
    ],
    "aten.slice_backward.default": [
        {
            "count": 6,
            "inputs": "((T([8, 12, 63, 64, 64], f32, stride=(6291456, 524288, 8192, 64, 1)), [8, 12, 64, 64, 64], 2, 0, -1, 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 1, 64, 64], f32, stride=(6291456, 524288, 8192, 64, 1)), [8, 12, 64, 64, 64], 2, -1, 9223372036854775807, 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 63, 64, 64], f32, stride=(6291456, 524288, 8192, 1, 128)), [8, 12, 64, 64, 64], 2, 0, -1, 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 1, 64, 64], f32, stride=(6291456, 524288, 8192, 1, 128)), [8, 12, 64, 64, 64], 2, -1, 9223372036854775807, 1), {})"
        }
    ],
    "aten.sort.default": [
        {
            "count": 6,
            "inputs": "((T([8, 12, 4096], i64),), {})"
        }
    ],
    "aten.split.Tensor": [
        {
            "count": 2,
            "inputs": "((T([8, 4096, 512], f32), 256, -1), {})"
        }
    ],
    "aten.sub.Tensor": [
        {
            "count": 18,
            "inputs": "((T([8, 12, 64, 64, 128], f32), T([8, 12, 64, 64, 1], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8, 4096, 256], f32), T([8, 4096, 256], f32)), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([32768, 320], f32), [0], True), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32768, 256], f32), [0], True), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32768, 512], f32), [0], True), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 12, 64, 64, 128], f32), [4], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([8, 12, 64, 64, 64], f32, stride=(3145728, 262144, 4096, 1, 64)), [4], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 64, 64, 192], f32, stride=(1048576, 16384, 256, 1)), [0, 1], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 64, 64, 64], f32, stride=(1048576, 16384, 256, 1)), [0, 2], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 6,
            "inputs": "((T([8, 4096, 512], f32), T([8, 4096, 512], f32), 0), {})"
        }
    ],
    "aten.where.self": [
        {
            "count": 9,
            "inputs": "((T([8, 12, 64, 64, 128], b8), T([8, 12, 64, 64, 128], f32), T([], f32)), {})"
        }
    ]
}