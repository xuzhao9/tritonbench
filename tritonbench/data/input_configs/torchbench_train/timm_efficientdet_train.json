{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([32, 3, 3, 3], f32), T([32, 1, 3, 3], f32), T([8, 32, 1, 1], f32), T([32, 8, 1, 1], f32), T([16, 32, 1, 1], f32), T([16, 1, 3, 3], f32), T([4, 16, 1, 1], f32), T([16, 4, 1, 1], f32), T([16, 16, 1, 1], f32), T([96, 16, 1, 1], f32), T([96, 1, 3, 3], f32), T([4, 96, 1, 1], f32), T([96, 4, 1, 1], f32), T([24, 96, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 3, 3], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([24, 144, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 3, 3], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([24, 144, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 5, 5], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([40, 144, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 5, 5], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([40, 240, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 5, 5], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([40, 240, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 3, 3], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([80, 240, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 5, 5], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([112, 480, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([192, 672, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 3, 3], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([320, 1152, 1, 1], f32), T([1920, 320, 1, 1], f32), T([1920, 1, 3, 3], f32), T([80, 1920, 1, 1], f32), T([1920, 80, 1, 1], f32), T([320, 1920, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 112, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 40, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 112, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([810, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([36, 88, 1, 1], f32)], [T([32, 3, 3, 3], f32), T([32, 1, 3, 3], f32), T([8, 32, 1, 1], f32), T([32, 8, 1, 1], f32), T([16, 32, 1, 1], f32), T([16, 1, 3, 3], f32), T([4, 16, 1, 1], f32), T([16, 4, 1, 1], f32), T([16, 16, 1, 1], f32), T([96, 16, 1, 1], f32), T([96, 1, 3, 3], f32), T([4, 96, 1, 1], f32), T([96, 4, 1, 1], f32), T([24, 96, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 3, 3], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([24, 144, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 3, 3], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([24, 144, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 5, 5], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([40, 144, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 5, 5], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([40, 240, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 5, 5], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([40, 240, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 3, 3], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([80, 240, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 5, 5], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([112, 480, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([192, 672, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 3, 3], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([320, 1152, 1, 1], f32), T([1920, 320, 1, 1], f32), T([1920, 1, 3, 3], f32), T([80, 1920, 1, 1], f32), T([1920, 80, 1, 1], f32), T([320, 1920, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 112, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 40, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 112, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([810, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([36, 88, 1, 1], f32)]), {'alpha': 4e-05})"
        }
    ],
    "aten._foreach_norm.Scalar": [
        {
            "count": 1,
            "inputs": "(([T([32, 3, 3, 3], f32), T([32], f32), T([32], f32), T([32, 1, 3, 3], f32), T([32], f32), T([32], f32), T([8, 32, 1, 1], f32), T([8], f32), T([32, 8, 1, 1], f32), T([32], f32), T([16, 32, 1, 1], f32), T([16], f32), T([16], f32), T([16, 1, 3, 3], f32), T([16], f32), T([16], f32), T([4, 16, 1, 1], f32), T([4], f32), T([16, 4, 1, 1], f32), T([16], f32), T([16, 16, 1, 1], f32), T([16], f32), T([16], f32), T([96, 16, 1, 1], f32), T([96], f32), T([96], f32), T([96, 1, 3, 3], f32), T([96], f32), T([96], f32), T([4, 96, 1, 1], f32), T([4], f32), T([96, 4, 1, 1], f32), T([96], f32), T([24, 96, 1, 1], f32), T([24], f32), T([24], f32), T([144, 24, 1, 1], f32), T([144], f32), T([144], f32), T([144, 1, 3, 3], f32), T([144], f32), T([144], f32), T([6, 144, 1, 1], f32), T([6], f32), T([144, 6, 1, 1], f32), T([144], f32), T([24, 144, 1, 1], f32), T([24], f32), T([24], f32), T([144, 24, 1, 1], f32), T([144], f32), T([144], f32), T([144, 1, 3, 3], f32), T([144], f32), T([144], f32), T([6, 144, 1, 1], f32), T([6], f32), T([144, 6, 1, 1], f32), T([144], f32), T([24, 144, 1, 1], f32), T([24], f32), T([24], f32), T([144, 24, 1, 1], f32), T([144], f32), T([144], f32), T([144, 1, 5, 5], f32), T([144], f32), T([144], f32), T([6, 144, 1, 1], f32), T([6], f32), T([144, 6, 1, 1], f32), T([144], f32), T([40, 144, 1, 1], f32), T([40], f32), T([40], f32), T([240, 40, 1, 1], f32), T([240], f32), T([240], f32), T([240, 1, 5, 5], f32), T([240], f32), T([240], f32), T([10, 240, 1, 1], f32), T([10], f32), T([240, 10, 1, 1], f32), T([240], f32), T([40, 240, 1, 1], f32), T([40], f32), T([40], f32), T([240, 40, 1, 1], f32), T([240], f32), T([240], f32), T([240, 1, 5, 5], f32), T([240], f32), T([240], f32), T([10, 240, 1, 1], f32), T([10], f32), T([240, 10, 1, 1], f32), T([240], f32), T([40, 240, 1, 1], f32), T([40], f32), T([40], f32), T([240, 40, 1, 1], f32), T([240], f32), T([240], f32), T([240, 1, 3, 3], f32), T([240], f32), T([240], f32), T([10, 240, 1, 1], f32), T([10], f32), T([240, 10, 1, 1], f32), T([240], f32), T([80, 240, 1, 1], f32), T([80], f32), T([80], f32), T([480, 80, 1, 1], f32), T([480], f32), T([480], f32), T([480, 1, 3, 3], f32), T([480], f32), T([480], f32), T([20, 480, 1, 1], f32), T([20], f32), T([480, 20, 1, 1], f32), T([480], f32), T([80, 480, 1, 1], f32), T([80], f32), T([80], f32), T([480, 80, 1, 1], f32), T([480], f32), T([480], f32), T([480, 1, 3, 3], f32), T([480], f32), T([480], f32), T([20, 480, 1, 1], f32), T([20], f32), T([480, 20, 1, 1], f32), T([480], f32), T([80, 480, 1, 1], f32), T([80], f32), T([80], f32), T([480, 80, 1, 1], f32), T([480], f32), T([480], f32), T([480, 1, 3, 3], f32), T([480], f32), T([480], f32), T([20, 480, 1, 1], f32), T([20], f32), T([480, 20, 1, 1], f32), T([480], f32), T([80, 480, 1, 1], f32), T([80], f32), T([80], f32), T([480, 80, 1, 1], f32), T([480], f32), T([480], f32), T([480, 1, 5, 5], f32), T([480], f32), T([480], f32), T([20, 480, 1, 1], f32), T([20], f32), T([480, 20, 1, 1], f32), T([480], f32), T([112, 480, 1, 1], f32), T([112], f32), T([112], f32), T([672, 112, 1, 1], f32), T([672], f32), T([672], f32), T([672, 1, 5, 5], f32), T([672], f32), T([672], f32), T([28, 672, 1, 1], f32), T([28], f32), T([672, 28, 1, 1], f32), T([672], f32), T([112, 672, 1, 1], f32), T([112], f32), T([112], f32), T([672, 112, 1, 1], f32), T([672], f32), T([672], f32), T([672, 1, 5, 5], f32), T([672], f32), T([672], f32), T([28, 672, 1, 1], f32), T([28], f32), T([672, 28, 1, 1], f32), T([672], f32), T([112, 672, 1, 1], f32), T([112], f32), T([112], f32), T([672, 112, 1, 1], f32), T([672], f32), T([672], f32), T([672, 1, 5, 5], f32), T([672], f32), T([672], f32), T([28, 672, 1, 1], f32), T([28], f32), T([672, 28, 1, 1], f32), T([672], f32), T([112, 672, 1, 1], f32), T([112], f32), T([112], f32), T([672, 112, 1, 1], f32), T([672], f32), T([672], f32), T([672, 1, 5, 5], f32), T([672], f32), T([672], f32), T([28, 672, 1, 1], f32), T([28], f32), T([672, 28, 1, 1], f32), T([672], f32), T([192, 672, 1, 1], f32), T([192], f32), T([192], f32), T([1152, 192, 1, 1], f32), T([1152], f32), T([1152], f32), T([1152, 1, 5, 5], f32), T([1152], f32), T([1152], f32), T([48, 1152, 1, 1], f32), T([48], f32), T([1152, 48, 1, 1], f32), T([1152], f32), T([192, 1152, 1, 1], f32), T([192], f32), T([192], f32), T([1152, 192, 1, 1], f32), T([1152], f32), T([1152], f32), T([1152, 1, 5, 5], f32), T([1152], f32), T([1152], f32), T([48, 1152, 1, 1], f32), T([48], f32), T([1152, 48, 1, 1], f32), T([1152], f32), T([192, 1152, 1, 1], f32), T([192], f32), T([192], f32), T([1152, 192, 1, 1], f32), T([1152], f32), T([1152], f32), T([1152, 1, 5, 5], f32), T([1152], f32), T([1152], f32), T([48, 1152, 1, 1], f32), T([48], f32), T([1152, 48, 1, 1], f32), T([1152], f32), T([192, 1152, 1, 1], f32), T([192], f32), T([192], f32), T([1152, 192, 1, 1], f32), T([1152], f32), T([1152], f32), T([1152, 1, 5, 5], f32), T([1152], f32), T([1152], f32), T([48, 1152, 1, 1], f32), T([48], f32), T([1152, 48, 1, 1], f32), T([1152], f32), T([192, 1152, 1, 1], f32), T([192], f32), T([192], f32), T([1152, 192, 1, 1], f32), T([1152], f32), T([1152], f32), T([1152, 1, 3, 3], f32), T([1152], f32), T([1152], f32), T([48, 1152, 1, 1], f32), T([48], f32), T([1152, 48, 1, 1], f32), T([1152], f32), T([320, 1152, 1, 1], f32), T([320], f32), T([320], f32), T([1920, 320, 1, 1], f32), T([1920], f32), T([1920], f32), T([1920, 1, 3, 3], f32), T([1920], f32), T([1920], f32), T([80, 1920, 1, 1], f32), T([80], f32), T([1920, 80, 1, 1], f32), T([1920], f32), T([320, 1920, 1, 1], f32), T([320], f32), T([320], f32), T([88, 320, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 320, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 112, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 40, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 112, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 320, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([810, 88, 1, 1], f32), T([810], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([36, 88, 1, 1], f32), T([36], f32)], 2.0), {})"
        }
    ],
    "aten._to_copy.default": [
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 9, 1], f32),), {'dtype': i64})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 9, 1], f32),), {'dtype': i64})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 9, 1], f32),), {'dtype': i64})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 9, 1], f32),), {'dtype': i64})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 9, 1], f32),), {'dtype': i64})"
        }
    ],
    "aten.abs.default": [
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)),), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 3,
            "inputs": "((T([16, 16, 320, 320], f32), T([16, 16, 320, 320], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 24, 160, 160], f32), T([16, 24, 160, 160], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 40, 80, 80], f32), T([16, 40, 80, 80], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([16, 80, 40, 40], f32), T([16, 80, 40, 40], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 112, 40, 40], f32), T([16, 112, 40, 40], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 192, 20, 20], f32), T([16, 192, 20, 20], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 320, 20, 20], f32), T([16, 320, 20, 20], f32)), {})"
        },
        {
            "count": 76,
            "inputs": "((T([], f32), 0.0001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], f32), 1.0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 80, 80, 810], f32), T([16, 80, 80, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 40, 40, 810], f32), T([16, 40, 40, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)), T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 20, 20, 810], f32), T([16, 20, 20, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)), T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 10, 10, 810], f32), T([16, 10, 10, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)), T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100))), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 5, 5, 810], f32), T([16, 5, 5, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)), T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25))), {})"
        },
        {
            "count": 45,
            "inputs": "((T([], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32), T([16, 5, 5, 36], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32), T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 810], f32, stride=(20250, 5, 1, 25)), T([16, 5, 5, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32), T([16, 10, 10, 36], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32), T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 810], f32, stride=(81000, 10, 1, 100)), T([16, 10, 10, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32), T([16, 20, 20, 36], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32), T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 810], f32, stride=(324000, 20, 1, 400)), T([16, 20, 20, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32), T([16, 40, 40, 36], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32), T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 810], f32, stride=(1296000, 40, 1, 1600)), T([16, 40, 40, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32), T([16, 80, 80, 36], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32), T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 810], f32, stride=(5184000, 80, 1, 6400)), T([16, 80, 80, 810], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([36, 88, 1, 1], f32), T([36, 88, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([36], f32), T([36], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([88, 1, 3, 3], f32), T([88, 1, 3, 3], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([88, 88, 1, 1], f32), T([88, 88, 1, 1], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([88], f32), T([88], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 88, 5, 5], f32), T([16, 88, 5, 5], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([810, 88, 1, 1], f32), T([810, 88, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([810], f32), T([810], f32)), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 10, 10], f32), T([16, 88, 10, 10], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 88, 20, 20], f32), T([16, 88, 20, 20], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 88, 40, 40], f32), T([16, 88, 40, 40], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 88, 80, 80], f32), T([16, 88, 80, 80], f32)), {})"
        },
        {
            "count": 20,
            "inputs": "((T([2], f32), T([2], f32)), {})"
        },
        {
            "count": 20,
            "inputs": "((T([2], f32), T([2], f32, stride=(0,))), {})"
        },
        {
            "count": 24,
            "inputs": "((T([3], f32), T([3], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3], f32), T([3], f32, stride=(0,))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 20, 20], f32), T([16, 1920, 20, 20], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 1152, 20, 20], f32), T([16, 1152, 20, 20], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32), T([16, 672, 20, 20], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 672, 40, 40], f32), T([16, 672, 40, 40], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 480, 40, 40], f32), T([16, 480, 40, 40], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32), T([16, 240, 40, 40], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 240, 80, 80], f32), T([16, 240, 80, 80], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32), T([16, 144, 80, 80], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 144, 160, 160], f32), T([16, 144, 160, 160], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32), T([16, 96, 160, 160], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 320, 320], f32), T([16, 32, 320, 320], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], f32), 1e-06), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 136,
            "inputs": "((T([], i64), 1), {})"
        }
    ],
    "aten.bernoulli_.float": [
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.991304347826087), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9739130434782609), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9652173913043478), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9478260869565217), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9391304347826087), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9217391304347826), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9130434782608696), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9043478260869565), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8869565217391304), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8782608695652174), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8695652173913043), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8521739130434782), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8434782608695652), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8347826086956521), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8260869565217391), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.808695652173913), {})"
        }
    ],
    "aten.binary_cross_entropy_with_logits.default": [
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 810], f32, stride=(5184000, 80, 1, 6400)), T([16, 80, 80, 810], f32), None, None, 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 810], f32, stride=(1296000, 40, 1, 1600)), T([16, 40, 40, 810], f32), None, None, 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 810], f32, stride=(324000, 20, 1, 400)), T([16, 20, 20, 810], f32), None, None, 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 810], f32, stride=(81000, 10, 1, 100)), T([16, 10, 10, 810], f32), None, None, 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 810], f32, stride=(20250, 5, 1, 25)), T([16, 5, 5, 810], f32), None, None, 0), {})"
        }
    ],
    "aten.clamp.default": [
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), None, 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)), None, 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)), None, 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)), None, 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)), None, 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], f32), None, 1.0), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 2,
            "inputs": "((T([16, 32, 320, 320], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 8, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 4, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 320, 320], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 144, 160, 160], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 6, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 240, 80, 80], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 10, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 480, 40, 40], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 20, 1, 1], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([16, 672, 40, 40], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 28, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32),), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 1152, 20, 20], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 48, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 1920, 20, 20], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 1, 1], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 10, 10], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 20, 20], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 40, 40], f32),), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 88, 80, 80], f32),), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 88, 5, 5], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([16], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([96], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([24], f32),), {})"
        },
        {
            "count": 15,
            "inputs": "((T([144], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([6], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([40], f32),), {})"
        },
        {
            "count": 15,
            "inputs": "((T([240], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([10], f32),), {})"
        },
        {
            "count": 9,
            "inputs": "((T([80], f32),), {})"
        },
        {
            "count": 20,
            "inputs": "((T([480], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([20], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([112], f32),), {})"
        },
        {
            "count": 20,
            "inputs": "((T([672], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([28], f32),), {})"
        },
        {
            "count": 10,
            "inputs": "((T([192], f32),), {})"
        },
        {
            "count": 25,
            "inputs": "((T([1152], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([48], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([320], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([1920], f32),), {})"
        },
        {
            "count": 180,
            "inputs": "((T([88], f32),), {})"
        },
        {
            "count": 20,
            "inputs": "((T([2], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([810], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([36], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 3, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 32, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 8, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 16, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 16, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 96, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 4, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([24, 96, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([144, 24, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([144, 1, 3, 3], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([6, 144, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([144, 6, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([24, 144, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([144, 1, 5, 5], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([40, 144, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([240, 40, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([240, 1, 5, 5], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([10, 240, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([240, 10, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([40, 240, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([240, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([80, 240, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([480, 80, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([480, 1, 3, 3], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([20, 480, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([480, 20, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([80, 480, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 1, 5, 5], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([112, 480, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([672, 112, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([672, 1, 5, 5], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([28, 672, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([672, 28, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([112, 672, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([192, 672, 1, 1], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([1152, 192, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1152, 1, 5, 5], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([48, 1152, 1, 1], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([1152, 48, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([192, 1152, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1152, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320, 1152, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1920, 320, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1920, 1, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([80, 1920, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1920, 80, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320, 1920, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([88, 320, 1, 1], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([88, 1, 3, 3], f32),), {})"
        },
        {
            "count": 38,
            "inputs": "((T([88, 88, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([88, 112, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([88, 40, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([810, 88, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([36, 88, 1, 1], f32),), {})"
        }
    ],
    "aten.constant_pad_nd.default": [
        {
            "count": 1,
            "inputs": "((T([16, 3, 640, 640], f32), [0, 1, 0, 1], 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 320, 320], f32), [0, 1, 0, 1], 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 160, 160], f32), [1, 2, 1, 2], 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 80, 80], f32), [0, 1, 0, 1], 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 40, 40], f32), [1, 2, 1, 2], 0.0), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 88, 20, 20], f32), [0, 1, 0, 1], -inf), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 88, 10, 10], f32), [0, 1, 0, 1], -inf), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 80, 80], f32), [0, 1, 0, 1], -inf), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 40, 40], f32), [0, 1, 0, 1], -inf), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 88, 11, 11], f32), [0, -1, 0, -1]), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 88, 21, 21], f32), [0, -1, 0, -1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 41, 41], f32), [0, -1, 0, -1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 81, 81], f32), [0, -1, 0, -1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 43, 43], f32), [-1, -2, -1, -2]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 81, 81], f32), [0, -1, 0, -1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 163, 163], f32), [-1, -2, -1, -2]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 321, 321], f32), [0, -1, 0, -1]), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([16, 3, 641, 641], f32), T([32, 3, 3, 3], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 320, 320], f32), T([32, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 32), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 1, 1], f32), T([8, 32, 1, 1], f32), T([8], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 8, 1, 1], f32), T([32, 8, 1, 1], f32), T([32], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 320, 320], f32), T([16, 32, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32), T([16, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 16), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 1, 1], f32), T([4, 16, 1, 1], f32), T([4], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 4, 1, 1], f32), T([16, 4, 1, 1], f32), T([16], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32), T([16, 16, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32), T([96, 16, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 321, 321], f32), T([96, 1, 3, 3], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 96), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 1, 1], f32), T([4, 96, 1, 1], f32), T([4], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 4, 1, 1], f32), T([96, 4, 1, 1], f32), T([96], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32), T([24, 96, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 24, 160, 160], f32), T([144, 24, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 144, 160, 160], f32), T([144, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 144), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 144, 1, 1], f32), T([6, 144, 1, 1], f32), T([6], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 6, 1, 1], f32), T([144, 6, 1, 1], f32), T([144], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 144, 160, 160], f32), T([24, 144, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 163, 163], f32), T([144, 1, 5, 5], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 144), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32), T([40, 144, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 40, 80, 80], f32), T([240, 40, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 240, 80, 80], f32), T([240, 1, 5, 5], f32), None, [1, 1], [2, 2], [1, 1], False, [0, 0], 240), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 240, 1, 1], f32), T([10, 240, 1, 1], f32), T([10], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 10, 1, 1], f32), T([240, 10, 1, 1], f32), T([240], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 240, 80, 80], f32), T([40, 240, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 81, 81], f32), T([240, 1, 3, 3], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 240), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32), T([80, 240, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 80, 40, 40], f32), T([480, 80, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 480, 40, 40], f32), T([480, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 480), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 480, 1, 1], f32), T([20, 480, 1, 1], f32), T([20], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 20, 1, 1], f32), T([480, 20, 1, 1], f32), T([480], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 480, 40, 40], f32), T([80, 480, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 480, 40, 40], f32), T([480, 1, 5, 5], f32), None, [1, 1], [2, 2], [1, 1], False, [0, 0], 480), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 480, 40, 40], f32), T([112, 480, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 112, 40, 40], f32), T([672, 112, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 672, 40, 40], f32), T([672, 1, 5, 5], f32), None, [1, 1], [2, 2], [1, 1], False, [0, 0], 672), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 672, 1, 1], f32), T([28, 672, 1, 1], f32), T([28], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 28, 1, 1], f32), T([672, 28, 1, 1], f32), T([672], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 672, 40, 40], f32), T([112, 672, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 43, 43], f32), T([672, 1, 5, 5], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 672), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32), T([192, 672, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 192, 20, 20], f32), T([1152, 192, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 1152, 20, 20], f32), T([1152, 1, 5, 5], f32), None, [1, 1], [2, 2], [1, 1], False, [0, 0], 1152), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 1152, 1, 1], f32), T([48, 1152, 1, 1], f32), T([48], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 48, 1, 1], f32), T([1152, 48, 1, 1], f32), T([1152], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 1152, 20, 20], f32), T([192, 1152, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1152, 20, 20], f32), T([1152, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1152), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1152, 20, 20], f32), T([320, 1152, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 320, 20, 20], f32), T([1920, 320, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 20, 20], f32), T([1920, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1920), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 1, 1], f32), T([80, 1920, 1, 1], f32), T([80], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 1, 1], f32), T([1920, 80, 1, 1], f32), T([1920], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 20, 20], f32), T([320, 1920, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 320, 20, 20], f32), T([88, 320, 1, 1], f32), T([88], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 10, 10], f32), T([88, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 88), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 10, 10], f32), T([88, 88, 1, 1], f32), T([88], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 20, 20], f32), T([88, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 88), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 20, 20], f32), T([88, 88, 1, 1], f32), T([88], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 112, 40, 40], f32), T([88, 112, 1, 1], f32), T([88], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 40, 40], f32), T([88, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 88), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 40, 40], f32), T([88, 88, 1, 1], f32), T([88], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 80, 80], f32), T([88, 40, 1, 1], f32), T([88], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 88, 80, 80], f32), T([88, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 88), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 88, 80, 80], f32), T([88, 88, 1, 1], f32), T([88], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 88, 5, 5], f32), T([88, 1, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 88), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 88, 5, 5], f32), T([88, 88, 1, 1], f32), T([88], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 88, 80, 80], f32), T([810, 88, 1, 1], f32), T([810], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 88, 40, 40], f32), T([810, 88, 1, 1], f32), T([810], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 88, 20, 20], f32), T([810, 88, 1, 1], f32), T([810], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 88, 10, 10], f32), T([810, 88, 1, 1], f32), T([810], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 88, 5, 5], f32), T([810, 88, 1, 1], f32), T([810], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 88, 80, 80], f32), T([36, 88, 1, 1], f32), T([36], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 88, 40, 40], f32), T([36, 88, 1, 1], f32), T([36], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 88, 20, 20], f32), T([36, 88, 1, 1], f32), T([36], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 88, 10, 10], f32), T([36, 88, 1, 1], f32), T([36], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 88, 5, 5], f32), T([36, 88, 1, 1], f32), T([36], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([16, 36, 5, 5], f32, stride=(900, 1, 180, 36)), T([16, 88, 5, 5], f32), T([36, 88, 1, 1], f32), [36], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 88, 5, 5], f32), T([16, 88, 5, 5], f32), T([88, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 88, [True, True, False]), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 88, 5, 5], f32), T([16, 88, 5, 5], f32), T([88, 88, 1, 1], f32), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 36, 10, 10], f32, stride=(3600, 1, 360, 36)), T([16, 88, 10, 10], f32), T([36, 88, 1, 1], f32), [36], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 10, 10], f32), T([16, 88, 10, 10], f32), T([88, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 88, [True, True, False]), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 10, 10], f32), T([16, 88, 10, 10], f32), T([88, 88, 1, 1], f32), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 36, 20, 20], f32, stride=(14400, 1, 720, 36)), T([16, 88, 20, 20], f32), T([36, 88, 1, 1], f32), [36], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 20, 20], f32), T([16, 88, 20, 20], f32), T([88, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 88, [True, True, False]), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 20, 20], f32), T([16, 88, 20, 20], f32), T([88, 88, 1, 1], f32), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 36, 40, 40], f32, stride=(57600, 1, 1440, 36)), T([16, 88, 40, 40], f32), T([36, 88, 1, 1], f32), [36], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 40, 40], f32), T([16, 88, 40, 40], f32), T([88, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 88, [True, True, False]), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 40, 40], f32), T([16, 88, 40, 40], f32), T([88, 88, 1, 1], f32), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 36, 80, 80], f32, stride=(230400, 1, 2880, 36)), T([16, 88, 80, 80], f32), T([36, 88, 1, 1], f32), [36], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 88, 80, 80], f32), T([16, 88, 80, 80], f32), T([88, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 88, [True, True, False]), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 88, 80, 80], f32), T([16, 88, 80, 80], f32), T([88, 88, 1, 1], f32), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 810, 5, 5], f32), T([16, 88, 5, 5], f32), T([810, 88, 1, 1], f32), [810], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 810, 10, 10], f32), T([16, 88, 10, 10], f32), T([810, 88, 1, 1], f32), [810], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 810, 20, 20], f32), T([16, 88, 20, 20], f32), T([810, 88, 1, 1], f32), [810], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 810, 40, 40], f32), T([16, 88, 40, 40], f32), T([810, 88, 1, 1], f32), [810], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 810, 80, 80], f32), T([16, 88, 80, 80], f32), T([810, 88, 1, 1], f32), [810], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 88, 20, 20], f32), T([16, 320, 20, 20], f32), T([88, 320, 1, 1], f32), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 88, 40, 40], f32), T([16, 112, 40, 40], f32), T([88, 112, 1, 1], f32), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 88, 80, 80], f32), T([16, 40, 80, 80], f32), T([88, 40, 1, 1], f32), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 320, 20, 20], f32), T([16, 1920, 20, 20], f32), T([320, 1920, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 1, 1], f32), T([16, 80, 1, 1], f32), T([1920, 80, 1, 1], f32), [1920], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 1, 1], f32), T([16, 1920, 1, 1], f32), T([80, 1920, 1, 1], f32), [80], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 20, 20], f32), T([16, 1920, 20, 20], f32), T([1920, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1920, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 20, 20], f32), T([16, 320, 20, 20], f32), T([1920, 320, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 320, 20, 20], f32), T([16, 1152, 20, 20], f32), T([320, 1152, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 1152, 1, 1], f32), T([16, 48, 1, 1], f32), T([1152, 48, 1, 1], f32), [1152], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 48, 1, 1], f32), T([16, 1152, 1, 1], f32), T([48, 1152, 1, 1], f32), [48], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1152, 20, 20], f32), T([16, 1152, 20, 20], f32), T([1152, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1152, [True, True, False]), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 1152, 20, 20], f32), T([16, 192, 20, 20], f32), T([1152, 192, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 192, 20, 20], f32), T([16, 1152, 20, 20], f32), T([192, 1152, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 1152, 20, 20], f32), T([16, 1152, 20, 20], f32), T([1152, 1, 5, 5], f32), [0], [1, 1], [2, 2], [1, 1], False, [0, 0], 1152, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 192, 20, 20], f32), T([16, 672, 20, 20], f32), T([192, 672, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 672, 1, 1], f32), T([16, 28, 1, 1], f32), T([672, 28, 1, 1], f32), [672], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 28, 1, 1], f32), T([16, 672, 1, 1], f32), T([28, 672, 1, 1], f32), [28], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32), T([16, 672, 43, 43], f32), T([672, 1, 5, 5], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 672, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 672, 40, 40], f32), T([16, 112, 40, 40], f32), T([672, 112, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 112, 40, 40], f32), T([16, 672, 40, 40], f32), T([112, 672, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 672, 40, 40], f32), T([16, 672, 40, 40], f32), T([672, 1, 5, 5], f32), [0], [1, 1], [2, 2], [1, 1], False, [0, 0], 672, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 112, 40, 40], f32), T([16, 480, 40, 40], f32), T([112, 480, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 480, 1, 1], f32), T([16, 20, 1, 1], f32), T([480, 20, 1, 1], f32), [480], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 20, 1, 1], f32), T([16, 480, 1, 1], f32), T([20, 480, 1, 1], f32), [20], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 480, 40, 40], f32), T([16, 480, 40, 40], f32), T([480, 1, 5, 5], f32), [0], [1, 1], [2, 2], [1, 1], False, [0, 0], 480, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 480, 40, 40], f32), T([16, 80, 40, 40], f32), T([480, 80, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 80, 40, 40], f32), T([16, 480, 40, 40], f32), T([80, 480, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 480, 40, 40], f32), T([16, 480, 40, 40], f32), T([480, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 480, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 40, 40], f32), T([16, 240, 40, 40], f32), T([80, 240, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 240, 1, 1], f32), T([16, 10, 1, 1], f32), T([240, 10, 1, 1], f32), [240], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 10, 1, 1], f32), T([16, 240, 1, 1], f32), T([10, 240, 1, 1], f32), [10], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32), T([16, 240, 81, 81], f32), T([240, 1, 3, 3], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 240, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 240, 80, 80], f32), T([16, 40, 80, 80], f32), T([240, 40, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 40, 80, 80], f32), T([16, 240, 80, 80], f32), T([40, 240, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 240, 80, 80], f32), T([16, 240, 80, 80], f32), T([240, 1, 5, 5], f32), [0], [1, 1], [2, 2], [1, 1], False, [0, 0], 240, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 80, 80], f32), T([16, 144, 80, 80], f32), T([40, 144, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 144, 1, 1], f32), T([16, 6, 1, 1], f32), T([144, 6, 1, 1], f32), [144], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 6, 1, 1], f32), T([16, 144, 1, 1], f32), T([6, 144, 1, 1], f32), [6], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32), T([16, 144, 163, 163], f32), T([144, 1, 5, 5], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 144, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 144, 160, 160], f32), T([16, 24, 160, 160], f32), T([144, 24, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 24, 160, 160], f32), T([16, 144, 160, 160], f32), T([24, 144, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 144, 160, 160], f32), T([16, 144, 160, 160], f32), T([144, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 144, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 24, 160, 160], f32), T([16, 96, 160, 160], f32), T([24, 96, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 1, 1], f32), T([16, 4, 1, 1], f32), T([96, 4, 1, 1], f32), [96], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 4, 1, 1], f32), T([16, 96, 1, 1], f32), T([4, 96, 1, 1], f32), [4], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32), T([16, 96, 321, 321], f32), T([96, 1, 3, 3], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 96, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 320, 320], f32), T([16, 16, 320, 320], f32), T([96, 16, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32), T([16, 16, 320, 320], f32), T([16, 16, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 1, 1], f32), T([16, 4, 1, 1], f32), T([16, 4, 1, 1], f32), [16], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 4, 1, 1], f32), T([16, 16, 1, 1], f32), T([4, 16, 1, 1], f32), [4], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32), T([16, 16, 320, 320], f32), T([16, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 16, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32), T([16, 32, 320, 320], f32), T([16, 32, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 1, 1], f32), T([16, 8, 1, 1], f32), T([32, 8, 1, 1], f32), [32], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 8, 1, 1], f32), T([16, 32, 1, 1], f32), T([8, 32, 1, 1], f32), [8], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 320, 320], f32), T([16, 32, 320, 320], f32), T([32, 1, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 32, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 320, 320], f32), T([16, 3, 641, 641], f32), T([32, 3, 3, 3], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 2,
            "inputs": "((T([16, 32, 320, 320], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 16, 320, 320], f32), T([16], f32), T([16], f32), T([16], f32), T([16], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 320, 320], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 24, 160, 160], f32), T([24], f32), T([24], f32), T([24], f32), T([24], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 144, 160, 160], f32), T([144], f32), T([144], f32), T([144], f32), T([144], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32), T([144], f32), T([144], f32), T([144], f32), T([144], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 40, 80, 80], f32), T([40], f32), T([40], f32), T([40], f32), T([40], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 240, 80, 80], f32), T([240], f32), T([240], f32), T([240], f32), T([240], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32), T([240], f32), T([240], f32), T([240], f32), T([240], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 80, 40, 40], f32), T([80], f32), T([80], f32), T([80], f32), T([80], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 480, 40, 40], f32), T([480], f32), T([480], f32), T([480], f32), T([480], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 112, 40, 40], f32), T([112], f32), T([112], f32), T([112], f32), T([112], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 7,
            "inputs": "((T([16, 672, 40, 40], f32), T([672], f32), T([672], f32), T([672], f32), T([672], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32), T([672], f32), T([672], f32), T([672], f32), T([672], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 192, 20, 20], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 1152, 20, 20], f32), T([1152], f32), T([1152], f32), T([1152], f32), T([1152], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 320, 20, 20], f32), T([320], f32), T([320], f32), T([320], f32), T([320], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 1920, 20, 20], f32), T([1920], f32), T([1920], f32), T([1920], f32), T([1920], f32), True, 0.1, 0.001), {})"
        },
        {
            "count": 17,
            "inputs": "((T([16, 88, 20, 20], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), True, 0.01, 0.001), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 10, 10], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), True, 0.01, 0.001), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 40, 40], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), True, 0.01, 0.001), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 88, 80, 80], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), True, 0.01, 0.001), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 88, 5, 5], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), True, 0.01, 0.001), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 10,
            "inputs": "((T([16, 88, 5, 5], f32), T([16, 88, 5, 5], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 10, 10], f32), T([16, 88, 10, 10], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 17,
            "inputs": "((T([16, 88, 20, 20], f32), T([16, 88, 20, 20], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 40, 40], f32), T([16, 88, 40, 40], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 88, 80, 80], f32), T([16, 88, 80, 80], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 320, 20, 20], f32), T([16, 320, 20, 20], f32), T([320], f32), T([320], f32), T([320], f32), T([320], f32), T([320], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 1920, 20, 20], f32), T([16, 1920, 20, 20], f32), T([1920], f32), T([1920], f32), T([1920], f32), T([1920], f32), T([1920], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 1152, 20, 20], f32), T([16, 1152, 20, 20], f32), T([1152], f32), T([1152], f32), T([1152], f32), T([1152], f32), T([1152], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 192, 20, 20], f32), T([16, 192, 20, 20], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), T([192], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32), T([16, 672, 20, 20], f32), T([672], f32), T([672], f32), T([672], f32), T([672], f32), T([672], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 7,
            "inputs": "((T([16, 672, 40, 40], f32), T([16, 672, 40, 40], f32), T([672], f32), T([672], f32), T([672], f32), T([672], f32), T([672], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 112, 40, 40], f32), T([16, 112, 40, 40], f32), T([112], f32), T([112], f32), T([112], f32), T([112], f32), T([112], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 480, 40, 40], f32), T([16, 480, 40, 40], f32), T([480], f32), T([480], f32), T([480], f32), T([480], f32), T([480], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 80, 40, 40], f32), T([16, 80, 40, 40], f32), T([80], f32), T([80], f32), T([80], f32), T([80], f32), T([80], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32), T([16, 240, 40, 40], f32), T([240], f32), T([240], f32), T([240], f32), T([240], f32), T([240], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 240, 80, 80], f32), T([16, 240, 80, 80], f32), T([240], f32), T([240], f32), T([240], f32), T([240], f32), T([240], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 40, 80, 80], f32), T([16, 40, 80, 80], f32), T([40], f32), T([40], f32), T([40], f32), T([40], f32), T([40], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32), T([16, 144, 80, 80], f32), T([144], f32), T([144], f32), T([144], f32), T([144], f32), T([144], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 144, 160, 160], f32), T([16, 144, 160, 160], f32), T([144], f32), T([144], f32), T([144], f32), T([144], f32), T([144], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 24, 160, 160], f32), T([16, 24, 160, 160], f32), T([24], f32), T([24], f32), T([24], f32), T([24], f32), T([24], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32), T([16, 96, 160, 160], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 320, 320], f32), T([16, 96, 320, 320], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), T([96], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 16, 320, 320], f32), T([16, 16, 320, 320], f32), T([16], f32), T([16], f32), T([16], f32), T([16], f32), T([16], f32), 0.001, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 32, 320, 320], f32), T([16, 32, 320, 320], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 0.001, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([16, 1920, 20, 20], f32, stride=(1920, 1, 0, 0)), 400), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 1152, 20, 20], f32, stride=(1152, 1, 0, 0)), 400), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32, stride=(672, 1, 0, 0)), 400), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 672, 40, 40], f32, stride=(672, 1, 0, 0)), 1600), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 480, 40, 40], f32, stride=(480, 1, 0, 0)), 1600), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32, stride=(240, 1, 0, 0)), 1600), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 240, 80, 80], f32, stride=(240, 1, 0, 0)), 6400), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32, stride=(144, 1, 0, 0)), 6400), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 144, 160, 160], f32, stride=(144, 1, 0, 0)), 25600), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32, stride=(96, 1, 0, 0)), 25600), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32, stride=(16, 1, 0, 0)), 102400), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 320, 320], f32, stride=(32, 1, 0, 0)), 102400), {})"
        }
    ],
    "aten.div.Tensor": [
        {
            "count": 80,
            "inputs": "((T([16, 88, 10, 10], f32), T([], f32)), {})"
        },
        {
            "count": 80,
            "inputs": "((T([16, 88, 20, 20], f32), T([], f32)), {})"
        },
        {
            "count": 80,
            "inputs": "((T([16, 88, 40, 40], f32), T([], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([16, 88, 80, 80], f32), T([], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([16, 88, 5, 5], f32), T([], f32)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([], f32), T([], f32)), {})"
        }
    ],
    "aten.div_.Tensor": [
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.991304347826087), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9739130434782609), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9652173913043478), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9478260869565217), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9391304347826087), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9217391304347826), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9130434782608696), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.9043478260869565), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8869565217391304), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8782608695652174), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8695652173913043), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8521739130434782), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8434782608695652), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8347826086956521), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.8260869565217391), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1, 1, 1], f32), 0.808695652173913), {})"
        }
    ],
    "aten.ge.Scalar": [
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 9], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 9], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 9], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 9], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 9], f32), 0), {})"
        }
    ],
    "aten.le.Scalar": [
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), 0.1), {})"
        }
    ],
    "aten.linalg_vector_norm.default": [
        {
            "count": 1,
            "inputs": "((T([596], f32), 2.0), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 5,
            "inputs": "((T([16, 88, 21, 21], f32), [3, 3], [2, 2]), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 88, 11, 11], f32), [3, 3], [2, 2]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 81, 81], f32), [3, 3], [2, 2]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 41, 41], f32), [3, 3], [2, 2]), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 5,
            "inputs": "((T([16, 88, 5, 5], f32), T([16, 88, 11, 11], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([16, 88, 5, 5], i64)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 88, 10, 10], f32), T([16, 88, 21, 21], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([16, 88, 10, 10], i64)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 20, 20], f32), T([16, 88, 41, 41], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([16, 88, 20, 20], i64)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 40, 40], f32), T([16, 88, 81, 81], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([16, 88, 40, 40], i64)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([16, 32, 320, 320], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 144, 160, 160], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 240, 80, 80], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32), [2, 3], True), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 480, 40, 40], f32), [2, 3], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 672, 40, 40], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32), [2, 3], True), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 1152, 20, 20], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 20, 20], f32), [2, 3], True), {})"
        }
    ],
    "aten.mul.Scalar": [
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)), 2.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 810], f32), 1.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)), 2.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 810], f32), 1.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)), 2.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 810], f32), 1.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)), 2.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 810], f32), 1.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), 2.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 810], f32), 1.5), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 2,
            "inputs": "((T([16, 32, 320, 320], f32), T([16, 32, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 16, 320, 320], f32), T([16, 16, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 16, 320, 320], f32), T([16, 1, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 96, 160, 160], f32), T([16, 96, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 144, 160, 160], f32), T([16, 144, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 24, 160, 160], f32), T([16, 1, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 144, 80, 80], f32), T([16, 144, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 240, 80, 80], f32), T([16, 240, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 40, 80, 80], f32), T([16, 1, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 240, 40, 40], f32), T([16, 240, 1, 1], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 480, 40, 40], f32), T([16, 480, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([16, 80, 40, 40], f32), T([16, 1, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([16, 672, 40, 40], f32), T([16, 672, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([16, 112, 40, 40], f32), T([16, 1, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 672, 20, 20], f32), T([16, 672, 1, 1], f32)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 1152, 20, 20], f32), T([16, 1152, 1, 1], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 192, 20, 20], f32), T([16, 1, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 1920, 20, 20], f32), T([16, 1920, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 320, 20, 20], f32), T([16, 1, 1, 1], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([16, 88, 10, 10], f32), T([], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([16, 88, 20, 20], f32), T([], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([16, 88, 40, 40], f32), T([], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 80, 80], f32), T([], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 5, 5], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 9, 1], f32), T([16, 80, 80, 9, 1], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 80, 80, 9, 90], f32), T([16, 80, 80, 9, 1], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 80, 80, 810], f32), T([16, 80, 80, 810], f32, stride=(5184000, 80, 1, 6400))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 810], f32), 0.25), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 810], f32), 0.75), {})"
        },
        {
            "count": 5,
            "inputs": "((T([], f32), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], f32), T([16, 80, 80, 810], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 80, 80, 810], f32), T([16, 80, 80, 810], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([], f32), 4.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), 0.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), T([16, 80, 80, 36], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 9, 1], f32), T([16, 40, 40, 9, 1], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 40, 40, 9, 90], f32), T([16, 40, 40, 9, 1], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 40, 40, 810], f32), T([16, 40, 40, 810], f32, stride=(1296000, 40, 1, 1600))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 810], f32), 0.25), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 810], f32), 0.75), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], f32), T([16, 40, 40, 810], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 40, 40, 810], f32), T([16, 40, 40, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)), 0.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)), T([16, 40, 40, 36], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 9, 1], f32), T([16, 20, 20, 9, 1], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 20, 20, 9, 90], f32), T([16, 20, 20, 9, 1], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 20, 20, 810], f32), T([16, 20, 20, 810], f32, stride=(324000, 20, 1, 400))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 810], f32), 0.25), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 810], f32), 0.75), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], f32), T([16, 20, 20, 810], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 20, 20, 810], f32), T([16, 20, 20, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)), 0.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)), T([16, 20, 20, 36], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 9, 1], f32), T([16, 10, 10, 9, 1], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 10, 10, 9, 90], f32), T([16, 10, 10, 9, 1], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 10, 10, 810], f32), T([16, 10, 10, 810], f32, stride=(81000, 10, 1, 100))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 810], f32), 0.25), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 810], f32), 0.75), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], f32), T([16, 10, 10, 810], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 10, 10, 810], f32), T([16, 10, 10, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)), 0.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)), T([16, 10, 10, 36], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 9, 1], f32), T([16, 5, 5, 9, 1], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 5, 5, 9, 90], f32), T([16, 5, 5, 9, 1], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 5, 5, 810], f32), T([16, 5, 5, 810], f32, stride=(20250, 5, 1, 25))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 810], f32), 0.25), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 810], f32), 0.75), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], f32), T([16, 5, 5, 810], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 5, 5, 810], f32), T([16, 5, 5, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)), 0.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)), T([16, 5, 5, 36], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([], f32), 50.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(0, 0, 0, 0)), T([16, 5, 5, 36], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32), 0.5), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 5, 5, 36], f32), T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 9, 90], f32, stride=(0, 0, 0, 0, 0)), T([16, 5, 5, 9, 1], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 810], f32, stride=(20250, 5, 1, 25)), T([16, 5, 5, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(0, 0, 0, 0)), T([16, 10, 10, 36], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32), 0.5), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 10, 10, 36], f32), T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 9, 90], f32, stride=(0, 0, 0, 0, 0)), T([16, 10, 10, 9, 1], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 810], f32, stride=(81000, 10, 1, 100)), T([16, 10, 10, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(0, 0, 0, 0)), T([16, 20, 20, 36], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32), 0.5), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 20, 20, 36], f32), T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 9, 90], f32, stride=(0, 0, 0, 0, 0)), T([16, 20, 20, 9, 1], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 810], f32, stride=(324000, 20, 1, 400)), T([16, 20, 20, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(0, 0, 0, 0)), T([16, 40, 40, 36], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32), 0.5), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 40, 40, 36], f32), T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 9, 90], f32, stride=(0, 0, 0, 0, 0)), T([16, 40, 40, 9, 1], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 810], f32, stride=(1296000, 40, 1, 1600)), T([16, 40, 40, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(0, 0, 0, 0)), T([16, 80, 80, 36], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32), 0.5), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 80, 80, 36], f32), T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 9, 90], f32, stride=(0, 0, 0, 0, 0)), T([16, 80, 80, 9, 1], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 810], f32, stride=(5184000, 80, 1, 6400)), T([16, 80, 80, 810], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 5, 5], f32), T([16, 88, 5, 5], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([16, 88, 10, 10], f32), T([16, 88, 10, 10], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([16, 88, 20, 20], f32), T([16, 88, 20, 20], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([16, 88, 40, 40], f32), T([16, 88, 40, 40], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 80, 80], f32), T([16, 88, 80, 80], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 20, 20], f32), T([16, 1920, 20, 20], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 1152, 20, 20], f32), T([16, 1152, 20, 20], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32), T([16, 672, 20, 20], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 672, 40, 40], f32), T([16, 672, 40, 40], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 480, 40, 40], f32), T([16, 480, 40, 40], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32), T([16, 240, 40, 40], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 240, 80, 80], f32), T([16, 240, 80, 80], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32), T([16, 144, 80, 80], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 144, 160, 160], f32), T([16, 144, 160, 160], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32), T([16, 96, 160, 160], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32), T([16, 16, 320, 320], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 320, 320], f32), T([16, 32, 320, 320], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], f32), 10.0), {})"
        }
    ],
    "aten.ne.Scalar": [
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 9], f32), -2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32), 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 9], f32), -2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32), 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 9], f32), -2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32), 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 9], f32), -2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32), 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 9], f32), -2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32), 0.0), {})"
        }
    ],
    "aten.neg.default": [
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 5, 5, 810], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 10, 10, 810], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 20, 20, 810], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 40, 40, 810], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 80, 80, 810], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 88, 5, 5], f32),), {})"
        },
        {
            "count": 20,
            "inputs": "((T([16, 88, 10, 10], f32),), {})"
        },
        {
            "count": 20,
            "inputs": "((T([16, 88, 20, 20], f32),), {})"
        },
        {
            "count": 20,
            "inputs": "((T([16, 88, 40, 40], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 88, 80, 80], f32),), {})"
        }
    ],
    "aten.new_empty.default": [
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32), [16, 1, 1, 1]), {'pin_memory': False})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 24, 160, 160], f32), [16, 1, 1, 1]), {'pin_memory': False})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 40, 80, 80], f32), [16, 1, 1, 1]), {'pin_memory': False})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 80, 40, 40], f32), [16, 1, 1, 1]), {'pin_memory': False})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 112, 40, 40], f32), [16, 1, 1, 1]), {'pin_memory': False})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 192, 20, 20], f32), [16, 1, 1, 1]), {'pin_memory': False})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 320, 20, 20], f32), [16, 1, 1, 1]), {'pin_memory': False})"
        }
    ],
    "aten.pow.Tensor_Scalar": [
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 810], f32), 1.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 810], f32), 1.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 810], f32), 1.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 810], f32), 1.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 810], f32), 1.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 810], f32), 0.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 810], f32), 0.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 810], f32), 0.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 810], f32), 0.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 810], f32), 0.5), {})"
        }
    ],
    "aten.reciprocal.default": [
        {
            "count": 6,
            "inputs": "((T([], f32),), {})"
        }
    ],
    "aten.relu.default": [
        {
            "count": 20,
            "inputs": "((T([2], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3], f32),), {})"
        }
    ],
    "aten.rsub.Scalar": [
        {
            "count": 2,
            "inputs": "((T([16, 80, 80, 810], f32), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 810], f32, stride=(5184000, 80, 1, 6400)), 1.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 40, 40, 810], f32), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 810], f32, stride=(1296000, 40, 1, 1600)), 1.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 20, 20, 810], f32), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 810], f32, stride=(324000, 20, 1, 400)), 1.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 10, 10, 810], f32), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 810], f32, stride=(81000, 10, 1, 100)), 1.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 5, 5, 810], f32), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 810], f32, stride=(20250, 5, 1, 25)), 1.0), {})"
        }
    ],
    "aten.scatter.value": [
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 9, 90], f32), -1, T([16, 80, 80, 9, 1], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 9, 90], f32), -1, T([16, 40, 40, 9, 1], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 9, 90], f32), -1, T([16, 20, 20, 9, 1], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 9, 90], f32), -1, T([16, 10, 10, 9, 1], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 9, 90], f32), -1, T([16, 5, 5, 9, 1], i64), 1), {})"
        }
    ],
    "aten.select_backward.default": [
        {
            "count": 20,
            "inputs": "((T([], f32), [2], 0, 1), {})"
        },
        {
            "count": 20,
            "inputs": "((T([], f32), [2], 0, 0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([], f32), [3], 0, 2), {})"
        },
        {
            "count": 12,
            "inputs": "((T([], f32), [3], 0, 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([], f32), [3], 0, 0), {})"
        }
    ],
    "aten.sgn.default": [
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)),), {})"
        }
    ],
    "aten.sigmoid.default": [
        {
            "count": 1,
            "inputs": "((T([16, 32, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 144, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 240, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 480, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 672, 1, 1], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 1152, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 80, 80, 810], f32, stride=(5184000, 80, 1, 6400)),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 40, 40, 810], f32, stride=(1296000, 40, 1, 1600)),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 20, 20, 810], f32, stride=(324000, 20, 1, 400)),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 10, 10, 810], f32, stride=(81000, 10, 1, 100)),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 5, 5, 810], f32, stride=(20250, 5, 1, 25)),), {})"
        }
    ],
    "aten.sigmoid_backward.default": [
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 810], f32), T([16, 5, 5, 810], f32, stride=(20250, 5, 1, 25))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 810], f32), T([16, 10, 10, 810], f32, stride=(81000, 10, 1, 100))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 810], f32), T([16, 20, 20, 810], f32, stride=(324000, 20, 1, 400))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 810], f32), T([16, 40, 40, 810], f32, stride=(1296000, 40, 1, 1600))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 810], f32), T([16, 80, 80, 810], f32, stride=(5184000, 80, 1, 6400))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 1, 1], f32), T([16, 1920, 1, 1], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 1152, 1, 1], f32), T([16, 1152, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 672, 1, 1], f32), T([16, 672, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 480, 1, 1], f32), T([16, 480, 1, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 240, 1, 1], f32), T([16, 240, 1, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 144, 1, 1], f32), T([16, 144, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 1, 1], f32), T([16, 96, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 1, 1], f32), T([16, 16, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 1, 1], f32), T([16, 32, 1, 1], f32)), {})"
        }
    ],
    "aten.silu_.default": [
        {
            "count": 2,
            "inputs": "((T([16, 32, 320, 320], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 8, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 4, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 320, 320], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 144, 160, 160], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 6, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 240, 80, 80], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 10, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 480, 40, 40], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 20, 1, 1], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([16, 672, 40, 40], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 28, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32),), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 1152, 20, 20], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 48, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 1920, 20, 20], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 1, 1], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 10, 10], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 20, 20], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 40, 40], f32),), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 88, 80, 80], f32),), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 88, 5, 5], f32),), {})"
        }
    ],
    "aten.silu_backward.default": [
        {
            "count": 10,
            "inputs": "((T([16, 88, 5, 5], f32), T([16, 88, 5, 5], f32)), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 10, 10], f32), T([16, 88, 10, 10], f32)), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 20, 20], f32), T([16, 88, 20, 20], f32)), {})"
        },
        {
            "count": 14,
            "inputs": "((T([16, 88, 40, 40], f32), T([16, 88, 40, 40], f32)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 88, 80, 80], f32), T([16, 88, 80, 80], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 1, 1], f32), T([16, 80, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 1920, 20, 20], f32), T([16, 1920, 20, 20], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 48, 1, 1], f32), T([16, 48, 1, 1], f32)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 1152, 20, 20], f32), T([16, 1152, 20, 20], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 28, 1, 1], f32), T([16, 28, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32), T([16, 672, 20, 20], f32)), {})"
        },
        {
            "count": 7,
            "inputs": "((T([16, 672, 40, 40], f32), T([16, 672, 40, 40], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 20, 1, 1], f32), T([16, 20, 1, 1], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 480, 40, 40], f32), T([16, 480, 40, 40], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 10, 1, 1], f32), T([16, 10, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32), T([16, 240, 40, 40], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 240, 80, 80], f32), T([16, 240, 80, 80], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 6, 1, 1], f32), T([16, 6, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32), T([16, 144, 80, 80], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 144, 160, 160], f32), T([16, 144, 160, 160], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 4, 1, 1], f32), T([16, 4, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32), T([16, 96, 160, 160], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 320, 320], f32), T([16, 96, 320, 320], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32), T([16, 16, 320, 320], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 8, 1, 1], f32), T([16, 8, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 32, 320, 320], f32), T([16, 32, 320, 320], f32)), {})"
        }
    ],
    "aten.stack.default": [
        {
            "count": 4,
            "inputs": "(([T([16, 88, 10, 10], f32), T([16, 88, 10, 10], f32)], -1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([16, 88, 20, 20], f32), T([16, 88, 20, 20], f32)], -1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([16, 88, 40, 40], f32), T([16, 88, 40, 40], f32)], -1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([16, 88, 80, 80], f32), T([16, 88, 80, 80], f32)], -1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([16, 88, 40, 40], f32), T([16, 88, 40, 40], f32), T([16, 88, 40, 40], f32)], -1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([16, 88, 20, 20], f32), T([16, 88, 20, 20], f32), T([16, 88, 20, 20], f32)], -1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([16, 88, 10, 10], f32), T([16, 88, 10, 10], f32), T([16, 88, 10, 10], f32)], -1), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([16, 88, 5, 5], f32), T([16, 88, 5, 5], f32)], -1), {})"
        },
        {
            "count": 2,
            "inputs": "(([T([], f32), T([], f32), T([], f32), T([], f32), T([], f32)], -1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32)],), {})"
        }
    ],
    "aten.sub.Tensor": [
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), T([16, 80, 80, 36], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)), T([16, 40, 40, 36], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)), T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)), T([16, 20, 20, 36], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)), T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)), T([16, 10, 10, 36], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)), T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)), T([16, 5, 5, 36], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)), T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 810], f32, stride=(20250, 5, 1, 25)), T([16, 5, 5, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 810], f32, stride=(81000, 10, 1, 100)), T([16, 10, 10, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 810], f32, stride=(324000, 20, 1, 400)), T([16, 20, 20, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 810], f32, stride=(1296000, 40, 1, 1600)), T([16, 40, 40, 810], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 810], f32, stride=(5184000, 80, 1, 6400)), T([16, 80, 80, 810], f32)), {})"
        }
    ],
    "aten.sum.default": [
        {
            "count": 20,
            "inputs": "((T([2], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 9, 90], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 9, 90], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], f32, stride=(57600, 40, 1, 1600)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 9, 90], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], f32, stride=(14400, 20, 1, 400)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 9, 90], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], f32, stride=(3600, 10, 1, 100)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 9, 90], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)),), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 5, 5], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([16, 88, 10, 10], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([16, 88, 20, 20], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([16, 88, 40, 40], f32),), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 88, 80, 80], f32),), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 4,
            "inputs": "((T([16, 88, 10, 10, 2], f32), [-1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 20, 20, 2], f32), [-1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 40, 40, 2], f32), [-1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 80, 80, 2], f32), [-1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 40, 40, 3], f32), [-1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 20, 20, 3], f32), [-1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 10, 10, 3], f32), [-1]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 5, 5, 2], f32), [-1]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([5], f32), [-1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1920, 20, 20], f32), [2, 3], True), {})"
        },
        {
            "count": 5,
            "inputs": "((T([16, 1152, 20, 20], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 672, 20, 20], f32), [2, 3], True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 672, 40, 40], f32), [2, 3], True), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 480, 40, 40], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 240, 40, 40], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 240, 80, 80], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 144, 80, 80], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 144, 160, 160], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 96, 160, 160], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 16, 320, 320], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 320, 320], f32), [2, 3], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 20,
            "inputs": "((T([2], f32), T([2], f32), 0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([3], f32), T([3], f32), 0), {})"
        }
    ],
    "aten.upsample_nearest2d.default": [
        {
            "count": 4,
            "inputs": "((T([16, 88, 5, 5], f32), [10, 10]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 10, 10], f32), [20, 20]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 20, 20], f32), [40, 40]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 40, 40], f32), [80, 80]), {})"
        }
    ],
    "aten.upsample_nearest2d_backward.default": [
        {
            "count": 4,
            "inputs": "((T([16, 88, 80, 80], f32), [80, 80], [16, 88, 40, 40]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 40, 40], f32), [40, 40], [16, 88, 20, 20]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 20, 20], f32), [20, 20], [16, 88, 10, 10]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 88, 10, 10], f32), [10, 10], [16, 88, 5, 5]), {})"
        }
    ],
    "aten.where.self": [
        {
            "count": 1,
            "inputs": "((T([16, 5, 5, 36], b8, stride=(900, 5, 1, 25)), T([16, 5, 5, 36], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 10, 10, 36], b8, stride=(3600, 10, 1, 100)), T([16, 10, 10, 36], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 20, 20, 36], b8, stride=(14400, 20, 1, 400)), T([16, 20, 20, 36], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 40, 40, 36], b8, stride=(57600, 40, 1, 1600)), T([16, 40, 40, 36], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 80, 80, 36], b8, stride=(230400, 80, 1, 6400)), T([16, 80, 80, 36], f32), T([], f32)), {})"
        }
    ]
}