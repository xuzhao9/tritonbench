{
    "aten._foreach_add.List": {
        "count": 1,
        "inputs": "(([T([32, 3, 3, 3], f32), T([32, 1, 3, 3], f32), T([8, 32, 1, 1], f32), T([32, 8, 1, 1], f32), T([16, 32, 1, 1], f32), T([16, 1, 3, 3], f32), T([4, 16, 1, 1], f32), T([16, 4, 1, 1], f32), T([16, 16, 1, 1], f32), T([96, 16, 1, 1], f32), T([96, 1, 3, 3], f32), T([4, 96, 1, 1], f32), T([96, 4, 1, 1], f32), T([24, 96, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 3, 3], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([24, 144, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 3, 3], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([24, 144, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 5, 5], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([40, 144, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 5, 5], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([40, 240, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 5, 5], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([40, 240, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 3, 3], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([80, 240, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 5, 5], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([112, 480, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([192, 672, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 3, 3], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([320, 1152, 1, 1], f32), T([1920, 320, 1, 1], f32), T([1920, 1, 3, 3], f32), T([80, 1920, 1, 1], f32), T([1920, 80, 1, 1], f32), T([320, 1920, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 112, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 40, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 112, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([810, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([36, 88, 1, 1], f32)], [T([32, 3, 3, 3], f32), T([32, 1, 3, 3], f32), T([8, 32, 1, 1], f32), T([32, 8, 1, 1], f32), T([16, 32, 1, 1], f32), T([16, 1, 3, 3], f32), T([4, 16, 1, 1], f32), T([16, 4, 1, 1], f32), T([16, 16, 1, 1], f32), T([96, 16, 1, 1], f32), T([96, 1, 3, 3], f32), T([4, 96, 1, 1], f32), T([96, 4, 1, 1], f32), T([24, 96, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 3, 3], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([24, 144, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 3, 3], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([24, 144, 1, 1], f32), T([144, 24, 1, 1], f32), T([144, 1, 5, 5], f32), T([6, 144, 1, 1], f32), T([144, 6, 1, 1], f32), T([40, 144, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 5, 5], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([40, 240, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 5, 5], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([40, 240, 1, 1], f32), T([240, 40, 1, 1], f32), T([240, 1, 3, 3], f32), T([10, 240, 1, 1], f32), T([240, 10, 1, 1], f32), T([80, 240, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 3, 3], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([80, 480, 1, 1], f32), T([480, 80, 1, 1], f32), T([480, 1, 5, 5], f32), T([20, 480, 1, 1], f32), T([480, 20, 1, 1], f32), T([112, 480, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([112, 672, 1, 1], f32), T([672, 112, 1, 1], f32), T([672, 1, 5, 5], f32), T([28, 672, 1, 1], f32), T([672, 28, 1, 1], f32), T([192, 672, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 5, 5], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([192, 1152, 1, 1], f32), T([1152, 192, 1, 1], f32), T([1152, 1, 3, 3], f32), T([48, 1152, 1, 1], f32), T([1152, 48, 1, 1], f32), T([320, 1152, 1, 1], f32), T([1920, 320, 1, 1], f32), T([1920, 1, 3, 3], f32), T([80, 1920, 1, 1], f32), T([1920, 80, 1, 1], f32), T([320, 1920, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 112, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 40, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 112, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 320, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([810, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88, 1, 3, 3], f32), T([36, 88, 1, 1], f32)]), {'alpha': 4e-05})"
    },
    "aten._foreach_norm.Scalar": {
        "count": 1,
        "inputs": "(([T([32, 3, 3, 3], f32), T([32], f32), T([32], f32), T([32, 1, 3, 3], f32), T([32], f32), T([32], f32), T([8, 32, 1, 1], f32), T([8], f32), T([32, 8, 1, 1], f32), T([32], f32), T([16, 32, 1, 1], f32), T([16], f32), T([16], f32), T([16, 1, 3, 3], f32), T([16], f32), T([16], f32), T([4, 16, 1, 1], f32), T([4], f32), T([16, 4, 1, 1], f32), T([16], f32), T([16, 16, 1, 1], f32), T([16], f32), T([16], f32), T([96, 16, 1, 1], f32), T([96], f32), T([96], f32), T([96, 1, 3, 3], f32), T([96], f32), T([96], f32), T([4, 96, 1, 1], f32), T([4], f32), T([96, 4, 1, 1], f32), T([96], f32), T([24, 96, 1, 1], f32), T([24], f32), T([24], f32), T([144, 24, 1, 1], f32), T([144], f32), T([144], f32), T([144, 1, 3, 3], f32), T([144], f32), T([144], f32), T([6, 144, 1, 1], f32), T([6], f32), T([144, 6, 1, 1], f32), T([144], f32), T([24, 144, 1, 1], f32), T([24], f32), T([24], f32), T([144, 24, 1, 1], f32), T([144], f32), T([144], f32), T([144, 1, 3, 3], f32), T([144], f32), T([144], f32), T([6, 144, 1, 1], f32), T([6], f32), T([144, 6, 1, 1], f32), T([144], f32), T([24, 144, 1, 1], f32), T([24], f32), T([24], f32), T([144, 24, 1, 1], f32), T([144], f32), T([144], f32), T([144, 1, 5, 5], f32), T([144], f32), T([144], f32), T([6, 144, 1, 1], f32), T([6], f32), T([144, 6, 1, 1], f32), T([144], f32), T([40, 144, 1, 1], f32), T([40], f32), T([40], f32), T([240, 40, 1, 1], f32), T([240], f32), T([240], f32), T([240, 1, 5, 5], f32), T([240], f32), T([240], f32), T([10, 240, 1, 1], f32), T([10], f32), T([240, 10, 1, 1], f32), T([240], f32), T([40, 240, 1, 1], f32), T([40], f32), T([40], f32), T([240, 40, 1, 1], f32), T([240], f32), T([240], f32), T([240, 1, 5, 5], f32), T([240], f32), T([240], f32), T([10, 240, 1, 1], f32), T([10], f32), T([240, 10, 1, 1], f32), T([240], f32), T([40, 240, 1, 1], f32), T([40], f32), T([40], f32), T([240, 40, 1, 1], f32), T([240], f32), T([240], f32), T([240, 1, 3, 3], f32), T([240], f32), T([240], f32), T([10, 240, 1, 1], f32), T([10], f32), T([240, 10, 1, 1], f32), T([240], f32), T([80, 240, 1, 1], f32), T([80], f32), T([80], f32), T([480, 80, 1, 1], f32), T([480], f32), T([480], f32), T([480, 1, 3, 3], f32), T([480], f32), T([480], f32), T([20, 480, 1, 1], f32), T([20], f32), T([480, 20, 1, 1], f32), T([480], f32), T([80, 480, 1, 1], f32), T([80], f32), T([80], f32), T([480, 80, 1, 1], f32), T([480], f32), T([480], f32), T([480, 1, 3, 3], f32), T([480], f32), T([480], f32), T([20, 480, 1, 1], f32), T([20], f32), T([480, 20, 1, 1], f32), T([480], f32), T([80, 480, 1, 1], f32), T([80], f32), T([80], f32), T([480, 80, 1, 1], f32), T([480], f32), T([480], f32), T([480, 1, 3, 3], f32), T([480], f32), T([480], f32), T([20, 480, 1, 1], f32), T([20], f32), T([480, 20, 1, 1], f32), T([480], f32), T([80, 480, 1, 1], f32), T([80], f32), T([80], f32), T([480, 80, 1, 1], f32), T([480], f32), T([480], f32), T([480, 1, 5, 5], f32), T([480], f32), T([480], f32), T([20, 480, 1, 1], f32), T([20], f32), T([480, 20, 1, 1], f32), T([480], f32), T([112, 480, 1, 1], f32), T([112], f32), T([112], f32), T([672, 112, 1, 1], f32), T([672], f32), T([672], f32), T([672, 1, 5, 5], f32), T([672], f32), T([672], f32), T([28, 672, 1, 1], f32), T([28], f32), T([672, 28, 1, 1], f32), T([672], f32), T([112, 672, 1, 1], f32), T([112], f32), T([112], f32), T([672, 112, 1, 1], f32), T([672], f32), T([672], f32), T([672, 1, 5, 5], f32), T([672], f32), T([672], f32), T([28, 672, 1, 1], f32), T([28], f32), T([672, 28, 1, 1], f32), T([672], f32), T([112, 672, 1, 1], f32), T([112], f32), T([112], f32), T([672, 112, 1, 1], f32), T([672], f32), T([672], f32), T([672, 1, 5, 5], f32), T([672], f32), T([672], f32), T([28, 672, 1, 1], f32), T([28], f32), T([672, 28, 1, 1], f32), T([672], f32), T([112, 672, 1, 1], f32), T([112], f32), T([112], f32), T([672, 112, 1, 1], f32), T([672], f32), T([672], f32), T([672, 1, 5, 5], f32), T([672], f32), T([672], f32), T([28, 672, 1, 1], f32), T([28], f32), T([672, 28, 1, 1], f32), T([672], f32), T([192, 672, 1, 1], f32), T([192], f32), T([192], f32), T([1152, 192, 1, 1], f32), T([1152], f32), T([1152], f32), T([1152, 1, 5, 5], f32), T([1152], f32), T([1152], f32), T([48, 1152, 1, 1], f32), T([48], f32), T([1152, 48, 1, 1], f32), T([1152], f32), T([192, 1152, 1, 1], f32), T([192], f32), T([192], f32), T([1152, 192, 1, 1], f32), T([1152], f32), T([1152], f32), T([1152, 1, 5, 5], f32), T([1152], f32), T([1152], f32), T([48, 1152, 1, 1], f32), T([48], f32), T([1152, 48, 1, 1], f32), T([1152], f32), T([192, 1152, 1, 1], f32), T([192], f32), T([192], f32), T([1152, 192, 1, 1], f32), T([1152], f32), T([1152], f32), T([1152, 1, 5, 5], f32), T([1152], f32), T([1152], f32), T([48, 1152, 1, 1], f32), T([48], f32), T([1152, 48, 1, 1], f32), T([1152], f32), T([192, 1152, 1, 1], f32), T([192], f32), T([192], f32), T([1152, 192, 1, 1], f32), T([1152], f32), T([1152], f32), T([1152, 1, 5, 5], f32), T([1152], f32), T([1152], f32), T([48, 1152, 1, 1], f32), T([48], f32), T([1152, 48, 1, 1], f32), T([1152], f32), T([192, 1152, 1, 1], f32), T([192], f32), T([192], f32), T([1152, 192, 1, 1], f32), T([1152], f32), T([1152], f32), T([1152, 1, 3, 3], f32), T([1152], f32), T([1152], f32), T([48, 1152, 1, 1], f32), T([48], f32), T([1152, 48, 1, 1], f32), T([1152], f32), T([320, 1152, 1, 1], f32), T([320], f32), T([320], f32), T([1920, 320, 1, 1], f32), T([1920], f32), T([1920], f32), T([1920, 1, 3, 3], f32), T([1920], f32), T([1920], f32), T([80, 1920, 1, 1], f32), T([80], f32), T([1920, 80, 1, 1], f32), T([1920], f32), T([320, 1920, 1, 1], f32), T([320], f32), T([320], f32), T([88, 320, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 320, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 112, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 40, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 112, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 320, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([3], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([2], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([810, 88, 1, 1], f32), T([810], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88, 1, 3, 3], f32), T([88, 88, 1, 1], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), T([88, 1, 3, 3], f32), T([36, 88, 1, 1], f32), T([36], f32)], 2.0), {})"
    },
    "aten._to_copy.default": {
        "count": 1,
        "inputs": "((T([16, 5, 5, 9, 1], f32),), {'dtype': i64})"
    },
    "aten.abs.default": {
        "count": 1,
        "inputs": "((T([16, 5, 5, 36], f32, stride=(900, 5, 1, 25)),), {})"
    },
    "aten.add.Tensor": {
        "count": 1,
        "inputs": "((T([], f32), 1e-06), {})"
    },
    "aten.add_.Tensor": {
        "count": 136,
        "inputs": "((T([], i64), 1), {})"
    },
    "aten.bernoulli_.float": {
        "count": 1,
        "inputs": "((T([16, 1, 1, 1], f32), 0.808695652173913), {})"
    },
    "aten.binary_cross_entropy_with_logits.default": {
        "count": 1,
        "inputs": "((T([16, 5, 5, 810], f32, stride=(20250, 5, 1, 25)), T([16, 5, 5, 810], f32), None, None, 0), {})"
    },
    "aten.clamp.default": {
        "count": 1,
        "inputs": "((T([], f32), None, 1.0), {})"
    },
    "aten.clone.default": {
        "count": 1,
        "inputs": "((T([36, 88, 1, 1], f32),), {})"
    },
    "aten.constant_pad_nd.default": {
        "count": 1,
        "inputs": "((T([16, 96, 321, 321], f32), [0, -1, 0, -1]), {})"
    },
    "aten.convolution.default": {
        "count": 1,
        "inputs": "((T([16, 88, 5, 5], f32), T([36, 88, 1, 1], f32), T([36], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
    },
    "aten.convolution_backward.default": {
        "count": 1,
        "inputs": "((T([16, 32, 320, 320], f32), T([16, 3, 641, 641], f32), T([32, 3, 3, 3], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
    },
    "aten.cudnn_batch_norm.default": {
        "count": 10,
        "inputs": "((T([16, 88, 5, 5], f32), T([88], f32), T([88], f32), T([88], f32), T([88], f32), True, 0.01, 0.001), {})"
    },
    "aten.cudnn_batch_norm_backward.default": {
        "count": 2,
        "inputs": "((T([16, 32, 320, 320], f32), T([16, 32, 320, 320], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 0.001, T([0], u8)), {})"
    },
    "aten.div.Scalar": {
        "count": 1,
        "inputs": "((T([16, 32, 320, 320], f32, stride=(32, 1, 0, 0)), 102400), {})"
    },
    "aten.div.Tensor": {
        "count": 10,
        "inputs": "((T([], f32), T([], f32)), {})"
    },
    "aten.div_.Tensor": {
        "count": 1,
        "inputs": "((T([16, 1, 1, 1], f32), 0.808695652173913), {})"
    },
    "aten.ge.Scalar": {
        "count": 1,
        "inputs": "((T([16, 5, 5, 9], f32), 0), {})"
    },
    "aten.le.Scalar": {
        "count": 1,
        "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)), 0.1), {})"
    },
    "aten.linalg_vector_norm.default": {
        "count": 1,
        "inputs": "((T([596], f32), 2.0), {})"
    },
    "aten.max_pool2d_with_indices.default": {
        "count": 4,
        "inputs": "((T([16, 88, 41, 41], f32), [3, 3], [2, 2]), {})"
    },
    "aten.max_pool2d_with_indices_backward.default": {
        "count": 4,
        "inputs": "((T([16, 88, 40, 40], f32), T([16, 88, 81, 81], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([16, 88, 40, 40], i64)), {})"
    },
    "aten.mean.dim": {
        "count": 1,
        "inputs": "((T([16, 1920, 20, 20], f32), [2, 3], True), {})"
    },
    "aten.mul.Scalar": {
        "count": 1,
        "inputs": "((T([16, 80, 80, 810], f32), 1.5), {})"
    },
    "aten.mul.Tensor": {
        "count": 1,
        "inputs": "((T([], f32), 10.0), {})"
    },
    "aten.ne.Scalar": {
        "count": 1,
        "inputs": "((T([16, 5, 5, 36], f32), 0.0), {})"
    },
    "aten.neg.default": {
        "count": 8,
        "inputs": "((T([16, 88, 80, 80], f32),), {})"
    },
    "aten.new_empty.default": {
        "count": 1,
        "inputs": "((T([16, 320, 20, 20], f32), [16, 1, 1, 1]), {'pin_memory': False})"
    },
    "aten.pow.Tensor_Scalar": {
        "count": 1,
        "inputs": "((T([16, 80, 80, 810], f32), 0.5), {})"
    },
    "aten.reciprocal.default": {
        "count": 6,
        "inputs": "((T([], f32),), {})"
    },
    "aten.relu.default": {
        "count": 12,
        "inputs": "((T([3], f32),), {})"
    },
    "aten.rsub.Scalar": {
        "count": 1,
        "inputs": "((T([16, 5, 5, 810], f32, stride=(20250, 5, 1, 25)), 1.0), {})"
    },
    "aten.scatter.value": {
        "count": 1,
        "inputs": "((T([16, 5, 5, 9, 90], f32), -1, T([16, 5, 5, 9, 1], i64), 1), {})"
    },
    "aten.select_backward.default": {
        "count": 12,
        "inputs": "((T([], f32), [3], 0, 0), {})"
    },
    "aten.sgn.default": {
        "count": 1,
        "inputs": "((T([16, 80, 80, 36], f32, stride=(230400, 80, 1, 6400)),), {})"
    },
    "aten.sigmoid.default": {
        "count": 2,
        "inputs": "((T([16, 5, 5, 810], f32, stride=(20250, 5, 1, 25)),), {})"
    },
    "aten.sigmoid_backward.default": {
        "count": 1,
        "inputs": "((T([16, 32, 1, 1], f32), T([16, 32, 1, 1], f32)), {})"
    },
    "aten.silu_.default": {
        "count": 10,
        "inputs": "((T([16, 88, 5, 5], f32),), {})"
    },
    "aten.silu_backward.default": {
        "count": 2,
        "inputs": "((T([16, 32, 320, 320], f32), T([16, 32, 320, 320], f32)), {})"
    },
    "aten.stack.default": {
        "count": 1,
        "inputs": "(([T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32)],), {})"
    },
    "aten.sub.Tensor": {
        "count": 1,
        "inputs": "((T([16, 80, 80, 810], f32, stride=(5184000, 80, 1, 6400)), T([16, 80, 80, 810], f32)), {})"
    },
    "aten.sum.default": {
        "count": 16,
        "inputs": "((T([16, 88, 80, 80], f32),), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 1,
        "inputs": "((T([16, 32, 320, 320], f32), [2, 3], True), {})"
    },
    "aten.threshold_backward.default": {
        "count": 12,
        "inputs": "((T([3], f32), T([3], f32), 0), {})"
    },
    "aten.upsample_nearest2d.default": {
        "count": 4,
        "inputs": "((T([16, 88, 40, 40], f32), [80, 80]), {})"
    },
    "aten.upsample_nearest2d_backward.default": {
        "count": 4,
        "inputs": "((T([16, 88, 10, 10], f32), [10, 10], [16, 88, 5, 5]), {})"
    },
    "aten.where.self": {
        "count": 1,
        "inputs": "((T([16, 80, 80, 36], b8, stride=(230400, 80, 1, 6400)), T([16, 80, 80, 36], f32), T([], f32)), {})"
    }
}