{
    "aten._adaptive_avg_pool2d.default": [
        {
            "count": 2,
            "inputs": "((T([128, 256, 6, 6], f32), [6, 6]), {})"
        }
    ],
    "aten._adaptive_avg_pool2d_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 256, 6, 6], f32), T([128, 256, 6, 6], f32)), {})"
        }
    ],
    "aten._foreach_sqrt.default": [
        {
            "count": 1,
            "inputs": "(([T([64, 3, 11, 11], f32), T([64], f32), T([192, 64, 5, 5], f32), T([192], f32), T([384, 192, 3, 3], f32), T([384], f32), T([256, 384, 3, 3], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([4096, 9216], f32), T([4096], f32), T([4096, 4096], f32), T([4096], f32), T([1000, 4096], f32), T([1000], f32)],), {})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128, 1000], f32), 1, f32), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 2,
            "inputs": "((T([4096], f32), T([128, 9216], f32), T([9216, 4096], f32, stride=(1, 9216))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4096], f32), T([128, 4096], f32), T([4096, 4096], f32, stride=(1, 4096))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1000], f32), T([128, 4096], f32), T([4096, 1000], f32, stride=(1, 4096))), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 2,
            "inputs": "((T([128, 3, 224, 224], f32), T([64, 3, 11, 11], f32), T([64], f32), [4, 4], [2, 2], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 64, 27, 27], f32), T([192, 64, 5, 5], f32), T([192], f32), [1, 1], [2, 2], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 192, 13, 13], f32), T([384, 192, 3, 3], f32), T([384], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 384, 13, 13], f32), T([256, 384, 3, 3], f32), T([256], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 13, 13], f32), T([256, 256, 3, 3], f32), T([256], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 256, 13, 13], f32), T([128, 256, 13, 13], f32), T([256, 256, 3, 3], f32), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 13, 13], f32), T([128, 384, 13, 13], f32), T([256, 384, 3, 3], f32), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 13, 13], f32), T([128, 192, 13, 13], f32), T([384, 192, 3, 3], f32), [384], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 27, 27], f32), T([128, 64, 27, 27], f32), T([192, 64, 5, 5], f32), [192], [1, 1], [2, 2], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 55, 55], f32), T([128, 3, 224, 224], f32), T([64, 3, 11, 11], f32), [64], [4, 4], [2, 2], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 2,
            "inputs": "((T([], f32), 128), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 2,
            "inputs": "((T([128, 64, 55, 55], f32), [3, 3], [2, 2]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 192, 27, 27], f32), [3, 3], [2, 2]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 13, 13], f32), [3, 3], [2, 2]), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 256, 6, 6], f32), T([128, 256, 13, 13], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([128, 256, 6, 6], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 13, 13], f32), T([128, 192, 27, 27], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([128, 192, 13, 13], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 27, 27], f32), T([128, 64, 55, 55], f32), [3, 3], [2, 2], [0, 0], [1, 1], False, T([128, 64, 27, 27], i64)), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([1000, 4096], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 128], f32, stride=(1, 1000)), T([128, 4096], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 4096], f32), T([4096, 4096], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4096, 128], f32, stride=(1, 4096)), T([128, 4096], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 4096], f32), T([4096, 9216], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4096, 128], f32, stride=(1, 4096)), T([128, 9216], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), T([128, 1000], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32, stride=(0, 0)), T([128, 1000], f32)), {})"
        }
    ],
    "aten.native_dropout.default": [
        {
            "count": 2,
            "inputs": "((T([128, 9216], f32), 0.5, True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 4096], f32), 0.5, True), {})"
        }
    ],
    "aten.native_dropout_backward.default": [
        {
            "count": 1,
            "inputs": "((T([128, 4096], f32), T([128, 4096], b8), 2.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 9216], f32), T([128, 9216], b8), 2.0), {})"
        }
    ],
    "aten.neg.default": [
        {
            "count": 2,
            "inputs": "((T([], f32),), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 2,
            "inputs": "((T([128, 64, 55, 55], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 192, 27, 27], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 384, 13, 13], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 256, 13, 13], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 4096], f32),), {})"
        }
    ],
    "aten.sum.default": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32),), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([128, 1000], f32), [0], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 4096], f32), [0], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 2,
            "inputs": "((T([128, 4096], f32), T([128, 4096], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 13, 13], f32), T([128, 256, 13, 13], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 13, 13], f32), T([128, 384, 13, 13], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 192, 27, 27], f32), T([128, 192, 27, 27], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 64, 55, 55], f32), T([128, 64, 55, 55], f32), 0), {})"
        }
    ]
}