{
    "aten._foreach_sqrt.default": [
        {
            "count": 1,
            "inputs": "(([T([50257, 1280], f32), T([1024, 1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 3840], f32), T([3840], f32), T([1280, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32), T([1280, 5120], f32), T([5120], f32), T([5120, 1280], f32), T([1280], f32), T([1280], f32), T([1280], f32)],), {})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([2044, 50257], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([2044, 50257], f32), T([2044, 50257], f32), 1, f32), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention.default": [
        {
            "count": 36,
            "inputs": "((T([4, 20, 512, 64], f32, stride=(1966080, 64, 3840, 1)), T([4, 20, 512, 64], f32, stride=(1966080, 64, 3840, 1)), T([4, 20, 512, 64], f32, stride=(1966080, 64, 3840, 1)), None, True, 0.1, True), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention_backward.default": [
        {
            "count": 36,
            "inputs": "((T([4, 20, 512, 64], f32, stride=(655360, 64, 1280, 1)), T([4, 20, 512, 64], f32, stride=(1966080, 64, 3840, 1)), T([4, 20, 512, 64], f32, stride=(1966080, 64, 3840, 1)), T([4, 20, 512, 64], f32, stride=(1966080, 64, 3840, 1)), None, T([4, 20, 512, 64], f32, stride=(655360, 64, 1280, 1)), T([4, 20, 512], f32), T([], i64), T([], i64), 0.1, [True, True, True, False], True), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 1,
            "inputs": "((T([2048, 50257], f32), [4, 512, 50257]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 1,
            "inputs": "((T([4, 512, 1280], f32), T([1, 512, 1280], f32)), {})"
        },
        {
            "count": 144,
            "inputs": "((T([4, 512, 1280], f32), T([4, 512, 1280], f32)), {})"
        },
        {
            "count": 108,
            "inputs": "((T([4, 512, 5120], f32), T([4, 512, 5120], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([4, 512, 5120], f32), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([50257, 1280], f32), T([50257, 1280], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 36,
            "inputs": "((T([3840], f32), T([2048, 1280], f32), T([1280, 3840], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([1280], f32), T([2048, 1280], f32), T([1280, 1280], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([5120], f32), T([2048, 1280], f32), T([1280, 5120], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([1280], f32), T([2048, 5120], f32), T([5120, 1280], f32)), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 36,
            "inputs": "(([T([4, 512, 1280], f32), T([4, 512, 1280], f32), T([4, 512, 1280], f32)], 2), {})"
        }
    ],
    "aten.embedding.default": [
        {
            "count": 1,
            "inputs": "((T([50257, 1280], f32), T([4, 512], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 1280], f32), T([1, 512], i64)), {})"
        }
    ],
    "aten.embedding_dense_backward.default": [
        {
            "count": 1,
            "inputs": "((T([1, 512, 1280], f32), T([1, 512], i64), 1024, -1, False), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 512, 1280], f32), T([4, 512], i64), 50257, -1, False), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([2048, 1280], f32), T([1280, 50257], f32, stride=(1, 1280))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([50257, 2048], f32, stride=(1, 50257)), T([2048, 1280], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2048, 50257], f32), T([50257, 1280], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([2048, 1280], f32), T([1280, 5120], f32, stride=(1, 1280))), {})"
        },
        {
            "count": 36,
            "inputs": "((T([5120, 2048], f32, stride=(1, 5120)), T([2048, 1280], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([2048, 5120], f32), T([5120, 1280], f32, stride=(1, 5120))), {})"
        },
        {
            "count": 36,
            "inputs": "((T([1280, 2048], f32, stride=(1, 1280)), T([2048, 5120], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([2048, 1280], f32), T([1280, 1280], f32, stride=(1, 1280))), {})"
        },
        {
            "count": 36,
            "inputs": "((T([1280, 2048], f32, stride=(1, 1280)), T([2048, 1280], f32)), {})"
        },
        {
            "count": 36,
            "inputs": "((T([2048, 3840], f32), T([3840, 1280], f32, stride=(1, 3840))), {})"
        },
        {
            "count": 36,
            "inputs": "((T([1280, 2048], f32, stride=(1, 1280)), T([2048, 3840], f32)), {})"
        }
    ],
    "aten.mul.Scalar": [
        {
            "count": 36,
            "inputs": "((T([4, 512, 5120], f32), 3.0), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 72,
            "inputs": "((T([4, 512, 5120], f32), 0.5), {})"
        },
        {
            "count": 72,
            "inputs": "((T([4, 512, 5120], f32), 0.044715), {})"
        },
        {
            "count": 72,
            "inputs": "((T([4, 512, 5120], f32), 0.7978845608028654), {})"
        },
        {
            "count": 144,
            "inputs": "((T([4, 512, 5120], f32), T([4, 512, 5120], f32)), {})"
        }
    ],
    "aten.native_dropout.default": [
        {
            "count": 73,
            "inputs": "((T([4, 512, 1280], f32), 0.1, True), {})"
        }
    ],
    "aten.native_dropout_backward.default": [
        {
            "count": 73,
            "inputs": "((T([4, 512, 1280], f32), T([4, 512, 1280], b8), 1.1111111111111112), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 73,
            "inputs": "((T([4, 512, 1280], f32), [1280], T([1280], f32), T([1280], f32), 1e-05), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 73,
            "inputs": "((T([4, 512, 1280], f32), T([4, 512, 1280], f32), [1280], T([4, 512, 1], f32), T([4, 512, 1], f32), T([1280], f32), T([1280], f32), [True, True, True]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([2044, 50257], f32), T([2044], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([2044, 50257], f32), T([2044], i64), None, 1, -100), {})"
        }
    ],
    "aten.pow.Tensor_Scalar": [
        {
            "count": 36,
            "inputs": "((T([4, 512, 5120], f32), 3.0), {})"
        },
        {
            "count": 36,
            "inputs": "((T([4, 512, 5120], f32), 2.0), {})"
        }
    ],
    "aten.slice_backward.default": [
        {
            "count": 1,
            "inputs": "((T([4, 511, 50257], f32), [4, 512, 50257], 1, 0, -1, 1), {})"
        }
    ],
    "aten.split.Tensor": [
        {
            "count": 36,
            "inputs": "((T([4, 512, 3840], f32), 1280, 2), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 72,
            "inputs": "((T([2048, 1280], f32), [0], True), {})"
        },
        {
            "count": 36,
            "inputs": "((T([2048, 5120], f32), [0], True), {})"
        },
        {
            "count": 36,
            "inputs": "((T([2048, 3840], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 512, 1280], f32), [0], True), {})"
        }
    ],
    "aten.tanh.default": [
        {
            "count": 36,
            "inputs": "((T([4, 512, 5120], f32),), {})"
        }
    ],
    "aten.tanh_backward.default": [
        {
            "count": 36,
            "inputs": "((T([4, 512, 5120], f32), T([4, 512, 5120], f32)), {})"
        }
    ]
}