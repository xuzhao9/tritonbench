{
    "aten._to_copy.default": [
        {
            "count": 1,
            "inputs": "((T([4], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 416, 416], u8),), {'dtype': f32})"
        },
        {
            "count": 1,
            "inputs": "((T([4, 2], i64),), {'dtype': f32})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 2], f32, stride=(6, 1)),), {'dtype': i64})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 2], f32),), {'dtype': i64})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32, stride=(6, 1)),), {'dtype': i64})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32),), {'dtype': i64})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 2], f32, stride=(6, 1)),), {'dtype': i64})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 2], f32),), {'dtype': i64})"
        },
        {
            "count": 3,
            "inputs": "((T([2], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 1,
            "inputs": "((T([16, 3, 85, 52, 52], f32), [16, 255, 52, 52]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 85, 26, 26], f32), [16, 255, 26, 26]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 85, 13, 13], f32), [16, 255, 13, 13]), {})"
        }
    ],
    "aten.abs.default": [
        {
            "count": 1,
            "inputs": "((T([1], f32),), {})"
        }
    ],
    "aten.add.Scalar": [
        {
            "count": 1,
            "inputs": "((T([16, 3, 52, 52], f32), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 80], f32), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 26, 26], f32), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 80], f32), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 13, 13], f32), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 80], f32), 1), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 2,
            "inputs": "((T([16, 64, 208, 208], f32), T([16, 64, 208, 208], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([16, 128, 104, 104], f32), T([16, 128, 104, 104], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 256, 52, 52], f32), T([16, 256, 52, 52], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([16, 512, 26, 26], f32), T([16, 512, 26, 26], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 1024, 13, 13], f32), T([16, 1024, 13, 13], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3, 1], f32), T([1, 155], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([116], f32, stride=(4,)), T([116], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([116], f32), 1e-16), {})"
        },
        {
            "count": 12,
            "inputs": "((T([116], f32), T([116], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116], f32), 1.0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([172], f32, stride=(4,)), T([172], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([172], f32), 1e-16), {})"
        },
        {
            "count": 12,
            "inputs": "((T([172], f32), T([172], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172], f32), 1.0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([203], f32, stride=(4,)), T([203], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([203], f32), 1e-16), {})"
        },
        {
            "count": 12,
            "inputs": "((T([203], f32), T([203], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203], f32), 1.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1], f32), T([1], f32)), {})"
        },
        {
            "count": 7,
            "inputs": "((T([4, 203], f32), T([4, 203], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([203, 85], f32), T([203, 85], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 52, 52, 85], f32), T([16, 3, 52, 52, 85], f32)), {})"
        },
        {
            "count": 7,
            "inputs": "((T([4, 172], f32), T([4, 172], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([172, 85], f32), T([172, 85], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 26, 26, 85], f32), T([16, 3, 26, 26, 85], f32)), {})"
        },
        {
            "count": 7,
            "inputs": "((T([4, 116], f32), T([4, 116], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([116, 85], f32), T([116, 85], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 13, 13, 85], f32), T([16, 3, 13, 13, 85], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 26, 26], f32), T([16, 256, 26, 26], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 512, 13, 13], f32), T([16, 512, 13, 13], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 13, 13], f32, stride=(346112, 169, 13, 1)), T([16, 512, 13, 13], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 26, 26], f32, stride=(519168, 676, 26, 1)), T([16, 512, 26, 26], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 52, 52], f32, stride=(1038336, 2704, 52, 1)), T([16, 256, 52, 52], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4], f32), T([4], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 73,
            "inputs": "((T([], i64), 1), {})"
        },
        {
            "count": 9,
            "inputs": "((T([1], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 3, 3, 3], f32), T([32, 3, 3, 3], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([32], f32), T([32], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 32, 3, 3], f32), T([64, 32, 3, 3], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([64], f32), T([64], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 1, 1], f32), T([32, 64, 1, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 3, 3], f32), T([128, 64, 3, 3], f32)), {})"
        },
        {
            "count": 60,
            "inputs": "((T([128], f32), T([128], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 128, 1, 1], f32), T([64, 128, 1, 1], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([256, 128, 3, 3], f32), T([256, 128, 3, 3], f32)), {})"
        },
        {
            "count": 96,
            "inputs": "((T([256], f32), T([256], f32)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([128, 256, 1, 1], f32), T([128, 256, 1, 1], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([512, 256, 3, 3], f32), T([512, 256, 3, 3], f32)), {})"
        },
        {
            "count": 80,
            "inputs": "((T([512], f32), T([512], f32)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([256, 512, 1, 1], f32), T([256, 512, 1, 1], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1024, 512, 3, 3], f32), T([1024, 512, 3, 3], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([1024], f32), T([1024], f32)), {})"
        },
        {
            "count": 7,
            "inputs": "((T([512, 1024, 1, 1], f32), T([512, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 2048, 1, 1], f32), T([512, 2048, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 1024, 1, 1], f32), T([255, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([255], f32), T([255], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3, 2], f32), T([3, 2], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1, 3, 1, 1, 2], f32), T([1, 3, 1, 1, 2], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2], f32), T([2], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 768, 1, 1], f32), T([256, 768, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 512, 1, 1], f32), T([255, 512, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 1, 1], f32), T([128, 384, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 256, 1, 1], f32), T([255, 256, 1, 1], f32)), {})"
        }
    ],
    "aten.binary_cross_entropy_with_logits.default": [
        {
            "count": 1,
            "inputs": "((T([116, 80], f32, stride=(85, 1)), T([116, 80], f32), None, T([1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 13, 13], f32, stride=(43095, 14365, 1105, 85)), T([16, 3, 13, 13], f32), None, T([1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 80], f32, stride=(85, 1)), T([172, 80], f32), None, T([1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 26, 26], f32, stride=(172380, 57460, 2210, 85)), T([16, 3, 26, 26], f32), None, T([1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 80], f32, stride=(85, 1)), T([203, 80], f32), None, T([1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 52, 52], f32, stride=(689520, 229840, 4420, 85)), T([16, 3, 52, 52], f32), None, T([1], f32)), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 1,
            "inputs": "(([T([16, 512, 13, 13], f32), T([16, 512, 13, 13], f32), T([16, 512, 13, 13], f32), T([16, 512, 13, 13], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([16, 256, 26, 26], f32), T([16, 512, 26, 26], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([16, 128, 52, 52], f32), T([16, 256, 52, 52], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([116, 2], f32), T([116, 2], f32, stride=(6, 1))], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([172, 2], f32), T([172, 2], f32, stride=(6, 1))], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([203, 2], f32), T([203, 2], f32, stride=(6, 1))], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([116, 2], f32), T([116, 2], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([172, 2], f32), T([172, 2], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([203, 2], f32), T([203, 2], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([1], f32), T([1], f32), T([1], f32), T([1], f32)],), {})"
        }
    ],
    "aten.clamp.default": [
        {
            "count": 1,
            "inputs": "((T([116, 2], f32), None, 1000.0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([116], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32), None, 1000.0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([172], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 2], f32), None, 1000.0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([203], f32), 0), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 4,
            "inputs": "((T([32], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 30,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 48,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 16,
            "inputs": "((T([1024], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 3, 3, 3], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 32, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 3, 3], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 128, 1, 1], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([256, 128, 3, 3], f32),), {})"
        },
        {
            "count": 11,
            "inputs": "((T([128, 256, 1, 1], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([512, 256, 3, 3], f32),), {})"
        },
        {
            "count": 11,
            "inputs": "((T([256, 512, 1, 1], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1024, 512, 3, 3], f32),), {})"
        },
        {
            "count": 7,
            "inputs": "((T([512, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 768, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 256, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([255], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([16, 3, 416, 416], f32), T([32, 3, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 416, 416], f32), T([64, 32, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 64, 208, 208], f32), T([32, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 208, 208], f32), T([64, 32, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 64, 208, 208], f32), T([128, 64, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 128, 104, 104], f32), T([64, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 64, 104, 104], f32), T([128, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 128, 104, 104], f32), T([256, 128, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 256, 52, 52], f32), T([128, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 128, 52, 52], f32), T([256, 128, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 52, 52], f32), T([512, 256, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 512, 26, 26], f32), T([256, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 256, 26, 26], f32), T([512, 256, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 26, 26], f32), T([1024, 512, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 7,
            "inputs": "((T([16, 1024, 13, 13], f32), T([512, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 7,
            "inputs": "((T([16, 512, 13, 13], f32), T([1024, 512, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 2048, 13, 13], f32), T([512, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1024, 13, 13], f32), T([255, 1024, 1, 1], f32), T([255], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 13, 13], f32), T([256, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 768, 26, 26], f32), T([256, 768, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 26, 26], f32), T([255, 512, 1, 1], f32), T([255], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 26, 26], f32), T([128, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 384, 52, 52], f32), T([128, 384, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 52, 52], f32), T([255, 256, 1, 1], f32), T([255], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([16, 255, 52, 52], f32), T([16, 256, 52, 52], f32), T([255, 256, 1, 1], f32), [255], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 256, 52, 52], f32), T([16, 128, 52, 52], f32), T([256, 128, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 128, 52, 52], f32), T([16, 256, 52, 52], f32), T([128, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 128, 52, 52], f32), T([16, 384, 52, 52], f32), T([128, 384, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 128, 26, 26], f32), T([16, 256, 26, 26], f32), T([128, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 255, 26, 26], f32), T([16, 512, 26, 26], f32), T([255, 512, 1, 1], f32), [255], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 512, 26, 26], f32), T([16, 256, 26, 26], f32), T([512, 256, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 10,
            "inputs": "((T([16, 256, 26, 26], f32), T([16, 512, 26, 26], f32), T([256, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 26, 26], f32), T([16, 768, 26, 26], f32), T([256, 768, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 13, 13], f32), T([16, 512, 13, 13], f32), T([256, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 255, 13, 13], f32), T([16, 1024, 13, 13], f32), T([255, 1024, 1, 1], f32), [255], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 7,
            "inputs": "((T([16, 1024, 13, 13], f32), T([16, 512, 13, 13], f32), T([1024, 512, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 7,
            "inputs": "((T([16, 512, 13, 13], f32), T([16, 1024, 13, 13], f32), T([512, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 13, 13], f32), T([16, 2048, 13, 13], f32), T([512, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 1024, 13, 13], f32), T([16, 512, 26, 26], f32), T([1024, 512, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 26, 26], f32), T([16, 256, 52, 52], f32), T([512, 256, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 52, 52], f32), T([16, 128, 104, 104], f32), T([256, 128, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 128, 104, 104], f32), T([16, 64, 104, 104], f32), T([128, 64, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 64, 104, 104], f32), T([16, 128, 104, 104], f32), T([64, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 128, 104, 104], f32), T([16, 64, 208, 208], f32), T([128, 64, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 64, 208, 208], f32), T([16, 32, 208, 208], f32), T([64, 32, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 208, 208], f32), T([16, 64, 208, 208], f32), T([32, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 64, 208, 208], f32), T([16, 32, 416, 416], f32), T([64, 32, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 416, 416], f32), T([16, 3, 416, 416], f32), T([32, 3, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.copy_.default": [
        {
            "count": 3,
            "inputs": "((T([4], f32), T([4], i64)), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([16, 32, 416, 416], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 64, 208, 208], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 208, 208], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 128, 104, 104], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 64, 104, 104], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 256, 52, 52], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 128, 52, 52], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 512, 26, 26], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 256, 26, 26], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 1024, 13, 13], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 512, 13, 13], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 13, 13], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.03, 0.0001), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 128, 26, 26], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.03, 0.0001), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 12,
            "inputs": "((T([16, 256, 52, 52], f32), T([16, 256, 52, 52], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 128, 52, 52], f32), T([16, 128, 52, 52], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 128, 26, 26], f32), T([16, 128, 26, 26], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 512, 26, 26], f32), T([16, 512, 26, 26], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 256, 26, 26], f32), T([16, 256, 26, 26], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 13, 13], f32), T([16, 256, 13, 13], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 1024, 13, 13], f32), T([16, 1024, 13, 13], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 512, 13, 13], f32), T([16, 512, 13, 13], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 128, 104, 104], f32), T([16, 128, 104, 104], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 64, 104, 104], f32), T([16, 64, 104, 104], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 64, 208, 208], f32), T([16, 64, 208, 208], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 208, 208], f32), T([16, 32, 208, 208], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 0.0001, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 416, 416], f32), T([16, 32, 416, 416], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 0.0001, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([203], f32, stride=(0,)), 203), {})"
        },
        {
            "count": 8,
            "inputs": "((T([203], f32), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172], f32, stride=(0,)), 172), {})"
        },
        {
            "count": 8,
            "inputs": "((T([172], f32), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116], f32, stride=(0,)), 116), {})"
        },
        {
            "count": 8,
            "inputs": "((T([116], f32), 2), {})"
        }
    ],
    "aten.div.Tensor": [
        {
            "count": 1,
            "inputs": "((T([16, 3, 416, 416], f32), 255.0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3, 155], f32), T([3, 155], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([116], f32, stride=(4,)), 2), {})"
        },
        {
            "count": 8,
            "inputs": "((T([116], f32), T([116], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([172], f32, stride=(4,)), 2), {})"
        },
        {
            "count": 8,
            "inputs": "((T([172], f32), T([172], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([203], f32, stride=(4,)), 2), {})"
        },
        {
            "count": 8,
            "inputs": "((T([203], f32), T([203], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([203], f32), 2), {})"
        },
        {
            "count": 4,
            "inputs": "((T([172], f32), 2), {})"
        },
        {
            "count": 4,
            "inputs": "((T([116], f32), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4], f32), 1), {})"
        }
    ],
    "aten.div_.Scalar": [
        {
            "count": 1,
            "inputs": "((T([16, 3, 52, 52], f32), 129792), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 80], f32), 16240), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 26, 26], f32), 32448), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 80], f32), 13760), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 13, 13], f32), 8112), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 80], f32), 9280), {})"
        }
    ],
    "aten.eq.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1], f32), T([1], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([203], f32), T([203], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([172], f32), T([172], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([116], f32), T([116], f32)), {})"
        }
    ],
    "aten.exp.default": [
        {
            "count": 1,
            "inputs": "((T([116, 2], f32, stride=(85, 1)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32, stride=(85, 1)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 2], f32, stride=(85, 1)),), {})"
        }
    ],
    "aten.ge.Scalar": [
        {
            "count": 2,
            "inputs": "((T([203], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([172], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([116], f32), 0), {})"
        }
    ],
    "aten.gt.Scalar": [
        {
            "count": 3,
            "inputs": "((T([3, 155], f32), 0.2), {})"
        }
    ],
    "aten.gt.Tensor": [
        {
            "count": 4,
            "inputs": "((T([203], f32), T([203], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([172], f32), T([172], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([116], f32), T([116], f32)), {})"
        }
    ],
    "aten.index.Tensor": [
        {
            "count": 3,
            "inputs": "((T([5], i64), [T([4], i64)]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3, 155], i64), [T([3, 155], b8)]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3, 155, 6], f32), [T([3, 155], b8)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([3, 2], f32), [T([116], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([3, 2], f32), [T([172], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([3, 2], f32), [T([203], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 13, 13, 85], f32), [T([116], i64, stride=(2,)), T([116], i64), T([116], i64, stride=(2,)), T([116], i64, stride=(2,))]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 26, 26, 85], f32), [T([172], i64, stride=(2,)), T([172], i64), T([172], i64, stride=(2,)), T([172], i64, stride=(2,))]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 52, 52, 85], f32), [T([203], i64, stride=(2,)), T([203], i64), T([203], i64, stride=(2,)), T([203], i64, stride=(2,))]), {})"
        }
    ],
    "aten.index_put.default": [
        {
            "count": 1,
            "inputs": "((T([16, 3, 52, 52, 85], f32), [T([203], i64, stride=(2,)), T([203], i64), T([203], i64, stride=(2,)), T([203], i64, stride=(2,))], T([203, 85], f32), True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 26, 26, 85], f32), [T([172], i64, stride=(2,)), T([172], i64), T([172], i64, stride=(2,)), T([172], i64, stride=(2,))], T([172, 85], f32), True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 13, 13, 85], f32), [T([116], i64, stride=(2,)), T([116], i64), T([116], i64, stride=(2,)), T([116], i64, stride=(2,))], T([116, 85], f32), True), {})"
        }
    ],
    "aten.index_put_.default": [
        {
            "count": 1,
            "inputs": "((T([16, 3, 13, 13], f32), [T([116], i64, stride=(2,)), T([116], i64), T([116], i64, stride=(2,)), T([116], i64, stride=(2,))], T([116], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 80], f32), [T([116], i64), T([116], i64, stride=(2,))], T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 26, 26], f32), [T([172], i64, stride=(2,)), T([172], i64), T([172], i64, stride=(2,)), T([172], i64, stride=(2,))], T([172], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 80], f32), [T([172], i64), T([172], i64, stride=(2,))], T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 52, 52], f32), [T([203], i64, stride=(2,)), T([203], i64), T([203], i64, stride=(2,)), T([203], i64, stride=(2,))], T([203], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 80], f32), [T([203], i64), T([203], i64, stride=(2,))], T([], f32)), {})"
        }
    ],
    "aten.le.Scalar": [
        {
            "count": 1,
            "inputs": "((T([203, 2], f32), 1000.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32), 1000.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 2], f32), 1000.0), {})"
        }
    ],
    "aten.leaky_relu_.default": [
        {
            "count": 1,
            "inputs": "((T([16, 32, 416, 416], f32), 0.1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 64, 208, 208], f32), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 208, 208], f32), 0.1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 128, 104, 104], f32), 0.1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 64, 104, 104], f32), 0.1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 256, 52, 52], f32), 0.1), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 128, 52, 52], f32), 0.1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 512, 26, 26], f32), 0.1), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 256, 26, 26], f32), 0.1), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 1024, 13, 13], f32), 0.1), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 512, 13, 13], f32), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 13, 13], f32), 0.1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 128, 26, 26], f32), 0.1), {})"
        }
    ],
    "aten.leaky_relu_backward.default": [
        {
            "count": 12,
            "inputs": "((T([16, 256, 52, 52], f32), T([16, 256, 52, 52], f32), 0.1, True), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 128, 52, 52], f32), T([16, 128, 52, 52], f32), 0.1, True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 128, 26, 26], f32), T([16, 128, 26, 26], f32), 0.1, True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([16, 512, 26, 26], f32), T([16, 512, 26, 26], f32), 0.1, True), {})"
        },
        {
            "count": 11,
            "inputs": "((T([16, 256, 26, 26], f32), T([16, 256, 26, 26], f32), 0.1, True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 13, 13], f32), T([16, 256, 13, 13], f32), 0.1, True), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 1024, 13, 13], f32), T([16, 1024, 13, 13], f32), 0.1, True), {})"
        },
        {
            "count": 8,
            "inputs": "((T([16, 512, 13, 13], f32), T([16, 512, 13, 13], f32), 0.1, True), {})"
        },
        {
            "count": 3,
            "inputs": "((T([16, 128, 104, 104], f32), T([16, 128, 104, 104], f32), 0.1, True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 64, 104, 104], f32), T([16, 64, 104, 104], f32), 0.1, True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 64, 208, 208], f32), T([16, 64, 208, 208], f32), 0.1, True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 208, 208], f32), T([16, 32, 208, 208], f32), 0.1, True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 32, 416, 416], f32), T([16, 32, 416, 416], f32), 0.1, True), {})"
        }
    ],
    "aten.lt.Scalar": [
        {
            "count": 3,
            "inputs": "((T([], i64), 80), {})"
        }
    ],
    "aten.lt.Tensor": [
        {
            "count": 4,
            "inputs": "((T([203], f32), T([203], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([172], f32), T([172], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([116], f32), T([116], f32)), {})"
        }
    ],
    "aten.masked_fill_.Scalar": [
        {
            "count": 8,
            "inputs": "((T([203], f32), T([203], b8), 0), {})"
        },
        {
            "count": 8,
            "inputs": "((T([172], f32), T([172], b8), 0), {})"
        },
        {
            "count": 8,
            "inputs": "((T([116], f32), T([116], b8), 0), {})"
        }
    ],
    "aten.max.default": [
        {
            "count": 1,
            "inputs": "((T([116], i64, stride=(2,)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172], i64, stride=(2,)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203], i64, stride=(2,)),), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 1,
            "inputs": "((T([16, 512, 13, 13], f32), [5, 5], [1, 1], [2, 2]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 13, 13], f32), [9, 9], [1, 1], [4, 4]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 13, 13], f32), [13, 13], [1, 1], [6, 6]), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 1,
            "inputs": "((T([16, 512, 13, 13], f32, stride=(346112, 169, 13, 1)), T([16, 512, 13, 13], f32), [13, 13], [1, 1], [6, 6], [1, 1], False, T([16, 512, 13, 13], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 13, 13], f32, stride=(346112, 169, 13, 1)), T([16, 512, 13, 13], f32), [9, 9], [1, 1], [4, 4], [1, 1], False, T([16, 512, 13, 13], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 512, 13, 13], f32, stride=(346112, 169, 13, 1)), T([16, 512, 13, 13], f32), [5, 5], [1, 1], [2, 2], [1, 1], False, T([16, 512, 13, 13], i64)), {})"
        }
    ],
    "aten.maximum.default": [
        {
            "count": 4,
            "inputs": "((T([116], f32), T([116], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([172], f32), T([172], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([203], f32), T([203], f32)), {})"
        }
    ],
    "aten.mean.default": [
        {
            "count": 1,
            "inputs": "((T([116], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203], f32),), {})"
        }
    ],
    "aten.minimum.default": [
        {
            "count": 3,
            "inputs": "((T([3, 1, 2], f32), T([1, 155, 2], f32, stride=(930, 6, 1))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([116], f32), T([116], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([172], f32), T([172], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([203], f32), T([203], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 3,
            "inputs": "((T([155, 6], f32), T([6], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([116, 2], f32), T([116, 2], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([116], f32), T([116], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116], f32), 0.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([172, 2], f32), T([172, 2], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([172], f32), T([172], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172], f32), 0.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([203, 2], f32), T([203, 2], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([203], f32), T([203], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203], f32), 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], b8), T([1], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), 0.25), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), 37.4), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), 64.3), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), 3.54), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), T([16, 3, 52, 52], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 52, 52], f32), T([16, 3, 52, 52], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 52, 52], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), T([203, 80], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 80], f32), T([203, 80], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 80], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 2], f32, stride=(1, 203)), T([203, 2], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), T([16, 3, 26, 26], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 26, 26], f32), T([16, 3, 26, 26], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 26, 26], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), T([172, 80], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 80], f32), T([172, 80], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 80], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32, stride=(1, 172)), T([172, 2], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), T([16, 3, 13, 13], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 13, 13], f32), T([16, 3, 13, 13], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 13, 13], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), T([116, 80], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 80], f32), T([116, 80], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 80], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 2], f32, stride=(1, 116)), T([116, 2], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 3, 3, 3], f32), 0.9995001749666714), {})"
        },
        {
            "count": 8,
            "inputs": "((T([32], f32), 0.9995001749666714), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 32, 3, 3], f32), 0.9995001749666714), {})"
        },
        {
            "count": 16,
            "inputs": "((T([64], f32), 0.9995001749666714), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 1, 1], f32), 0.9995001749666714), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 3, 3], f32), 0.9995001749666714), {})"
        },
        {
            "count": 60,
            "inputs": "((T([128], f32), 0.9995001749666714), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 128, 1, 1], f32), 0.9995001749666714), {})"
        },
        {
            "count": 12,
            "inputs": "((T([256, 128, 3, 3], f32), 0.9995001749666714), {})"
        },
        {
            "count": 96,
            "inputs": "((T([256], f32), 0.9995001749666714), {})"
        },
        {
            "count": 11,
            "inputs": "((T([128, 256, 1, 1], f32), 0.9995001749666714), {})"
        },
        {
            "count": 12,
            "inputs": "((T([512, 256, 3, 3], f32), 0.9995001749666714), {})"
        },
        {
            "count": 80,
            "inputs": "((T([512], f32), 0.9995001749666714), {})"
        },
        {
            "count": 11,
            "inputs": "((T([256, 512, 1, 1], f32), 0.9995001749666714), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1024, 512, 3, 3], f32), 0.9995001749666714), {})"
        },
        {
            "count": 32,
            "inputs": "((T([1024], f32), 0.9995001749666714), {})"
        },
        {
            "count": 7,
            "inputs": "((T([512, 1024, 1, 1], f32), 0.9995001749666714), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 2048, 1, 1], f32), 0.9995001749666714), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 1024, 1, 1], f32), 0.9995001749666714), {})"
        },
        {
            "count": 3,
            "inputs": "((T([255], f32), 0.9995001749666714), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3, 2], f32), 0.9995001749666714), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1, 3, 1, 1, 2], f32), 0.9995001749666714), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2], f32), 0.9995001749666714), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 768, 1, 1], f32), 0.9995001749666714), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 512, 1, 1], f32), 0.9995001749666714), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 1, 1], f32), 0.9995001749666714), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 256, 1, 1], f32), 0.9995001749666714), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4], f32), 0), {})"
        }
    ],
    "aten.mul_.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1], f32), 3.54), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), 64.3), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), 37.4), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), 0.25), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 3, 3, 3], f32), 0.000499825033328626), {})"
        },
        {
            "count": 8,
            "inputs": "((T([32], f32), 0.000499825033328626), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 32, 3, 3], f32), 0.000499825033328626), {})"
        },
        {
            "count": 16,
            "inputs": "((T([64], f32), 0.000499825033328626), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 64, 1, 1], f32), 0.000499825033328626), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 64, 3, 3], f32), 0.000499825033328626), {})"
        },
        {
            "count": 60,
            "inputs": "((T([128], f32), 0.000499825033328626), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 128, 1, 1], f32), 0.000499825033328626), {})"
        },
        {
            "count": 12,
            "inputs": "((T([256, 128, 3, 3], f32), 0.000499825033328626), {})"
        },
        {
            "count": 96,
            "inputs": "((T([256], f32), 0.000499825033328626), {})"
        },
        {
            "count": 11,
            "inputs": "((T([128, 256, 1, 1], f32), 0.000499825033328626), {})"
        },
        {
            "count": 12,
            "inputs": "((T([512, 256, 3, 3], f32), 0.000499825033328626), {})"
        },
        {
            "count": 80,
            "inputs": "((T([512], f32), 0.000499825033328626), {})"
        },
        {
            "count": 11,
            "inputs": "((T([256, 512, 1, 1], f32), 0.000499825033328626), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1024, 512, 3, 3], f32), 0.000499825033328626), {})"
        },
        {
            "count": 32,
            "inputs": "((T([1024], f32), 0.000499825033328626), {})"
        },
        {
            "count": 7,
            "inputs": "((T([512, 1024, 1, 1], f32), 0.000499825033328626), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 2048, 1, 1], f32), 0.000499825033328626), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 1024, 1, 1], f32), 0.000499825033328626), {})"
        },
        {
            "count": 3,
            "inputs": "((T([255], f32), 0.000499825033328626), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3, 2], f32), 0.000499825033328626), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1, 3, 1, 1, 2], f32), 0.000499825033328626), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2], f32), 0.000499825033328626), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 768, 1, 1], f32), 0.000499825033328626), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 512, 1, 1], f32), 0.000499825033328626), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 384, 1, 1], f32), 0.000499825033328626), {})"
        },
        {
            "count": 1,
            "inputs": "((T([255, 256, 1, 1], f32), 0.000499825033328626), {})"
        }
    ],
    "aten.ne.Scalar": [
        {
            "count": 1,
            "inputs": "((T([1], f32), inf), {})"
        }
    ],
    "aten.neg.default": [
        {
            "count": 14,
            "inputs": "((T([203], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([172], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([116], f32),), {})"
        }
    ],
    "aten.new_zeros.default": [
        {
            "count": 1,
            "inputs": "((T([203, 85], f32), [16, 3, 52, 52, 85]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 85], f32), [16, 3, 26, 26, 85]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 85], f32), [16, 3, 13, 13, 85]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        }
    ],
    "aten.prod.dim_int": [
        {
            "count": 3,
            "inputs": "((T([3, 155, 2], f32), 2), {})"
        },
        {
            "count": 3,
            "inputs": "((T([3, 1, 2], f32), 2), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1, 155, 2], f32, stride=(930, 6, 1)), 2), {})"
        }
    ],
    "aten.repeat.default": [
        {
            "count": 3,
            "inputs": "((T([3, 1], i64), [1, 155]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([155, 6], f32), [3, 1, 1]), {})"
        }
    ],
    "aten.rsub.Scalar": [
        {
            "count": 1,
            "inputs": "((T([116], f32), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172], f32), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203], f32), 1.0), {})"
        }
    ],
    "aten.select_backward.default": [
        {
            "count": 1,
            "inputs": "((T([16, 3, 52, 52], f32), [16, 3, 52, 52, 85], 4, 4), {})"
        },
        {
            "count": 2,
            "inputs": "((T([203], f32), [4, 203], 0, 3), {})"
        },
        {
            "count": 2,
            "inputs": "((T([203], f32), [4, 203], 0, 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([203], f32), [4, 203], 0, 2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([203], f32), [4, 203], 0, 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 26, 26], f32), [16, 3, 26, 26, 85], 4, 4), {})"
        },
        {
            "count": 2,
            "inputs": "((T([172], f32), [4, 172], 0, 3), {})"
        },
        {
            "count": 2,
            "inputs": "((T([172], f32), [4, 172], 0, 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([172], f32), [4, 172], 0, 2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([172], f32), [4, 172], 0, 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 13, 13], f32), [16, 3, 13, 13, 85], 4, 4), {})"
        },
        {
            "count": 2,
            "inputs": "((T([116], f32), [4, 116], 0, 3), {})"
        },
        {
            "count": 2,
            "inputs": "((T([116], f32), [4, 116], 0, 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([116], f32), [4, 116], 0, 2), {})"
        },
        {
            "count": 2,
            "inputs": "((T([116], f32), [4, 116], 0, 0), {})"
        }
    ],
    "aten.sigmoid.default": [
        {
            "count": 1,
            "inputs": "((T([116, 2], f32, stride=(85, 1)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32, stride=(85, 1)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 2], f32, stride=(85, 1)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 52, 52], f32, stride=(689520, 229840, 4420, 85)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 80], f32, stride=(85, 1)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 26, 26], f32, stride=(172380, 57460, 2210, 85)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 80], f32, stride=(85, 1)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 3, 13, 13], f32, stride=(43095, 14365, 1105, 85)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 80], f32, stride=(85, 1)),), {})"
        }
    ],
    "aten.sigmoid_backward.default": [
        {
            "count": 1,
            "inputs": "((T([203, 2], f32, stride=(1, 203)), T([203, 2], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32, stride=(1, 172)), T([172, 2], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 2], f32, stride=(1, 116)), T([116, 2], f32)), {})"
        }
    ],
    "aten.slice_backward.default": [
        {
            "count": 1,
            "inputs": "((T([203, 80], f32), [203, 85], 1, 5, 9223372036854775807, 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 2], f32), [203, 85], 1, 2, 4, 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 2], f32, stride=(1, 203)), [203, 85], 1, 0, 2, 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 80], f32), [172, 85], 1, 5, 9223372036854775807, 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32), [172, 85], 1, 2, 4, 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32, stride=(1, 172)), [172, 85], 1, 0, 2, 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 80], f32), [116, 85], 1, 5, 9223372036854775807, 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 2], f32), [116, 85], 1, 2, 4, 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 2], f32, stride=(1, 116)), [116, 85], 1, 0, 2, 1), {})"
        }
    ],
    "aten.sub.Tensor": [
        {
            "count": 3,
            "inputs": "((T([3, 155], f32), T([3, 155], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 2], f32, stride=(6, 1)), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 2], f32, stride=(6, 1)), T([116, 2], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32, stride=(6, 1)), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], f32, stride=(6, 1)), T([172, 2], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 2], f32, stride=(6, 1)), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 2], f32, stride=(6, 1)), T([203, 2], i64)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([116], f32, stride=(4,)), T([116], f32)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([116], f32), T([116], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([172], f32, stride=(4,)), T([172], f32)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([172], f32), T([172], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([203], f32, stride=(4,)), T([203], f32)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([203], f32), T([203], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 3, 52, 52], f32), T([16, 3, 52, 52], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([203, 80], f32), T([203, 80], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 3, 26, 26], f32), T([16, 3, 26, 26], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([172, 80], f32), T([172, 80], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([16, 3, 13, 13], f32), T([16, 3, 13, 13], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([116, 80], f32), T([116, 80], f32)), {})"
        }
    ],
    "aten.sum.default": [
        {
            "count": 9,
            "inputs": "((T([1], f32),), {})"
        }
    ],
    "aten.unbind.int": [
        {
            "count": 2,
            "inputs": "((T([2, 116], i64, stride=(1, 2)),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2, 172], i64, stride=(1, 2)),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2, 203], i64, stride=(1, 2)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4], f32),), {})"
        }
    ],
    "aten.upsample_nearest2d.default": [
        {
            "count": 1,
            "inputs": "((T([16, 256, 13, 13], f32), [26, 26], 2.0, 2.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 128, 26, 26], f32), [52, 52], 2.0, 2.0), {})"
        }
    ],
    "aten.upsample_nearest2d_backward.default": [
        {
            "count": 1,
            "inputs": "((T([16, 128, 52, 52], f32, stride=(1038336, 2704, 52, 1)), [52, 52], [16, 128, 26, 26], 2.0, 2.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([16, 256, 26, 26], f32, stride=(519168, 676, 26, 1)), [26, 26], [16, 256, 13, 13], 2.0, 2.0), {})"
        }
    ],
    "aten.where.self": [
        {
            "count": 8,
            "inputs": "((T([203], b8), T([203], f32), T([203], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([203], b8), T([203], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([203, 2], b8), T([203, 2], f32, stride=(1, 203)), T([], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([172], b8), T([172], f32), T([172], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([172], b8), T([172], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([172, 2], b8), T([172, 2], f32, stride=(1, 172)), T([], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([116], b8), T([116], f32), T([116], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([116], b8), T([116], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([116, 2], b8), T([116, 2], f32, stride=(1, 116)), T([], f32)), {})"
        }
    ]
}