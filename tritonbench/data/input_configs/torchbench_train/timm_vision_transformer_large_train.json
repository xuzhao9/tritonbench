{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([1408, 3, 14, 14], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([1000, 1408], f32)], [T([1408, 3, 14, 14], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([4224, 1408], f32), T([1408, 1408], f32), T([6144, 1408], f32), T([1408, 6144], f32), T([1000, 1408], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([32, 1000], f32), 1, f32), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention.default": [
        {
            "count": 40,
            "inputs": "((T([32, 16, 257, 88], f32, stride=(1085568, 88, 4224, 1)), T([32, 16, 257, 88], f32, stride=(1085568, 88, 4224, 1)), T([32, 16, 257, 88], f32, stride=(1085568, 88, 4224, 1)), None, True), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention_backward.default": [
        {
            "count": 40,
            "inputs": "((T([32, 16, 257, 88], f32, stride=(361856, 88, 1408, 1)), T([32, 16, 257, 88], f32, stride=(1085568, 88, 4224, 1)), T([32, 16, 257, 88], f32, stride=(1085568, 88, 4224, 1)), T([32, 16, 257, 88], f32, stride=(1085568, 88, 4224, 1)), None, T([32, 16, 257, 88], f32, stride=(361856, 88, 1408, 1)), T([32, 16, 288], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 40,
            "inputs": "((T([32, 257, 3, 16, 88], f32), [32, 257, 4224]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 1,
            "inputs": "((T([32, 257, 1408], f32), T([1, 257, 1408], f32)), {})"
        },
        {
            "count": 160,
            "inputs": "((T([32, 257, 1408], f32), T([32, 257, 1408], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 40,
            "inputs": "((T([4224], f32), T([8224, 1408], f32), T([1408, 4224], f32, stride=(1, 1408))), {})"
        },
        {
            "count": 40,
            "inputs": "((T([1408], f32), T([8224, 1408], f32), T([1408, 1408], f32, stride=(1, 1408))), {})"
        },
        {
            "count": 40,
            "inputs": "((T([6144], f32), T([8224, 1408], f32), T([1408, 6144], f32, stride=(1, 1408))), {})"
        },
        {
            "count": 40,
            "inputs": "((T([1408], f32), T([8224, 6144], f32), T([6144, 1408], f32, stride=(1, 6144))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([32, 1408], f32, stride=(361856, 1)), T([1408, 1000], f32, stride=(1, 1408))), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 1,
            "inputs": "(([T([32, 1, 1408], f32, stride=(0, 1408, 1)), T([32, 256, 1408], f32, stride=(360448, 1, 256))], 1), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 1,
            "inputs": "((T([1, 1, 1408], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 257, 1408], f32),), {})"
        },
        {
            "count": 243,
            "inputs": "((T([1408], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([4224], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([6144], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1408, 3, 14, 14], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([4224, 1408], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([1408, 1408], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([6144, 1408], f32),), {})"
        },
        {
            "count": 40,
            "inputs": "((T([1408, 6144], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 1408], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([32, 3, 224, 224], f32), T([1408, 3, 14, 14], f32), T([1408], f32), [14, 14], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1408, 16, 16], f32, stride=(361856, 1, 22528, 1408)), T([32, 3, 224, 224], f32), T([1408, 3, 14, 14], f32), [1408], [14, 14], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 40,
            "inputs": "((T([32, 257, 6144], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 40,
            "inputs": "((T([32, 257, 6144], f32), T([32, 257, 6144], f32)), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([1000, 1408], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 32], f32, stride=(1, 1000)), T([32, 1408], f32, stride=(361856, 1))), {})"
        },
        {
            "count": 40,
            "inputs": "((T([8224, 1408], f32), T([1408, 6144], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([1408, 8224], f32, stride=(1, 1408)), T([8224, 6144], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([8224, 6144], f32), T([6144, 1408], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([6144, 8224], f32, stride=(1, 6144)), T([8224, 1408], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([8224, 1408], f32), T([1408, 1408], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([1408, 8224], f32, stride=(1, 1408)), T([8224, 1408], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([8224, 4224], f32), T([4224, 1408], f32)), {})"
        },
        {
            "count": 40,
            "inputs": "((T([4224, 8224], f32, stride=(1, 4224)), T([8224, 1408], f32)), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 81,
            "inputs": "((T([32, 257, 1408], f32), [1408], T([1408], f32), T([1408], f32), 1e-06), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 81,
            "inputs": "((T([32, 257, 1408], f32), T([32, 257, 1408], f32), [1408], T([32, 257, 1], f32), T([32, 257, 1], f32), T([1408], f32), T([1408], f32), [True, True, True]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([32, 1000], f32), T([32], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([32], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([32], i64), 1000), {})"
        }
    ],
    "aten.select_backward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1408], f32), [32, 257, 1408], 1, 0), {})"
        }
    ],
    "aten.stack.default": [
        {
            "count": 40,
            "inputs": "(([T([32, 16, 257, 88], f32, stride=(361856, 88, 1408, 1)), T([32, 16, 257, 88], f32, stride=(361856, 88, 1408, 1)), T([32, 16, 257, 88], f32, stride=(361856, 88, 1408, 1))],), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), [0], True), {})"
        },
        {
            "count": 80,
            "inputs": "((T([8224, 1408], f32), [0], True), {})"
        },
        {
            "count": 40,
            "inputs": "((T([8224, 6144], f32), [0], True), {})"
        },
        {
            "count": 40,
            "inputs": "((T([8224, 4224], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 257, 1408], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1, 1408], f32, stride=(361856, 1408, 1)), [0], True), {})"
        }
    ],
    "aten.unbind.int": [
        {
            "count": 40,
            "inputs": "((T([3, 32, 16, 257, 88], f32, stride=(1408, 1085568, 88, 4224, 1)),), {})"
        }
    ]
}