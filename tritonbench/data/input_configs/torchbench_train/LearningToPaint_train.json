{
    "aten._to_copy.default": [
        {
            "count": 1,
            "inputs": "((T([96, 6, 128, 128], u8, stride=(114688, 16384, 128, 1)),), {'dtype': f32})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 1, 128, 128], u8, stride=(114688, 16384, 128, 1)),), {'dtype': f32})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 65], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cpu'})"
        },
        {
            "count": 2,
            "inputs": "((T([96, 65], f32),), {'dtype': f32, 'device': 'cpu'})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 65], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 3,
            "inputs": "((T([96, 3, 128, 128], u8),), {'dtype': f32})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 3, 128, 128], f32),), {'dtype': u8})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 1, 128, 128], u8),), {'dtype': u8, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([96], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cpu'})"
        },
        {
            "count": 2,
            "inputs": "((T([96, 7, 128, 128], u8),), {'dtype': u8, 'device': 'cpu'})"
        },
        {
            "count": 2,
            "inputs": "((T([96], f32),), {'dtype': f32, 'device': 'cpu'})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 5,
            "inputs": "((T([96, 3, 128, 128], f32), T([96, 3, 128, 128], f32, stride=(245760, 1, 384, 3))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96], f32), 1e-08), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 2,
            "inputs": "((T([96, 64, 32, 32], f32), T([96, 64, 32, 32], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([96, 128, 16, 16], f32), T([96, 128, 16, 16], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([96, 256, 8, 8], f32), T([96, 256, 8, 8], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([96, 512, 4, 4], f32), T([96, 512, 4, 4], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([65], f32), T([96, 512], f32), T([512, 65], f32, stride=(1, 512))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512], f32), T([480, 10], f32, stride=(13, 1)), T([10, 512], f32, stride=(1, 10))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024], f32), T([480, 512], f32), T([512, 1024], f32, stride=(1, 512))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2048], f32), T([480, 1024], f32), T([1024, 2048], f32, stride=(1, 1024))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4096], f32), T([480, 2048], f32), T([2048, 4096], f32, stride=(1, 2048))), {})"
        }
    ],
    "aten.avg_pool2d.default": [
        {
            "count": 1,
            "inputs": "((T([96, 512, 4, 4], f32), [4, 4]), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 1,
            "inputs": "(([T([96, 6, 128, 128], f32), T([96, 1, 128, 128], f32), T([96, 2, 128, 128], f32, stride=(0, 16384, 128, 1))], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([96, 3, 128, 128], u8), T([96, 3, 128, 128], u8), T([96, 1, 128, 128], u8)], 1), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([96, 9, 128, 128], f32), T([64, 9, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 64, 64, 64], f32), T([64, 64, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([96, 64, 32, 32], f32), T([64, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 64, 64, 64], f32), T([64, 64, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 64, 32, 32], f32), T([128, 64, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([96, 128, 16, 16], f32), T([128, 128, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 64, 32, 32], f32), T([128, 64, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 128, 16, 16], f32), T([256, 128, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([96, 256, 8, 8], f32), T([256, 256, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 128, 16, 16], f32), T([256, 128, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 256, 8, 8], f32), T([512, 256, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([96, 512, 4, 4], f32), T([512, 512, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 256, 8, 8], f32), T([512, 256, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 16, 16, 16], f32), T([32, 16, 3, 3], f32), T([32], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 32, 16, 16], f32), T([32, 32, 3, 3], f32), T([32], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 8, 32, 32], f32), T([16, 8, 3, 3], f32), T([16], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 16, 32, 32], f32), T([16, 16, 3, 3], f32), T([16], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 4, 64, 64], f32), T([8, 4, 3, 3], f32), T([8], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 8, 64, 64], f32), T([4, 8, 3, 3], f32), T([4], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([96, 64, 64, 64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), False, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([96, 64, 32, 32], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), False, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([96, 128, 16, 16], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), False, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([96, 256, 8, 8], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), False, 0.1, 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([96, 512, 4, 4], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), False, 0.1, 1e-05), {})"
        }
    ],
    "aten.div.Tensor": [
        {
            "count": 1,
            "inputs": "((T([96, 6, 128, 128], f32), 255), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 1, 128, 128], f32), 40), {})"
        },
        {
            "count": 2,
            "inputs": "((T([96, 3, 128, 128], f32), 255), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96], f32), T([96], f32)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([96, 3, 128, 128], f32), [1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 128, 128], f32), [1]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 128], f32), [1]), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 1,
            "inputs": "((T([480, 128, 128, 1], f32), T([480, 1, 1, 3], f32, stride=(13, 3, 3, 1))), {})"
        },
        {
            "count": 5,
            "inputs": "((T([96, 3, 128, 128], f32), T([96, 1, 128, 128], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 3, 128, 128], f32), 255), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96, 1, 128, 128], u8), 1), {})"
        }
    ],
    "aten.pixel_shuffle.default": [
        {
            "count": 1,
            "inputs": "((T([480, 32, 16, 16], f32), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 16, 32, 32], f32), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 4, 64, 64], f32), 2), {})"
        }
    ],
    "aten.pow.Tensor_Scalar": [
        {
            "count": 1,
            "inputs": "((T([96, 3, 128, 128], f32), 2), {})"
        }
    ],
    "aten.relu.default": [
        {
            "count": 1,
            "inputs": "((T([96, 64, 64, 64], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([96, 64, 32, 32], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([96, 128, 16, 16], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([96, 256, 8, 8], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([96, 512, 4, 4], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 512], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 1024], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 2048], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 4096], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 32, 16, 16], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 16, 32, 32], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 8, 64, 64], f32),), {})"
        }
    ],
    "aten.rsub.Scalar": [
        {
            "count": 2,
            "inputs": "((T([480, 128, 128], f32), 1), {})"
        },
        {
            "count": 5,
            "inputs": "((T([96, 1, 128, 128], f32, stride=(81920, 16384, 128, 1)), 1), {})"
        }
    ],
    "aten.sigmoid.default": [
        {
            "count": 1,
            "inputs": "((T([96, 65], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([480, 1, 128, 128], f32),), {})"
        }
    ],
    "aten.sub.Tensor": [
        {
            "count": 1,
            "inputs": "((T([96, 3, 128, 128], f32), T([96, 3, 128, 128], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([96], f32), T([96], f32)), {})"
        }
    ]
}