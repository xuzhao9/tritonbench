{
    "aten._foreach_add.List": [
        {
            "count": 2,
            "inputs": "(([T([64, 3, 7, 7], f32), T([64], f32), T([64], f32), T([64, 64, 1, 1], f32), T([64], f32), T([64], f32), T([64, 64, 3, 3], f32), T([64], f32), T([64], f32), T([256, 64, 1, 1], f32), T([256], f32), T([256], f32), T([256, 64, 1, 1], f32), T([256], f32), T([256], f32), T([64, 256, 1, 1], f32), T([64], f32), T([64], f32), T([64, 64, 3, 3], f32), T([64], f32), T([64], f32), T([256, 64, 1, 1], f32), T([256], f32), T([256], f32), T([64, 256, 1, 1], f32), T([64], f32), T([64], f32), T([64, 64, 3, 3], f32), T([64], f32), T([64], f32), T([256, 64, 1, 1], f32), T([256], f32), T([256], f32), T([128, 256, 1, 1], f32), T([128], f32), T([128], f32), T([128, 128, 3, 3], f32), T([128], f32), T([128], f32), T([512, 128, 1, 1], f32), T([512], f32), T([512], f32), T([512, 256, 1, 1], f32), T([512], f32), T([512], f32), T([128, 512, 1, 1], f32), T([128], f32), T([128], f32), T([128, 128, 3, 3], f32), T([128], f32), T([128], f32), T([512, 128, 1, 1], f32), T([512], f32), T([512], f32), T([128, 512, 1, 1], f32), T([128], f32), T([128], f32), T([128, 128, 3, 3], f32), T([128], f32), T([128], f32), T([512, 128, 1, 1], f32), T([512], f32), T([512], f32), T([128, 512, 1, 1], f32), T([128], f32), T([128], f32), T([128, 128, 3, 3], f32), T([128], f32), T([128], f32), T([512, 128, 1, 1], f32), T([512], f32), T([512], f32), T([256, 512, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([1024, 512, 1, 1], f32), T([1024], f32), T([1024], f32), T([256, 1024, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([256, 1024, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([256, 1024, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([256, 1024, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([256, 1024, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([512, 1024, 1, 1], f32), T([512], f32), T([512], f32), T([512, 512, 3, 3], f32), T([512], f32), T([512], f32), T([2048, 512, 1, 1], f32), T([2048], f32), T([2048], f32), T([2048, 1024, 1, 1], f32), T([2048], f32), T([2048], f32), T([512, 2048, 1, 1], f32), T([512], f32), T([512], f32), T([512, 512, 3, 3], f32), T([512], f32), T([512], f32), T([2048, 512, 1, 1], f32), T([2048], f32), T([2048], f32), T([512, 2048, 1, 1], f32), T([512], f32), T([512], f32), T([512, 512, 3, 3], f32), T([512], f32), T([512], f32), T([2048, 512, 1, 1], f32), T([2048], f32), T([2048], f32), T([128, 2048], f32), T([128], f32)], [T([64, 3, 7, 7], f32), T([64], f32), T([64], f32), T([64, 64, 1, 1], f32), T([64], f32), T([64], f32), T([64, 64, 3, 3], f32), T([64], f32), T([64], f32), T([256, 64, 1, 1], f32), T([256], f32), T([256], f32), T([256, 64, 1, 1], f32), T([256], f32), T([256], f32), T([64, 256, 1, 1], f32), T([64], f32), T([64], f32), T([64, 64, 3, 3], f32), T([64], f32), T([64], f32), T([256, 64, 1, 1], f32), T([256], f32), T([256], f32), T([64, 256, 1, 1], f32), T([64], f32), T([64], f32), T([64, 64, 3, 3], f32), T([64], f32), T([64], f32), T([256, 64, 1, 1], f32), T([256], f32), T([256], f32), T([128, 256, 1, 1], f32), T([128], f32), T([128], f32), T([128, 128, 3, 3], f32), T([128], f32), T([128], f32), T([512, 128, 1, 1], f32), T([512], f32), T([512], f32), T([512, 256, 1, 1], f32), T([512], f32), T([512], f32), T([128, 512, 1, 1], f32), T([128], f32), T([128], f32), T([128, 128, 3, 3], f32), T([128], f32), T([128], f32), T([512, 128, 1, 1], f32), T([512], f32), T([512], f32), T([128, 512, 1, 1], f32), T([128], f32), T([128], f32), T([128, 128, 3, 3], f32), T([128], f32), T([128], f32), T([512, 128, 1, 1], f32), T([512], f32), T([512], f32), T([128, 512, 1, 1], f32), T([128], f32), T([128], f32), T([128, 128, 3, 3], f32), T([128], f32), T([128], f32), T([512, 128, 1, 1], f32), T([512], f32), T([512], f32), T([256, 512, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([1024, 512, 1, 1], f32), T([1024], f32), T([1024], f32), T([256, 1024, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([256, 1024, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([256, 1024, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([256, 1024, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([256, 1024, 1, 1], f32), T([256], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256], f32), T([1024, 256, 1, 1], f32), T([1024], f32), T([1024], f32), T([512, 1024, 1, 1], f32), T([512], f32), T([512], f32), T([512, 512, 3, 3], f32), T([512], f32), T([512], f32), T([2048, 512, 1, 1], f32), T([2048], f32), T([2048], f32), T([2048, 1024, 1, 1], f32), T([2048], f32), T([2048], f32), T([512, 2048, 1, 1], f32), T([512], f32), T([512], f32), T([512, 512, 3, 3], f32), T([512], f32), T([512], f32), T([2048, 512, 1, 1], f32), T([2048], f32), T([2048], f32), T([512, 2048, 1, 1], f32), T([512], f32), T([512], f32), T([512, 512, 3, 3], f32), T([512], f32), T([512], f32), T([2048, 512, 1, 1], f32), T([2048], f32), T([2048], f32), T([128, 2048], f32), T([128], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 2,
            "inputs": "((T([32, 32001], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 2,
            "inputs": "((T([32, 32001], f32), T([32, 32001], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 4,
            "inputs": "((T([32, 128], f32), T([32, 128], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 2048, 7, 7], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 1024, 14, 14], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 512, 28, 28], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 256, 56, 56], f32), T([32, 256, 56, 56], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 56, 56], f32), T([32, 64, 56, 56], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 212,
            "inputs": "((T([], i64), 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 256, 56, 56], f32), T([32, 256, 56, 56], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 512, 28, 28], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 1024, 14, 14], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 2048, 7, 7], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 3, 7, 7], f32), T([64, 3, 7, 7], f32)), {})"
        },
        {
            "count": 28,
            "inputs": "((T([64], f32), T([64], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 1, 1], f32), T([64, 64, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 64, 3, 3], f32), T([64, 64, 3, 3], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([256, 64, 1, 1], f32), T([256, 64, 1, 1], f32)), {})"
        },
        {
            "count": 64,
            "inputs": "((T([256], f32), T([256], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 1, 1], f32), T([64, 256, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 1, 1], f32), T([128, 256, 1, 1], f32)), {})"
        },
        {
            "count": 34,
            "inputs": "((T([128], f32), T([128], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 128, 3, 3], f32), T([128, 128, 3, 3], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([512, 128, 1, 1], f32), T([512, 128, 1, 1], f32)), {})"
        },
        {
            "count": 44,
            "inputs": "((T([512], f32), T([512], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 256, 1, 1], f32), T([512, 256, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 512, 1, 1], f32), T([128, 512, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 512, 1, 1], f32), T([256, 512, 1, 1], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([256, 256, 3, 3], f32), T([256, 256, 3, 3], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([1024, 256, 1, 1], f32), T([1024, 256, 1, 1], f32)), {})"
        },
        {
            "count": 28,
            "inputs": "((T([1024], f32), T([1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 512, 1, 1], f32), T([1024, 512, 1, 1], f32)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([256, 1024, 1, 1], f32), T([256, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 1024, 1, 1], f32), T([512, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 512, 3, 3], f32), T([512, 512, 3, 3], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([2048, 512, 1, 1], f32), T([2048, 512, 1, 1], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([2048], f32), T([2048], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2048, 1024, 1, 1], f32), T([2048, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 2048, 1, 1], f32), T([512, 2048, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 2048], f32), T([128, 2048], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 4,
            "inputs": "((T([128], f32), T([32, 2048], f32), T([2048, 128], f32, stride=(1, 2048))), {})"
        }
    ],
    "aten.bmm.default": [
        {
            "count": 2,
            "inputs": "((T([32, 1, 128], f32), T([32, 128, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 32, 128], f32), T([1, 128, 32000], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 32, 32000], f32, stride=(1024032, 32001, 1)), T([1, 32000, 128], f32, stride=(4096000, 1, 32000))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 1, 1], f32, stride=(32001, 32001, 32001)), T([32, 1, 128], f32)), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 2,
            "inputs": "(([T([4096000], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([256], f32), T([256], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([256], f32), T([256], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([512], f32), T([512], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([512], f32), T([512], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([512], f32), T([512], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([2048], f32), T([2048], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([2048], f32), T([2048], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([256], f32), T([256], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([256], f32), T([256], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([512], f32), T([512], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([512], f32), T([512], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([512], f32), T([512], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([1024], f32), T([1024], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([2048], f32), T([2048], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([2048], f32), T([2048], f32)],), {})"
        },
        {
            "count": 2,
            "inputs": "(([T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64), T([1], i64)],), {})"
        },
        {
            "count": 2,
            "inputs": "(([T([32, 3, 224, 224], f32)],), {})"
        },
        {
            "count": 4,
            "inputs": "(([T([32, 128], f32)],), {})"
        },
        {
            "count": 2,
            "inputs": "(([T([32, 1], f32), T([32, 32000], f32)], 1), {})"
        }
    ],
    "aten.clamp_min.default": [
        {
            "count": 4,
            "inputs": "((T([32, 1], f32), 1e-12), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 2,
            "inputs": "((T([128, 32000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 3, 7, 7], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([64], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 64, 3, 3], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 64, 1, 1], f32),), {})"
        },
        {
            "count": 32,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32),), {})"
        },
        {
            "count": 17,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 128, 3, 3], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 128, 1, 1], f32),), {})"
        },
        {
            "count": 22,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 256, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 512, 1, 1], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([256, 256, 3, 3], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([1024, 256, 1, 1], f32),), {})"
        },
        {
            "count": 14,
            "inputs": "((T([1024], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 512, 1, 1], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([256, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 512, 3, 3], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2048, 512, 1, 1], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([2048], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2048, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 2048], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 4,
            "inputs": "((T([32, 3, 224, 224], f32), T([64, 3, 7, 7], f32), None, [2, 2], [3, 3], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 64, 56, 56], f32), T([64, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 64, 56, 56], f32), T([64, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 64, 56, 56], f32), T([256, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 8,
            "inputs": "((T([32, 256, 56, 56], f32), T([64, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 256, 56, 56], f32), T([128, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 128, 56, 56], f32), T([128, 128, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 128, 28, 28], f32), T([512, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 256, 56, 56], f32), T([512, 256, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 512, 28, 28], f32), T([128, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 128, 28, 28], f32), T([128, 128, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 28, 28], f32), T([256, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 256, 28, 28], f32), T([256, 256, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 24,
            "inputs": "((T([32, 256, 14, 14], f32), T([1024, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 28, 28], f32), T([1024, 512, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 20,
            "inputs": "((T([32, 1024, 14, 14], f32), T([256, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 20,
            "inputs": "((T([32, 256, 14, 14], f32), T([256, 256, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 1024, 14, 14], f32), T([512, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 14, 14], f32), T([512, 512, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 512, 7, 7], f32), T([2048, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 1024, 14, 14], f32), T([2048, 1024, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 8,
            "inputs": "((T([32, 2048, 7, 7], f32), T([512, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 8,
            "inputs": "((T([32, 512, 7, 7], f32), T([512, 512, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 6,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 512, 7, 7], f32), T([2048, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 7, 7], f32), T([32, 512, 7, 7], f32), T([512, 512, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 7, 7], f32), T([32, 2048, 7, 7], f32), T([512, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 1024, 14, 14], f32), T([2048, 1024, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 512, 7, 7], f32), T([32, 512, 14, 14], f32), T([512, 512, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 512, 14, 14], f32), T([32, 1024, 14, 14], f32), T([512, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 256, 14, 14], f32), T([1024, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 256, 14, 14], f32), T([32, 256, 14, 14], f32), T([256, 256, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 256, 14, 14], f32), T([32, 1024, 14, 14], f32), T([256, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 512, 28, 28], f32), T([1024, 512, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 14, 14], f32), T([32, 256, 28, 28], f32), T([256, 256, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 28, 28], f32), T([32, 512, 28, 28], f32), T([256, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 8,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 128, 28, 28], f32), T([512, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 128, 28, 28], f32), T([32, 128, 28, 28], f32), T([128, 128, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 128, 28, 28], f32), T([32, 512, 28, 28], f32), T([128, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 256, 56, 56], f32), T([512, 256, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 28, 28], f32), T([32, 128, 56, 56], f32), T([128, 128, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 56, 56], f32), T([32, 256, 56, 56], f32), T([128, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 8,
            "inputs": "((T([32, 256, 56, 56], f32), T([32, 64, 56, 56], f32), T([256, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 64, 56, 56], f32), T([32, 64, 56, 56], f32), T([64, 64, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 64, 56, 56], f32), T([32, 256, 56, 56], f32), T([64, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 56, 56], f32), T([32, 64, 56, 56], f32), T([64, 64, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 112, 112], f32), T([32, 3, 224, 224], f32), T([64, 3, 7, 7], f32), [0], [2, 2], [3, 3], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.copy_.default": [
        {
            "count": 2,
            "inputs": "((T([128, 32000], f32), T([128, 32000], f32), True), {})"
        },
        {
            "count": 56,
            "inputs": "((T([64], f32), T([64], f32), True), {})"
        },
        {
            "count": 128,
            "inputs": "((T([256], f32), T([256], f32), True), {})"
        },
        {
            "count": 64,
            "inputs": "((T([128], f32), T([128], f32), True), {})"
        },
        {
            "count": 88,
            "inputs": "((T([512], f32), T([512], f32), True), {})"
        },
        {
            "count": 56,
            "inputs": "((T([1024], f32), T([1024], f32), True), {})"
        },
        {
            "count": 32,
            "inputs": "((T([2048], f32), T([2048], f32), True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1], i64), T([1], i64), True), {})"
        },
        {
            "count": 212,
            "inputs": "((T([], i64), T([], i64), True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 32], f32, stride=(32000, 1)), T([128, 32], f32, stride=(1, 128))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([], i64), T([], i64)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 3, 7, 7], f32), T([64, 3, 7, 7], f32)), {})"
        },
        {
            "count": 28,
            "inputs": "((T([64], f32), T([64], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 1, 1], f32), T([64, 64, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 64, 3, 3], f32), T([64, 64, 3, 3], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([256, 64, 1, 1], f32), T([256, 64, 1, 1], f32)), {})"
        },
        {
            "count": 64,
            "inputs": "((T([256], f32), T([256], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 1, 1], f32), T([64, 256, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 1, 1], f32), T([128, 256, 1, 1], f32)), {})"
        },
        {
            "count": 34,
            "inputs": "((T([128], f32), T([128], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 128, 3, 3], f32), T([128, 128, 3, 3], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([512, 128, 1, 1], f32), T([512, 128, 1, 1], f32)), {})"
        },
        {
            "count": 44,
            "inputs": "((T([512], f32), T([512], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 256, 1, 1], f32), T([512, 256, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 512, 1, 1], f32), T([128, 512, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 512, 1, 1], f32), T([256, 512, 1, 1], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([256, 256, 3, 3], f32), T([256, 256, 3, 3], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([1024, 256, 1, 1], f32), T([1024, 256, 1, 1], f32)), {})"
        },
        {
            "count": 28,
            "inputs": "((T([1024], f32), T([1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 512, 1, 1], f32), T([1024, 512, 1, 1], f32)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([256, 1024, 1, 1], f32), T([256, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 1024, 1, 1], f32), T([512, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 512, 3, 3], f32), T([512, 512, 3, 3], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([2048, 512, 1, 1], f32), T([2048, 512, 1, 1], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([2048], f32), T([2048], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2048, 1024, 1, 1], f32), T([2048, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 2048, 1, 1], f32), T([512, 2048, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 2048], f32), T([128, 2048], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([162], i32), T([162], i32), True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([162], i32), T([162], i32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([5], i32), T([5], i32), True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([5], i32), T([5], i32)), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 4,
            "inputs": "((T([32, 64, 112, 112], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 24,
            "inputs": "((T([32, 64, 56, 56], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 256, 56, 56], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 128, 56, 56], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 28,
            "inputs": "((T([32, 128, 28, 28], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 20,
            "inputs": "((T([32, 512, 28, 28], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 256, 28, 28], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 44,
            "inputs": "((T([32, 256, 14, 14], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 28,
            "inputs": "((T([32, 1024, 14, 14], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 14, 14], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 20,
            "inputs": "((T([32, 512, 7, 7], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 2048, 7, 7], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), True, 0.1, 1e-05), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 8,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 2048, 7, 7], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), T([2048], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 512, 7, 7], f32), T([32, 512, 7, 7], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 512, 14, 14], f32), T([32, 512, 14, 14], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 14,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 1024, 14, 14], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), T([1024], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 22,
            "inputs": "((T([32, 256, 14, 14], f32), T([32, 256, 14, 14], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 28, 28], f32), T([32, 256, 28, 28], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 512, 28, 28], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), T([512], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 14,
            "inputs": "((T([32, 128, 28, 28], f32), T([32, 128, 28, 28], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 56, 56], f32), T([32, 128, 56, 56], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), T([128], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([32, 256, 56, 56], f32), T([32, 256, 56, 56], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 64, 56, 56], f32), T([32, 64, 56, 56], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 112, 112], f32), T([32, 64, 112, 112], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), 1e-05, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 2,
            "inputs": "((T([32, 2048, 7, 7], f32, stride=(2048, 1, 0, 0)), 49), {})"
        }
    ],
    "aten.div.Tensor": [
        {
            "count": 10,
            "inputs": "((T([32, 128], f32), T([32, 128], f32, stride=(1, 0))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 32001], f32), 0.07), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128], f32), T([32, 1], f32)), {})"
        }
    ],
    "aten.div_.Tensor": [
        {
            "count": 2,
            "inputs": "((T([32, 32001], f32), 0.07), {})"
        }
    ],
    "aten.eq.Scalar": [
        {
            "count": 2,
            "inputs": "((T([32, 1], f32), 0), {})"
        }
    ],
    "aten.ge.Scalar": [
        {
            "count": 2,
            "inputs": "((T([32, 1], f32), 1e-12), {})"
        }
    ],
    "aten.index.Tensor": [
        {
            "count": 2,
            "inputs": "((T([32, 3, 224, 224], f32), [T([32], i64)]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128], f32), [T([32], i64)]), {})"
        }
    ],
    "aten.linalg_vector_norm.default": [
        {
            "count": 4,
            "inputs": "((T([32, 128], f32), 2.0, [1], True), {})"
        }
    ],
    "aten.masked_fill_.Scalar": [
        {
            "count": 2,
            "inputs": "((T([32, 128], f32), T([32, 1], b8), 0), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 4,
            "inputs": "((T([32, 64, 112, 112], f32), [3, 3], [2, 2], [1, 1]), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 2,
            "inputs": "((T([32, 64, 56, 56], f32), T([32, 64, 112, 112], f32), [3, 3], [2, 2], [1, 1], [1, 1], False, T([32, 64, 56, 56], i64)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 4,
            "inputs": "((T([32, 2048, 7, 7], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 2,
            "inputs": "((T([32, 128], f32), T([128, 2048], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 32], f32, stride=(1, 128)), T([32, 2048], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 2,
            "inputs": "((T([64, 3, 7, 7], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 28,
            "inputs": "((T([64], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 64, 3, 3], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 8,
            "inputs": "((T([256, 64, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 64,
            "inputs": "((T([256], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 34,
            "inputs": "((T([128], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 128, 3, 3], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 8,
            "inputs": "((T([512, 128, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 44,
            "inputs": "((T([512], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 256, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 512, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 512, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 12,
            "inputs": "((T([256, 256, 3, 3], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 12,
            "inputs": "((T([1024, 256, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 28,
            "inputs": "((T([1024], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 512, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 10,
            "inputs": "((T([256, 1024, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 1024, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 512, 3, 3], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 6,
            "inputs": "((T([2048, 512, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 16,
            "inputs": "((T([2048], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2048, 1024, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 2048, 1, 1], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 2048], f32), 0.0010000000000000009), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128], f32), T([32, 128], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 1], f32), T([32, 128], f32)), {})"
        }
    ],
    "aten.mul.out": [
        {
            "count": 34,
            "inputs": "((T([128], f32), 1.0), {'out': T([128], f32)})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 2048], f32), 1.0), {'out': T([128, 2048], f32)})"
        },
        {
            "count": 16,
            "inputs": "((T([2048], f32), 1.0), {'out': T([2048], f32)})"
        },
        {
            "count": 6,
            "inputs": "((T([2048, 512, 1, 1], f32), 1.0), {'out': T([2048, 512, 1, 1], f32)})"
        },
        {
            "count": 44,
            "inputs": "((T([512], f32), 1.0), {'out': T([512], f32)})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 512, 3, 3], f32), 1.0), {'out': T([512, 512, 3, 3], f32)})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 2048, 1, 1], f32), 1.0), {'out': T([512, 2048, 1, 1], f32)})"
        },
        {
            "count": 2,
            "inputs": "((T([2048, 1024, 1, 1], f32), 1.0), {'out': T([2048, 1024, 1, 1], f32)})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 1024, 1, 1], f32), 1.0), {'out': T([512, 1024, 1, 1], f32)})"
        },
        {
            "count": 28,
            "inputs": "((T([1024], f32), 1.0), {'out': T([1024], f32)})"
        },
        {
            "count": 12,
            "inputs": "((T([1024, 256, 1, 1], f32), 1.0), {'out': T([1024, 256, 1, 1], f32)})"
        },
        {
            "count": 64,
            "inputs": "((T([256], f32), 1.0), {'out': T([256], f32)})"
        },
        {
            "count": 12,
            "inputs": "((T([256, 256, 3, 3], f32), 1.0), {'out': T([256, 256, 3, 3], f32)})"
        },
        {
            "count": 10,
            "inputs": "((T([256, 1024, 1, 1], f32), 1.0), {'out': T([256, 1024, 1, 1], f32)})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 512, 1, 1], f32), 1.0), {'out': T([1024, 512, 1, 1], f32)})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 512, 1, 1], f32), 1.0), {'out': T([256, 512, 1, 1], f32)})"
        },
        {
            "count": 8,
            "inputs": "((T([512, 128, 1, 1], f32), 1.0), {'out': T([512, 128, 1, 1], f32)})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 128, 3, 3], f32), 1.0), {'out': T([128, 128, 3, 3], f32)})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 512, 1, 1], f32), 1.0), {'out': T([128, 512, 1, 1], f32)})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 256, 1, 1], f32), 1.0), {'out': T([512, 256, 1, 1], f32)})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 1, 1], f32), 1.0), {'out': T([128, 256, 1, 1], f32)})"
        },
        {
            "count": 8,
            "inputs": "((T([256, 64, 1, 1], f32), 1.0), {'out': T([256, 64, 1, 1], f32)})"
        },
        {
            "count": 28,
            "inputs": "((T([64], f32), 1.0), {'out': T([64], f32)})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 64, 3, 3], f32), 1.0), {'out': T([64, 64, 3, 3], f32)})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 1, 1], f32), 1.0), {'out': T([64, 256, 1, 1], f32)})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 1, 1], f32), 1.0), {'out': T([64, 64, 1, 1], f32)})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 3, 7, 7], f32), 1.0), {'out': T([64, 3, 7, 7], f32)})"
        }
    ],
    "aten.mul_.Tensor": [
        {
            "count": 2,
            "inputs": "((T([64, 3, 7, 7], f32), 0.999), {})"
        },
        {
            "count": 28,
            "inputs": "((T([64], f32), 0.999), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 64, 3, 3], f32), 0.999), {})"
        },
        {
            "count": 8,
            "inputs": "((T([256, 64, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 64,
            "inputs": "((T([256], f32), 0.999), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 256, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 34,
            "inputs": "((T([128], f32), 0.999), {})"
        },
        {
            "count": 8,
            "inputs": "((T([128, 128, 3, 3], f32), 0.999), {})"
        },
        {
            "count": 8,
            "inputs": "((T([512, 128, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 44,
            "inputs": "((T([512], f32), 0.999), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 256, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 6,
            "inputs": "((T([128, 512, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 512, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 12,
            "inputs": "((T([256, 256, 3, 3], f32), 0.999), {})"
        },
        {
            "count": 12,
            "inputs": "((T([1024, 256, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 28,
            "inputs": "((T([1024], f32), 0.999), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 512, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 10,
            "inputs": "((T([256, 1024, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 1024, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 512, 3, 3], f32), 0.999), {})"
        },
        {
            "count": 6,
            "inputs": "((T([2048, 512, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 16,
            "inputs": "((T([2048], f32), 0.999), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2048, 1024, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 2048, 1, 1], f32), 0.999), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128, 2048], f32), 0.999), {})"
        }
    ],
    "aten.neg.default": [
        {
            "count": 2,
            "inputs": "((T([32, 128], f32),), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 2,
            "inputs": "((T([], f32), T([32, 32001], f32), T([32], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 2,
            "inputs": "((T([32, 32001], f32), T([32], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.default": [
        {
            "count": 1,
            "inputs": "((T([], i64),), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 4,
            "inputs": "((T([32, 64, 112, 112], f32),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([32, 64, 56, 56], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 256, 56, 56], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 128, 56, 56], f32),), {})"
        },
        {
            "count": 28,
            "inputs": "((T([32, 128, 28, 28], f32),), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 512, 28, 28], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 256, 28, 28], f32),), {})"
        },
        {
            "count": 44,
            "inputs": "((T([32, 256, 14, 14], f32),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([32, 1024, 14, 14], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 512, 14, 14], f32),), {})"
        },
        {
            "count": 20,
            "inputs": "((T([32, 512, 7, 7], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 2048, 7, 7], f32),), {})"
        }
    ],
    "aten.sort.default": [
        {
            "count": 2,
            "inputs": "((T([32], i64),), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 2,
            "inputs": "((T([32, 128], f32), [1], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128], f32), [0], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 6,
            "inputs": "((T([32, 2048, 7, 7], f32), T([32, 2048, 7, 7], f32), 0), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 512, 7, 7], f32), T([32, 512, 7, 7], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 512, 14, 14], f32), T([32, 512, 14, 14], f32), 0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 1024, 14, 14], f32), T([32, 1024, 14, 14], f32), 0), {})"
        },
        {
            "count": 22,
            "inputs": "((T([32, 256, 14, 14], f32), T([32, 256, 14, 14], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 256, 28, 28], f32), T([32, 256, 28, 28], f32), 0), {})"
        },
        {
            "count": 8,
            "inputs": "((T([32, 512, 28, 28], f32), T([32, 512, 28, 28], f32), 0), {})"
        },
        {
            "count": 14,
            "inputs": "((T([32, 128, 28, 28], f32), T([32, 128, 28, 28], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 128, 56, 56], f32), T([32, 128, 56, 56], f32), 0), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 256, 56, 56], f32), T([32, 256, 56, 56], f32), 0), {})"
        },
        {
            "count": 12,
            "inputs": "((T([32, 64, 56, 56], f32), T([32, 64, 56, 56], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 64, 112, 112], f32), T([32, 64, 112, 112], f32), 0), {})"
        }
    ],
    "aten.where.self": [
        {
            "count": 2,
            "inputs": "((T([32, 1], b8), T([32, 1], f32), T([], f32)), {})"
        }
    ],
    "c10d.allgather_.default": [
        {
            "count": 1,
            "inputs": "(([[T([32, 3, 224, 224], f32)]], [T([32, 3, 224, 224], f32)], <torch.ScriptObject object at 0x25f7caf0>, False), {})"
        },
        {
            "count": 1,
            "inputs": "(([[T([32, 128], f32)]], [T([32, 128], f32)], <torch.ScriptObject object at 0x2ab88f80>, False), {})"
        },
        {
            "count": 1,
            "inputs": "(([[T([32, 128], f32)]], [T([32, 128], f32)], <torch.ScriptObject object at 0x2b319200>, False), {})"
        },
        {
            "count": 1,
            "inputs": "(([[T([32, 3, 224, 224], f32)]], [T([32, 3, 224, 224], f32)], <torch.ScriptObject object at 0x3100e320>, False), {})"
        },
        {
            "count": 1,
            "inputs": "(([[T([32, 128], f32)]], [T([32, 128], f32)], <torch.ScriptObject object at 0x3100e8c0>, False), {})"
        },
        {
            "count": 1,
            "inputs": "(([[T([32, 128], f32)]], [T([32, 128], f32)], <torch.ScriptObject object at 0x310066a0>, False), {})"
        }
    ],
    "c10d.allreduce_.default": [
        {
            "count": 1,
            "inputs": "(([T([23770304], f32)], <torch.ScriptObject object at 0x7f0b22d7af40>, <torch.ScriptObject object at 0x7f0b9024a540>, None), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([262272], f32)], <torch.ScriptObject object at 0x7f0b22d74080>, <torch.ScriptObject object at 0x7f0b20c1c240>, None), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([7875584], f32)], <torch.ScriptObject object at 0x7f0b93522360>, <torch.ScriptObject object at 0x7f0b90241760>, None), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([6563840], f32)], <torch.ScriptObject object at 0x7f0b9362b320>, <torch.ScriptObject object at 0x7f0b936fa6c0>, None), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([6637568], f32)], <torch.ScriptObject object at 0x7f0b936f96a0>, <torch.ScriptObject object at 0x7f0b93f29020>, None), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([2431040], f32)], <torch.ScriptObject object at 0x7f0b93f29700>, <torch.ScriptObject object at 0x7f0b934deca0>, None), {})"
        }
    ],
    "c10d.broadcast_.default": [
        {
            "count": 1,
            "inputs": "(([T([4202240], f32)], <torch.ScriptObject object at 0x8ebc090>, 0, 0), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([107], i64)], <torch.ScriptObject object at 0x8db9a80>, 0, 0), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([32], i64)], <torch.ScriptObject object at 0x2555fee0>, 0, 0, False), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([162], i32)], <torch.ScriptObject object at 0x1ec21f60>, 0, 0), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([5], i32)], <torch.ScriptObject object at 0x28187fa0>, 0, 0), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([4202240], f32)], <torch.ScriptObject object at 0x1c44adb0>, 0, 0), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([107], i64)], <torch.ScriptObject object at 0x2f371f90>, 0, 0), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([32], i64)], <torch.ScriptObject object at 0x3100e680>, 0, 0, False), {})"
        }
    ]
}