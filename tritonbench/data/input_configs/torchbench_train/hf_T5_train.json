{
    "aten._foreach_sqrt.default": [
        {
            "count": 1,
            "inputs": "(([T([32128, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([32, 8], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([32, 8], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512, 512], f32), T([512], f32), T([2048, 512], f32), T([512, 2048], f32), T([512], f32), T([512], f32)],), {})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([8192, 32128], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([8192, 32128], f32), T([8192, 32128], f32), 1, f32), {})"
        }
    ],
    "aten._softmax.default": [
        {
            "count": 18,
            "inputs": "((T([8, 8, 1024, 1024], f32), -1, False), {})"
        }
    ],
    "aten._softmax_backward_data.default": [
        {
            "count": 18,
            "inputs": "((T([8, 8, 1024, 1024], f32), T([8, 8, 1024, 1024], f32), -1, f32), {})"
        }
    ],
    "aten._to_copy.default": [
        {
            "count": 1,
            "inputs": "((T([1024, 1024], b8),), {'dtype': i64})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 1024], i64),), {'dtype': f32})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 1024], f32),), {'dtype': i64})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 1, 1, 1024], i64),), {'dtype': f32})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 84,
            "inputs": "((T([8192, 512], f32), [8, 1024, 512]), {})"
        },
        {
            "count": 54,
            "inputs": "((T([8, 8, 1024, 64], f32), [64, 1024, 64]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([8, 8, 64, 1024], f32), [64, 64, 1024]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 1024, 1024], f32), [8, 8, 1024, 1024]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 1024, 64], f32), [8, 8, 1024, 64]), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8192, 2048], f32), [8, 1024, 2048]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8192, 32128], f32), [8, 1024, 32128]), {})"
        },
        {
            "count": 36,
            "inputs": "((T([8, 1024, 8, 64], f32), [8, 1024, 512]), {})"
        },
        {
            "count": 18,
            "inputs": "((T([8, 1024, 512], f32), [8192, 512]), {})"
        }
    ],
    "aten.abs.default": [
        {
            "count": 1,
            "inputs": "((T([1024, 1024], i64),), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 32,
            "inputs": "((T([8, 1024, 1], f32), 1e-06), {})"
        },
        {
            "count": 8,
            "inputs": "((T([], i64), 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 1024], i64), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 1024], i64), 8), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 8, 1024, 1024], f32, stride=(8, 1, 8192, 8)), T([8, 1, 1, 1024], f32)), {})"
        },
        {
            "count": 127,
            "inputs": "((T([8, 1024, 512], f32), T([8, 1024, 512], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 1, 1024, 1024], f32), T([8, 1, 1, 1024], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 1024], i64), 16), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 8, 1024, 1024], f32, stride=(8, 1, 8192, 8)), T([8, 1, 1024, 1024], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 8, 1024, 1024], f32), T([8, 1, 1, 1024], f32)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([8, 8, 1024, 1024], f32), T([8, 8, 1024, 1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32128, 512], f32), T([32128, 512], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1024, 1024], i64), T([1024, 1024], i64)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8, 8, 1024, 1024], f32), T([8, 8, 1024, 1024], f32, stride=(8388608, 1, 8192, 8))), {})"
        },
        {
            "count": 6,
            "inputs": "((T([8, 8, 1024, 1024], f32), T([8, 8, 1024, 1024], f32)), {})"
        }
    ],
    "aten.bmm.default": [
        {
            "count": 18,
            "inputs": "((T([64, 1024, 64], f32), T([64, 64, 1024], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 1024, 1024], f32), T([64, 1024, 64], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 1024, 1024], f32, stride=(1048576, 1, 1024)), T([64, 1024, 64], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 1024, 64], f32), T([64, 64, 1024], f32, stride=(65536, 1, 64))), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 64, 1024], f32, stride=(65536, 1, 64)), T([64, 1024, 1024], f32)), {})"
        },
        {
            "count": 18,
            "inputs": "((T([64, 1024, 1024], f32), T([64, 1024, 64], f32, stride=(65536, 1, 1024))), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 1,
            "inputs": "((T([8, 1023], i64, stride=(1024, 1)),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 1, 1024, 1024], f32, stride=(0, 1048576, 1024, 1)),), {})"
        }
    ],
    "aten.copy_.default": [
        {
            "count": 1,
            "inputs": "((T([8, 1023], i64, stride=(1024, 1)), T([8, 1023], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 1, 1024, 1024], f32), T([8, 1, 1024, 1024], f32)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 32,
            "inputs": "((T([8, 1024, 512], f32, stride=(1024, 1, 0)), 512), {})"
        }
    ],
    "aten.div.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1024, 1024], f32), 8), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 1024], f32), 2.772588722239781), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 1024], f32), 16), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 1024], f32), 2.0794415416798357), {})"
        }
    ],
    "aten.embedding.default": [
        {
            "count": 2,
            "inputs": "((T([32128, 512], f32), T([8, 1024], i64)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 8], f32), T([1024, 1024], i64)), {})"
        }
    ],
    "aten.embedding_dense_backward.default": [
        {
            "count": 2,
            "inputs": "((T([1024, 1024, 8], f32, stride=(1024, 1, 1048576)), T([1024, 1024], i64), 32, -1, False), {})"
        },
        {
            "count": 2,
            "inputs": "((T([8, 1024, 512], f32), T([8, 1024], i64), 32128, -1, False), {})"
        }
    ],
    "aten.eq.Scalar": [
        {
            "count": 1,
            "inputs": "((T([8, 1024], i64), -100), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 1, 1024, 1024], f32), 0), {})"
        }
    ],
    "aten.fill_.Tensor": [
        {
            "count": 1,
            "inputs": "((T([8], i64, stride=(1024,)), T([], i64)), {})"
        }
    ],
    "aten.gt.Scalar": [
        {
            "count": 1,
            "inputs": "((T([1024, 1024], i64), 0), {})"
        }
    ],
    "aten.gt.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1024], i64), T([1024, 1], i64)), {})"
        }
    ],
    "aten.log.default": [
        {
            "count": 2,
            "inputs": "((T([1024, 1024], f32),), {})"
        }
    ],
    "aten.lt.Scalar": [
        {
            "count": 1,
            "inputs": "((T([1024, 1024], i64), 8), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 1024], i64), 16), {})"
        }
    ],
    "aten.masked_fill.Scalar": [
        {
            "count": 1,
            "inputs": "((T([8, 1, 1024, 1024], f32), T([8, 1, 1024, 1024], b8), -3.4028234663852886e+38), {})"
        }
    ],
    "aten.masked_fill_.Scalar": [
        {
            "count": 1,
            "inputs": "((T([8, 1024], i64), T([8, 1024], b8), 0), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 32,
            "inputs": "((T([8, 1024, 512], f32), [-1], True), {})"
        }
    ],
    "aten.minimum.default": [
        {
            "count": 3,
            "inputs": "((T([1024, 1024], i64), T([1024, 1024], i64)), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 72,
            "inputs": "((T([8192, 512], f32), T([512, 512], f32, stride=(1, 512))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8192, 512], f32), T([512, 2048], f32, stride=(1, 512))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8192, 2048], f32), T([2048, 512], f32, stride=(1, 2048))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8192, 512], f32), T([512, 32128], f32, stride=(1, 512))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32128, 8192], f32, stride=(1, 32128)), T([8192, 512], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8192, 32128], f32), T([32128, 512], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([512, 8192], f32, stride=(1, 512)), T([8192, 2048], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8192, 512], f32), T([512, 2048], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([2048, 8192], f32, stride=(1, 2048)), T([8192, 512], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8192, 2048], f32), T([2048, 512], f32)), {})"
        },
        {
            "count": 72,
            "inputs": "((T([512, 8192], f32, stride=(1, 512)), T([8192, 512], f32)), {})"
        },
        {
            "count": 72,
            "inputs": "((T([8192, 512], f32), T([512, 512], f32)), {})"
        }
    ],
    "aten.mul.Scalar": [
        {
            "count": 32,
            "inputs": "((T([8, 1024, 1], f32), -0.5), {})"
        },
        {
            "count": 32,
            "inputs": "((T([8, 1024, 512], f32), 2.0), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 2,
            "inputs": "((T([8, 1, 1, 1024], f32), -3.4028234663852886e+38), {})"
        },
        {
            "count": 64,
            "inputs": "((T([8, 1024, 512], f32), T([8, 1024, 1], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([512], f32), T([8, 1024, 512], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 1024], i64), 16), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 1024], f32), 8), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 1024], f32), 16), {})"
        },
        {
            "count": 2,
            "inputs": "((T([8, 1024, 512], f32), 0.04419417382415922), {})"
        },
        {
            "count": 32,
            "inputs": "((T([8, 1024, 512], f32), T([512], f32)), {})"
        },
        {
            "count": 96,
            "inputs": "((T([8, 1024, 512], f32), T([8, 1024, 512], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([8, 1024, 1], f32), T([8, 1024, 1], f32)), {})"
        }
    ],
    "aten.mul_.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1024, 1024], f32), T([1024, 1024], b8)), {})"
        }
    ],
    "aten.native_dropout.default": [
        {
            "count": 34,
            "inputs": "((T([8, 1024, 512], f32), 0.1, True), {})"
        },
        {
            "count": 18,
            "inputs": "((T([8, 8, 1024, 1024], f32), 0.1, True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8, 1024, 2048], f32), 0.1, True), {})"
        }
    ],
    "aten.native_dropout_backward.default": [
        {
            "count": 34,
            "inputs": "((T([8, 1024, 512], f32), T([8, 1024, 512], b8), 1.1111111111111112), {})"
        },
        {
            "count": 12,
            "inputs": "((T([8, 1024, 2048], f32), T([8, 1024, 2048], b8), 1.1111111111111112), {})"
        },
        {
            "count": 18,
            "inputs": "((T([8, 8, 1024, 1024], f32), T([8, 8, 1024, 1024], b8), 1.1111111111111112), {})"
        }
    ],
    "aten.neg.default": [
        {
            "count": 1,
            "inputs": "((T([1024, 1024], i64),), {})"
        }
    ],
    "aten.new_zeros.default": [
        {
            "count": 1,
            "inputs": "((T([8, 1024], i64), [8, 1024]), {'pin_memory': False})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([8192, 32128], f32), T([8192], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([8192, 32128], f32), T([8192], i64), None, 1, -100), {})"
        }
    ],
    "aten.pow.Tensor_Scalar": [
        {
            "count": 32,
            "inputs": "((T([8, 1024, 512], f32), 2), {})"
        },
        {
            "count": 32,
            "inputs": "((T([8, 1024, 1], f32), 3), {})"
        },
        {
            "count": 32,
            "inputs": "((T([8, 1024, 512], f32), 1.0), {})"
        }
    ],
    "aten.relu.default": [
        {
            "count": 12,
            "inputs": "((T([8, 1024, 2048], f32),), {})"
        }
    ],
    "aten.rsqrt.default": [
        {
            "count": 32,
            "inputs": "((T([8, 1024, 1], f32),), {})"
        }
    ],
    "aten.rsub.Scalar": [
        {
            "count": 2,
            "inputs": "((T([8, 1, 1, 1024], f32), 1.0), {})"
        }
    ],
    "aten.slice_backward.default": [
        {
            "count": 2,
            "inputs": "((T([1, 8, 1024, 1024], f32), [1, 8, 1024, 1024], 2, -1024, 9223372036854775807, 1), {})"
        }
    ],
    "aten.sub.Tensor": [
        {
            "count": 2,
            "inputs": "((T([1, 1024], i64), T([1024, 1], i64)), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 32,
            "inputs": "((T([8, 1024, 512], f32), [0, 1], True), {})"
        },
        {
            "count": 32,
            "inputs": "((T([8, 1024, 512], f32), [2], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([8, 8, 1024, 1024], f32), [0], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 12,
            "inputs": "((T([8, 1024, 2048], f32), T([8, 1024, 2048], f32), 0), {})"
        }
    ],
    "aten.triu.default": [
        {
            "count": 1,
            "inputs": "((T([1024, 1024], f32), 1), {})"
        }
    ],
    "aten.where.self": [
        {
            "count": 2,
            "inputs": "((T([1024, 1024], b8), T([1024, 1024], i64), T([1024, 1024], i64)), {})"
        }
    ]
}