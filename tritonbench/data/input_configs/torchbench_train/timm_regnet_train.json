{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([32, 3, 3, 3], f32), T([224, 32, 1, 1], f32), T([224, 112, 3, 3], f32), T([8, 224, 1, 1], f32), T([224, 8, 1, 1], f32), T([224, 224, 1, 1], f32), T([224, 32, 1, 1], f32), T([224, 224, 1, 1], f32), T([224, 112, 3, 3], f32), T([56, 224, 1, 1], f32), T([224, 56, 1, 1], f32), T([224, 224, 1, 1], f32), T([448, 224, 1, 1], f32), T([448, 112, 3, 3], f32), T([56, 448, 1, 1], f32), T([448, 56, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 224, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 112, 3, 3], f32), T([112, 448, 1, 1], f32), T([448, 112, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 112, 3, 3], f32), T([112, 448, 1, 1], f32), T([448, 112, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 112, 3, 3], f32), T([112, 448, 1, 1], f32), T([448, 112, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 112, 3, 3], f32), T([112, 448, 1, 1], f32), T([448, 112, 1, 1], f32), T([448, 448, 1, 1], f32), T([896, 448, 1, 1], f32), T([896, 112, 3, 3], f32), T([112, 896, 1, 1], f32), T([896, 112, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 448, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([2240, 896, 1, 1], f32), T([2240, 112, 3, 3], f32), T([224, 2240, 1, 1], f32), T([2240, 224, 1, 1], f32), T([2240, 2240, 1, 1], f32), T([2240, 896, 1, 1], f32), T([1000, 2240], f32)], [T([32, 3, 3, 3], f32), T([224, 32, 1, 1], f32), T([224, 112, 3, 3], f32), T([8, 224, 1, 1], f32), T([224, 8, 1, 1], f32), T([224, 224, 1, 1], f32), T([224, 32, 1, 1], f32), T([224, 224, 1, 1], f32), T([224, 112, 3, 3], f32), T([56, 224, 1, 1], f32), T([224, 56, 1, 1], f32), T([224, 224, 1, 1], f32), T([448, 224, 1, 1], f32), T([448, 112, 3, 3], f32), T([56, 448, 1, 1], f32), T([448, 56, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 224, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 112, 3, 3], f32), T([112, 448, 1, 1], f32), T([448, 112, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 112, 3, 3], f32), T([112, 448, 1, 1], f32), T([448, 112, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 112, 3, 3], f32), T([112, 448, 1, 1], f32), T([448, 112, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 448, 1, 1], f32), T([448, 112, 3, 3], f32), T([112, 448, 1, 1], f32), T([448, 112, 1, 1], f32), T([448, 448, 1, 1], f32), T([896, 448, 1, 1], f32), T([896, 112, 3, 3], f32), T([112, 896, 1, 1], f32), T([896, 112, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 448, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 896, 1, 1], f32), T([896, 112, 3, 3], f32), T([224, 896, 1, 1], f32), T([896, 224, 1, 1], f32), T([896, 896, 1, 1], f32), T([2240, 896, 1, 1], f32), T([2240, 112, 3, 3], f32), T([224, 2240, 1, 1], f32), T([2240, 224, 1, 1], f32), T([2240, 2240, 1, 1], f32), T([2240, 896, 1, 1], f32), T([1000, 2240], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([32, 1000], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 6,
            "inputs": "((T([32, 224, 56, 56], f32), T([32, 224, 56, 56], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([32, 448, 28, 28], f32), T([32, 448, 28, 28], f32)), {})"
        },
        {
            "count": 33,
            "inputs": "((T([32, 896, 14, 14], f32), T([32, 896, 14, 14], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 2240, 7, 7], f32), T([32, 2240, 7, 7], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 112, 112], f32), T([32, 32, 112, 112], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 62,
            "inputs": "((T([], i64), 1), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([32, 2240], f32), T([2240, 1000], f32, stride=(1, 2240))), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 2,
            "inputs": "((T([32], f32),), {})"
        },
        {
            "count": 27,
            "inputs": "((T([224], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([56], f32),), {})"
        },
        {
            "count": 37,
            "inputs": "((T([448], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([112], f32),), {})"
        },
        {
            "count": 79,
            "inputs": "((T([896], f32),), {})"
        },
        {
            "count": 9,
            "inputs": "((T([2240], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 3, 3, 3], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([224, 32, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([224, 112, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([8, 224, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([224, 8, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([224, 224, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([56, 224, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([224, 56, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([448, 224, 1, 1], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([448, 112, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([56, 448, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([448, 56, 1, 1], f32),), {})"
        },
        {
            "count": 9,
            "inputs": "((T([448, 448, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([112, 448, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([448, 112, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([896, 448, 1, 1], f32),), {})"
        },
        {
            "count": 11,
            "inputs": "((T([896, 112, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([112, 896, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([896, 112, 1, 1], f32),), {})"
        },
        {
            "count": 21,
            "inputs": "((T([896, 896, 1, 1], f32),), {})"
        },
        {
            "count": 10,
            "inputs": "((T([224, 896, 1, 1], f32),), {})"
        },
        {
            "count": 10,
            "inputs": "((T([896, 224, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2240, 896, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2240, 112, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([224, 2240, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2240, 224, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2240, 2240, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 2240], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([32, 3, 224, 224], f32), T([32, 3, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 112, 112], f32), T([224, 32, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 112, 112], f32), T([224, 112, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 1, 1], f32), T([8, 224, 1, 1], f32), T([8], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 8, 1, 1], f32), T([224, 8, 1, 1], f32), T([224], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 224, 56, 56], f32), T([224, 224, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 112, 112], f32), T([224, 32, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 56, 56], f32), T([224, 112, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 1, 1], f32), T([56, 224, 1, 1], f32), T([56], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 56, 1, 1], f32), T([224, 56, 1, 1], f32), T([224], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 56, 56], f32), T([448, 224, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 56, 56], f32), T([448, 112, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 4), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 1, 1], f32), T([56, 448, 1, 1], f32), T([56], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 56, 1, 1], f32), T([448, 56, 1, 1], f32), T([448], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 9,
            "inputs": "((T([32, 448, 28, 28], f32), T([448, 448, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 56, 56], f32), T([448, 224, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 448, 28, 28], f32), T([448, 112, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 4), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 448, 1, 1], f32), T([112, 448, 1, 1], f32), T([112], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 112, 1, 1], f32), T([448, 112, 1, 1], f32), T([448], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 28, 28], f32), T([896, 448, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 28, 28], f32), T([896, 112, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 8), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 1, 1], f32), T([112, 896, 1, 1], f32), T([112], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 112, 1, 1], f32), T([896, 112, 1, 1], f32), T([896], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 21,
            "inputs": "((T([32, 896, 14, 14], f32), T([896, 896, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 28, 28], f32), T([896, 448, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 896, 14, 14], f32), T([896, 112, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 8), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 896, 1, 1], f32), T([224, 896, 1, 1], f32), T([224], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 224, 1, 1], f32), T([896, 224, 1, 1], f32), T([896], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 14, 14], f32), T([2240, 896, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 14, 14], f32), T([2240, 112, 3, 3], f32), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 20), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 1, 1], f32), T([224, 2240, 1, 1], f32), T([224], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 1, 1], f32), T([2240, 224, 1, 1], f32), T([2240], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 7, 7], f32), T([2240, 2240, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 14, 14], f32), T([2240, 896, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 2240, 7, 7], f32), T([32, 896, 14, 14], f32), T([2240, 896, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 7, 7], f32), T([32, 2240, 7, 7], f32), T([2240, 2240, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 1, 1], f32), T([32, 224, 1, 1], f32), T([2240, 224, 1, 1], f32), [2240], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 1, 1], f32), T([32, 2240, 1, 1], f32), T([224, 2240, 1, 1], f32), [224], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 7, 7], f32), T([32, 2240, 14, 14], f32), T([2240, 112, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 20, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 14, 14], f32), T([32, 896, 14, 14], f32), T([2240, 896, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 21,
            "inputs": "((T([32, 896, 14, 14], f32), T([32, 896, 14, 14], f32), T([896, 896, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 896, 1, 1], f32), T([32, 224, 1, 1], f32), T([896, 224, 1, 1], f32), [896], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 224, 1, 1], f32), T([32, 896, 1, 1], f32), T([224, 896, 1, 1], f32), [224], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 896, 14, 14], f32), T([32, 896, 14, 14], f32), T([896, 112, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 8, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 14, 14], f32), T([32, 448, 28, 28], f32), T([896, 448, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 1, 1], f32), T([32, 112, 1, 1], f32), T([896, 112, 1, 1], f32), [896], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 112, 1, 1], f32), T([32, 896, 1, 1], f32), T([112, 896, 1, 1], f32), [112], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 14, 14], f32), T([32, 896, 28, 28], f32), T([896, 112, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 8, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 28, 28], f32), T([32, 448, 28, 28], f32), T([896, 448, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 9,
            "inputs": "((T([32, 448, 28, 28], f32), T([32, 448, 28, 28], f32), T([448, 448, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 448, 1, 1], f32), T([32, 112, 1, 1], f32), T([448, 112, 1, 1], f32), [448], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 112, 1, 1], f32), T([32, 448, 1, 1], f32), T([112, 448, 1, 1], f32), [112], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([32, 448, 28, 28], f32), T([32, 448, 28, 28], f32), T([448, 112, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 4, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 28, 28], f32), T([32, 224, 56, 56], f32), T([448, 224, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 1, 1], f32), T([32, 56, 1, 1], f32), T([448, 56, 1, 1], f32), [448], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 56, 1, 1], f32), T([32, 448, 1, 1], f32), T([56, 448, 1, 1], f32), [56], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 28, 28], f32), T([32, 448, 56, 56], f32), T([448, 112, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 4, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 56, 56], f32), T([32, 224, 56, 56], f32), T([448, 224, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 224, 56, 56], f32), T([32, 224, 56, 56], f32), T([224, 224, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 1, 1], f32), T([32, 56, 1, 1], f32), T([224, 56, 1, 1], f32), [224], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 56, 1, 1], f32), T([32, 224, 1, 1], f32), T([56, 224, 1, 1], f32), [56], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 56, 56], f32), T([32, 224, 56, 56], f32), T([224, 112, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 56, 56], f32), T([32, 32, 112, 112], f32), T([224, 32, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 1, 1], f32), T([32, 8, 1, 1], f32), T([224, 8, 1, 1], f32), [224], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 8, 1, 1], f32), T([32, 224, 1, 1], f32), T([8, 224, 1, 1], f32), [8], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 56, 56], f32), T([32, 224, 112, 112], f32), T([224, 112, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 112, 112], f32), T([32, 32, 112, 112], f32), T([224, 32, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 112, 112], f32), T([32, 3, 224, 224], f32), T([32, 3, 3, 3], f32), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([32, 32, 112, 112], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 112, 112], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 224, 56, 56], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 56, 56], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 15,
            "inputs": "((T([32, 448, 28, 28], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 28, 28], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 33,
            "inputs": "((T([32, 896, 14, 14], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 14, 14], f32), T([2240], f32), T([2240], f32), T([2240], f32), T([2240], f32), True, 0.1, 1e-05), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 2240, 7, 7], f32), T([2240], f32), T([2240], f32), T([2240], f32), T([2240], f32), True, 0.1, 1e-05), {})"
        }
    ],
    "aten.cudnn_batch_norm_backward.default": [
        {
            "count": 3,
            "inputs": "((T([32, 2240, 7, 7], f32), T([32, 2240, 7, 7], f32), T([2240], f32), T([2240], f32), T([2240], f32), T([2240], f32), T([2240], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 14, 14], f32), T([32, 2240, 14, 14], f32), T([2240], f32), T([2240], f32), T([2240], f32), T([2240], f32), T([2240], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 33,
            "inputs": "((T([32, 896, 14, 14], f32), T([32, 896, 14, 14], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 28, 28], f32), T([32, 896, 28, 28], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), T([896], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([32, 448, 28, 28], f32), T([32, 448, 28, 28], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 56, 56], f32), T([32, 448, 56, 56], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), T([448], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([32, 224, 56, 56], f32), T([32, 224, 56, 56], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 112, 112], f32), T([32, 224, 112, 112], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), T([224], f32), 1e-05, T([0], u8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 112, 112], f32), T([32, 32, 112, 112], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), T([32], f32), 1e-05, T([0], u8)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 2,
            "inputs": "((T([32, 2240, 7, 7], f32, stride=(2240, 1, 0, 0)), 49), {})"
        },
        {
            "count": 11,
            "inputs": "((T([32, 896, 14, 14], f32, stride=(896, 1, 0, 0)), 196), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 448, 28, 28], f32, stride=(448, 1, 0, 0)), 784), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 224, 56, 56], f32, stride=(224, 1, 0, 0)), 3136), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 2,
            "inputs": "((T([32, 224, 56, 56], f32), [2, 3], True), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 448, 28, 28], f32), [2, 3], True), {})"
        },
        {
            "count": 11,
            "inputs": "((T([32, 896, 14, 14], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 7, 7], f32), [2, 3], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 7, 7], f32), [-1, -2], True), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([1000, 2240], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 32], f32, stride=(1, 1000)), T([32, 2240], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 4,
            "inputs": "((T([32, 224, 56, 56], f32), T([32, 224, 1, 1], f32)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([32, 448, 28, 28], f32), T([32, 448, 1, 1], f32)), {})"
        },
        {
            "count": 22,
            "inputs": "((T([32, 896, 14, 14], f32), T([32, 896, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 2240, 7, 7], f32), T([32, 2240, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 7, 7], f32), T([32, 2240, 7, 7], f32)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([32, 896, 14, 14], f32), T([32, 896, 14, 14], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 448, 28, 28], f32), T([32, 448, 28, 28], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 224, 56, 56], f32), T([32, 224, 56, 56], f32)), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([32, 1000], f32), T([32], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([32], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([32], i64), 1000), {})"
        }
    ],
    "aten.relu.default": [
        {
            "count": 2,
            "inputs": "((T([32, 224, 56, 56], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 448, 28, 28], f32),), {})"
        },
        {
            "count": 11,
            "inputs": "((T([32, 896, 14, 14], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 7, 7], f32),), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 1,
            "inputs": "((T([32, 32, 112, 112], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 112, 112], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([32, 224, 56, 56], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 8, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 56, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 56, 56], f32),), {})"
        },
        {
            "count": 9,
            "inputs": "((T([32, 448, 28, 28], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 112, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 28, 28], f32),), {})"
        },
        {
            "count": 21,
            "inputs": "((T([32, 896, 14, 14], f32),), {})"
        },
        {
            "count": 11,
            "inputs": "((T([32, 224, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 14, 14], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 7, 7], f32),), {})"
        }
    ],
    "aten.sigmoid.default": [
        {
            "count": 2,
            "inputs": "((T([32, 224, 1, 1], f32),), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 448, 1, 1], f32),), {})"
        },
        {
            "count": 11,
            "inputs": "((T([32, 896, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 1, 1], f32),), {})"
        }
    ],
    "aten.sigmoid_backward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 2240, 1, 1], f32), T([32, 2240, 1, 1], f32)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([32, 896, 1, 1], f32), T([32, 896, 1, 1], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 448, 1, 1], f32), T([32, 448, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 224, 1, 1], f32), T([32, 224, 1, 1], f32)), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 7, 7], f32), [2, 3], True), {})"
        },
        {
            "count": 11,
            "inputs": "((T([32, 896, 14, 14], f32), [2, 3], True), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 448, 28, 28], f32), [2, 3], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 224, 56, 56], f32), [2, 3], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 2,
            "inputs": "((T([32, 2240, 7, 7], f32), T([32, 2240, 7, 7], f32), 0), {})"
        },
        {
            "count": 11,
            "inputs": "((T([32, 224, 1, 1], f32), T([32, 224, 1, 1], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 2240, 14, 14], f32), T([32, 2240, 14, 14], f32), 0), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 896, 14, 14], f32), T([32, 896, 14, 14], f32), 0), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 112, 1, 1], f32), T([32, 112, 1, 1], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 896, 28, 28], f32), T([32, 896, 28, 28], f32), 0), {})"
        },
        {
            "count": 14,
            "inputs": "((T([32, 448, 28, 28], f32), T([32, 448, 28, 28], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([32, 56, 1, 1], f32), T([32, 56, 1, 1], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 448, 56, 56], f32), T([32, 448, 56, 56], f32), 0), {})"
        },
        {
            "count": 5,
            "inputs": "((T([32, 224, 56, 56], f32), T([32, 224, 56, 56], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 8, 1, 1], f32), T([32, 8, 1, 1], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 224, 112, 112], f32), T([32, 224, 112, 112], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 32, 112, 112], f32), T([32, 32, 112, 112], f32), 0), {})"
        }
    ]
}