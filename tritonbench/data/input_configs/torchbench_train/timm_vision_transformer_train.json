{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([384, 3, 16, 16], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1000, 384], f32)], [T([384, 3, 16, 16], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1152, 384], f32), T([384, 384], f32), T([1536, 384], f32), T([384, 1536], f32), T([1000, 384], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([32, 1000], f32), 1, f32), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention.default": [
        {
            "count": 12,
            "inputs": "((T([32, 6, 197, 64], f32, stride=(226944, 64, 1152, 1)), T([32, 6, 197, 64], f32, stride=(226944, 64, 1152, 1)), T([32, 6, 197, 64], f32, stride=(226944, 64, 1152, 1)), None, True), {})"
        }
    ],
    "aten._scaled_dot_product_efficient_attention_backward.default": [
        {
            "count": 12,
            "inputs": "((T([32, 6, 197, 64], f32, stride=(75648, 64, 384, 1)), T([32, 6, 197, 64], f32, stride=(226944, 64, 1152, 1)), T([32, 6, 197, 64], f32, stride=(226944, 64, 1152, 1)), T([32, 6, 197, 64], f32, stride=(226944, 64, 1152, 1)), None, T([32, 6, 197, 64], f32, stride=(75648, 64, 384, 1)), T([32, 6, 224], f32), T([], i64), T([], i64), 0.0, [True, True, True, False]), {})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 12,
            "inputs": "((T([32, 197, 3, 6, 64], f32), [32, 197, 1152]), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 1,
            "inputs": "((T([32, 197, 384], f32), T([1, 197, 384], f32)), {})"
        },
        {
            "count": 48,
            "inputs": "((T([32, 197, 384], f32), T([32, 197, 384], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 12,
            "inputs": "((T([1152], f32), T([6304, 384], f32), T([384, 1152], f32, stride=(1, 384))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([384], f32), T([6304, 384], f32), T([384, 384], f32, stride=(1, 384))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([1536], f32), T([6304, 384], f32), T([384, 1536], f32, stride=(1, 384))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([384], f32), T([6304, 1536], f32), T([1536, 384], f32, stride=(1, 1536))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32), T([32, 384], f32, stride=(75648, 1)), T([384, 1000], f32, stride=(1, 384))), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 1,
            "inputs": "(([T([32, 1, 384], f32, stride=(0, 384, 1)), T([32, 196, 384], f32, stride=(75264, 1, 196))], 1), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 1,
            "inputs": "((T([1, 1, 384], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 197, 384], f32),), {})"
        },
        {
            "count": 75,
            "inputs": "((T([384], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([1152], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([1536], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([384, 3, 16, 16], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([1152, 384], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([384, 384], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([1536, 384], f32),), {})"
        },
        {
            "count": 12,
            "inputs": "((T([384, 1536], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 384], f32),), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([32, 3, 224, 224], f32), T([384, 3, 16, 16], f32), T([384], f32), [16, 16], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 384, 14, 14], f32, stride=(75648, 1, 5376, 384)), T([32, 3, 224, 224], f32), T([384, 3, 16, 16], f32), [384], [16, 16], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.gelu.default": [
        {
            "count": 12,
            "inputs": "((T([32, 197, 1536], f32),), {})"
        }
    ],
    "aten.gelu_backward.default": [
        {
            "count": 12,
            "inputs": "((T([32, 197, 1536], f32), T([32, 197, 1536], f32)), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([1000, 384], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 32], f32, stride=(1, 1000)), T([32, 384], f32, stride=(75648, 1))), {})"
        },
        {
            "count": 12,
            "inputs": "((T([6304, 384], f32), T([384, 1536], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([384, 6304], f32, stride=(1, 384)), T([6304, 1536], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([6304, 1536], f32), T([1536, 384], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([1536, 6304], f32, stride=(1, 1536)), T([6304, 384], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([6304, 384], f32), T([384, 384], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([384, 6304], f32, stride=(1, 384)), T([6304, 384], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([6304, 1152], f32), T([1152, 384], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([1152, 6304], f32, stride=(1, 1152)), T([6304, 384], f32)), {})"
        }
    ],
    "aten.native_layer_norm.default": [
        {
            "count": 25,
            "inputs": "((T([32, 197, 384], f32), [384], T([384], f32), T([384], f32), 1e-06), {})"
        }
    ],
    "aten.native_layer_norm_backward.default": [
        {
            "count": 25,
            "inputs": "((T([32, 197, 384], f32), T([32, 197, 384], f32), [384], T([32, 197, 1], f32), T([32, 197, 1], f32), T([384], f32), T([384], f32), [True, True, True]), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([32, 1000], f32), T([32], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), T([32], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 1,
            "inputs": "((T([32], i64), 1000), {})"
        }
    ],
    "aten.select_backward.default": [
        {
            "count": 1,
            "inputs": "((T([32, 384], f32), [32, 197, 384], 1, 0), {})"
        }
    ],
    "aten.stack.default": [
        {
            "count": 12,
            "inputs": "(([T([32, 6, 197, 64], f32, stride=(75648, 64, 384, 1)), T([32, 6, 197, 64], f32, stride=(75648, 64, 384, 1)), T([32, 6, 197, 64], f32, stride=(75648, 64, 384, 1))],), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([32, 1000], f32), [0], True), {})"
        },
        {
            "count": 24,
            "inputs": "((T([6304, 384], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([6304, 1536], f32), [0], True), {})"
        },
        {
            "count": 12,
            "inputs": "((T([6304, 1152], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 197, 384], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([32, 1, 384], f32, stride=(75648, 384, 1)), [0], True), {})"
        }
    ],
    "aten.unbind.int": [
        {
            "count": 12,
            "inputs": "((T([3, 32, 6, 197, 64], f32, stride=(384, 226944, 64, 1152, 1)),), {})"
        }
    ]
}