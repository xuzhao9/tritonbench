{
    "aten._foreach_add.List": [
        {
            "count": 1,
            "inputs": "(([T([512, 256, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([1024, 512, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([1024, 1024, 3, 3], f32), T([1024], f32), T([15, 1024, 1, 1], f32), T([15], f32), T([60, 1024, 1, 1], f32), T([60], f32), T([2048, 1024, 1, 1], f32), T([512, 1024, 1, 1], f32), T([512, 512, 3, 3], f32), T([2048, 512, 1, 1], f32), T([512, 2048, 1, 1], f32), T([512, 512, 3, 3], f32), T([2048, 512, 1, 1], f32), T([512, 2048, 1, 1], f32), T([512, 512, 3, 3], f32), T([2048, 512, 1, 1], f32), T([81, 2048], f32), T([81], f32), T([320, 2048], f32), T([320], f32)], [T([512, 256, 1, 1], f32), T([128, 256, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([128, 512, 1, 1], f32), T([128, 128, 3, 3], f32), T([512, 128, 1, 1], f32), T([1024, 512, 1, 1], f32), T([256, 512, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([256, 1024, 1, 1], f32), T([256, 256, 3, 3], f32), T([1024, 256, 1, 1], f32), T([1024, 1024, 3, 3], f32), T([1024], f32), T([15, 1024, 1, 1], f32), T([15], f32), T([60, 1024, 1, 1], f32), T([60], f32), T([2048, 1024, 1, 1], f32), T([512, 1024, 1, 1], f32), T([512, 512, 3, 3], f32), T([2048, 512, 1, 1], f32), T([512, 2048, 1, 1], f32), T([512, 512, 3, 3], f32), T([2048, 512, 1, 1], f32), T([512, 2048, 1, 1], f32), T([512, 512, 3, 3], f32), T([2048, 512, 1, 1], f32), T([81, 2048], f32), T([81], f32), T([320, 2048], f32), T([320], f32)]), {'alpha': 0.0001})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([512, 81], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([512, 81], f32), T([512, 81], f32), 1, f32), {})"
        }
    ],
    "aten._to_copy.default": [
        {
            "count": 1,
            "inputs": "((T([21, 4], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([21], i64),), {'dtype': i64, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([84], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([47], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([256], i8),), {'dtype': f32})"
        },
        {
            "count": 1,
            "inputs": "((T([12000], i64),), {'dtype': f32, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([], i64),), {'dtype': f32, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([512], i64),), {'dtype': i64, 'layout': torch.strided, 'device': 'cpu'})"
        },
        {
            "count": 1,
            "inputs": "((T([1], i64),), {'dtype': i64, 'layout': torch.strided, 'device': 'cuda'})"
        }
    ],
    "aten._unsafe_view.default": [
        {
            "count": 2,
            "inputs": "((T([47, 84], f32), [3948]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 47, 84, 15], f32), [1, 59220]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 47, 84, 15, 4], f32), [1, 59220, 4]), {})"
        }
    ],
    "aten.abs.default": [
        {
            "count": 1,
            "inputs": "((T([128, 4], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([12000, 4], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([12000], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 4], f32),), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 8,
            "inputs": "((T([128], f32), 1e-05), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1, 128, 94, 167], f32), T([1, 128, 1, 1], f32)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([512], f32), 1e-05), {})"
        },
        {
            "count": 5,
            "inputs": "((T([1, 512, 94, 167], f32), T([1, 512, 1, 1], f32)), {})"
        },
        {
            "count": 46,
            "inputs": "((T([256], f32), 1e-05), {})"
        },
        {
            "count": 46,
            "inputs": "((T([1, 256, 47, 84], f32), T([1, 256, 1, 1], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([1024], f32), 1e-05), {})"
        },
        {
            "count": 24,
            "inputs": "((T([1, 1024, 47, 84], f32), T([1, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([3948, 1, 4], f32), T([1, 15, 4], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 1], f32), T([59220], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([59220], f32, stride=(4,)), T([59220], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([59220, 1], f32), T([59220, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([12000, 4], f32), T([12000, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 1], f32), T([2021], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 512, 7, 7], f32), T([1, 512, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([2048], f32), 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 2048, 7, 7], f32), T([1, 2048, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128], f32, stride=(4,)), T([128], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 2048], f32), T([512, 2048], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 2048, 7, 7], f32), T([512, 2048, 7, 7], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 1024, 14, 14], f32), T([512, 1024, 14, 14], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([1, 1024, 47, 84], f32), T([1, 1024, 47, 84], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 512, 94, 167], f32), T([1, 512, 94, 167], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 3,
            "inputs": "((T([1, 256, 187, 334], f32), T([1, 256, 187, 334], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 512, 94, 167], f32), T([1, 512, 94, 167], f32)), {})"
        },
        {
            "count": 23,
            "inputs": "((T([1, 1024, 47, 84], f32), T([1, 1024, 47, 84], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 2048, 7, 7], f32), T([512, 2048, 7, 7], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([81], f32), T([512, 2048], f32), T([2048, 81], f32, stride=(1, 2048))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320], f32), T([512, 2048], f32), T([2048, 320], f32, stride=(1, 2048))), {})"
        }
    ],
    "aten.all.default": [
        {
            "count": 1,
            "inputs": "((T([21, 59220], b8),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([59220], b8),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([12000], b8),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([12000, 4], b8),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 2021], b8),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128], b8),), {})"
        }
    ],
    "aten.all.dim": [
        {
            "count": 1,
            "inputs": "((T([12000, 4], b8), 1), {})"
        }
    ],
    "aten.argmax.default": [
        {
            "count": 1,
            "inputs": "((T([512, 81], f32), 1), {})"
        }
    ],
    "aten.binary_cross_entropy_with_logits.default": [
        {
            "count": 1,
            "inputs": "((T([256], f32), T([256], f32), None, None, 2), {})"
        }
    ],
    "aten.bitwise_and.Tensor": [
        {
            "count": 4,
            "inputs": "((T([59220], b8), T([59220], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([12000], b8), T([12000], b8)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2021], b8), T([2021], b8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512], b8), T([512], b8)), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 2,
            "inputs": "(([T([59220, 4], f32)],), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([2000, 4], f32), T([21, 4], f32)],), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([2000], f32), T([21], f32)],), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128], i64), T([384], i64)],), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([512, 4], f32)],), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([512, 1], f32), T([512, 4], f32)], 1), {})"
        }
    ],
    "aten.clamp.default": [
        {
            "count": 2,
            "inputs": "((T([59220, 1], f32), None, 4.135166556742356), {})"
        },
        {
            "count": 2,
            "inputs": "((T([12000], f32, stride=(4,)), 0, 1333), {})"
        },
        {
            "count": 2,
            "inputs": "((T([12000], f32, stride=(4,)), 0, 748), {})"
        }
    ],
    "aten.clamp_.default": [
        {
            "count": 1,
            "inputs": "((T([21, 59220, 2], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 2021, 2], f32), 0), {})"
        }
    ],
    "aten.clone.default": [
        {
            "count": 1,
            "inputs": "((T([512, 256, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 256, 1, 1], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128, 128, 3, 3], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([512, 128, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([128, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 512, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 512, 1, 1], f32),), {})"
        },
        {
            "count": 23,
            "inputs": "((T([256, 256, 3, 3], f32),), {})"
        },
        {
            "count": 23,
            "inputs": "((T([1024, 256, 1, 1], f32),), {})"
        },
        {
            "count": 22,
            "inputs": "((T([256, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 1024, 3, 3], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([15, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([15], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([60, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([60], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2048, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 1024, 1, 1], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 512, 3, 3], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([2048, 512, 1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 2048, 1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([81, 2048], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([81], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320, 2048], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320], f32),), {})"
        }
    ],
    "aten.constant_pad_nd.default": [
        {
            "count": 1,
            "inputs": "((T([3, 748, 1333], f32), [0, 0, 0, 0], 0.0), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 1,
            "inputs": "((T([1, 3, 748, 1333], f32), T([64, 3, 7, 7], f32), None, [2, 2], [3, 3], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 64, 187, 334], f32), T([64, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1, 64, 187, 334], f32), T([64, 64, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 64, 187, 334], f32), T([256, 64, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 256, 187, 334], f32), T([64, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 256, 187, 334], f32), T([128, 256, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 128, 94, 167], f32), T([128, 128, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 128, 94, 167], f32), T([512, 128, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 256, 187, 334], f32), T([512, 256, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1, 512, 94, 167], f32), T([128, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 512, 94, 167], f32), T([256, 512, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 23,
            "inputs": "((T([1, 256, 47, 84], f32), T([256, 256, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 23,
            "inputs": "((T([1, 256, 47, 84], f32), T([1024, 256, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 512, 94, 167], f32), T([1024, 512, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 22,
            "inputs": "((T([1, 1024, 47, 84], f32), T([256, 1024, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1024, 47, 84], f32), T([1024, 1024, 3, 3], f32), T([1024], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1024, 47, 84], f32), T([15, 1024, 1, 1], f32), T([15], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1024, 47, 84], f32), T([60, 1024, 1, 1], f32), T([60], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 1024, 14, 14], f32), T([512, 1024, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 512, 7, 7], f32), T([512, 512, 3, 3], f32), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 512, 7, 7], f32), T([2048, 512, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 1024, 14, 14], f32), T([2048, 1024, 1, 1], f32), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 2048, 7, 7], f32), T([512, 2048, 1, 1], f32), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 3,
            "inputs": "((T([512, 2048, 7, 7], f32), T([512, 512, 7, 7], f32), T([2048, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 512, 7, 7], f32), T([512, 512, 7, 7], f32), T([512, 512, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 512, 7, 7], f32), T([512, 2048, 7, 7], f32), T([512, 2048, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 2048, 7, 7], f32), T([512, 1024, 14, 14], f32), T([2048, 1024, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 512, 7, 7], f32), T([512, 1024, 14, 14], f32), T([512, 1024, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 60, 47, 84], f32, stride=(60, 1, 5040, 60)), T([1, 1024, 47, 84], f32), T([60, 1024, 1, 1], f32), [60], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 15, 47, 84], f32, stride=(59220, 1, 1260, 15)), T([1, 1024, 47, 84], f32), T([15, 1024, 1, 1], f32), [15], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1024, 47, 84], f32), T([1, 1024, 47, 84], f32), T([1024, 1024, 3, 3], f32), [1024], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 23,
            "inputs": "((T([1, 1024, 47, 84], f32), T([1, 256, 47, 84], f32), T([1024, 256, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 23,
            "inputs": "((T([1, 256, 47, 84], f32), T([1, 256, 47, 84], f32), T([256, 256, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 22,
            "inputs": "((T([1, 256, 47, 84], f32), T([1, 1024, 47, 84], f32), T([256, 1024, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1024, 47, 84], f32), T([1, 512, 94, 167], f32), T([1024, 512, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 256, 47, 84], f32), T([1, 512, 94, 167], f32), T([256, 512, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 512, 94, 167], f32), T([1, 128, 94, 167], f32), T([512, 128, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 128, 94, 167], f32), T([1, 128, 94, 167], f32), T([128, 128, 3, 3], f32), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1, 128, 94, 167], f32), T([1, 512, 94, 167], f32), T([128, 512, 1, 1], f32), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 512, 94, 167], f32), T([1, 256, 187, 334], f32), T([512, 256, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 94, 167], f32), T([1, 256, 187, 334], f32), T([128, 256, 1, 1], f32), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [False, True, False]), {})"
        }
    ],
    "aten.cudnn_batch_norm.default": [
        {
            "count": 1,
            "inputs": "((T([1, 64, 374, 667], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), False, 0.1, 1e-05), {})"
        },
        {
            "count": 6,
            "inputs": "((T([1, 64, 187, 334], f32), T([64], f32), T([64], f32), T([64], f32), T([64], f32), False, 0.1, 1e-05), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 256, 187, 334], f32), T([256], f32), T([256], f32), T([256], f32), T([256], f32), False, 0.1, 1e-05), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 1,
            "inputs": "((T([512, 2048, 7, 7], f32, stride=(2048, 1, 0, 0)), 49), {})"
        }
    ],
    "aten.div.Tensor": [
        {
            "count": 1,
            "inputs": "((T([3, 748, 1333], f32), T([3, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 59220], f32), T([21, 59220], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([59220], f32), T([59220], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([], f32), 256), {})"
        },
        {
            "count": 4,
            "inputs": "((T([59220, 1], f32, stride=(4, 4)), 1.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 2021], f32), T([21, 2021], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128], f32), T([128], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([], f32), 512), {})"
        }
    ],
    "aten.eq.Scalar": [
        {
            "count": 1,
            "inputs": "((T([59220], i8), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 59220], i8), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 59220], i8), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], i8), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], i8), -1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], i64), 80), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512], i64), 80), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128], i64), 80), {})"
        }
    ],
    "aten.eq.Tensor": [
        {
            "count": 1,
            "inputs": "((T([21, 59220], f32), T([21, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([12000, 4], f32), T([12000, 4], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([12000], f32), T([12000], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512], i64), T([512], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128], i64), T([128], i64)), {})"
        }
    ],
    "aten.exp.default": [
        {
            "count": 2,
            "inputs": "((T([59220, 1], f32),), {})"
        }
    ],
    "aten.fill_.Scalar": [
        {
            "count": 1,
            "inputs": "((T([59220], i8), -1), {})"
        }
    ],
    "aten.ge.Scalar": [
        {
            "count": 1,
            "inputs": "((T([21, 59220], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([59220], f32), -inf), {})"
        },
        {
            "count": 1,
            "inputs": "((T([59220], f32), 0.3), {})"
        },
        {
            "count": 1,
            "inputs": "((T([59220], f32), 0.7), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 59220], i8), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 2021], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], f32), -inf), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], f32), 0.5), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512], i64), 0), {})"
        }
    ],
    "aten.gt.Scalar": [
        {
            "count": 1,
            "inputs": "((T([21, 59220], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([59220], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([12000], f32), 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 2021], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128], f32), 0), {})"
        }
    ],
    "aten.index.Tensor": [
        {
            "count": 1,
            "inputs": "((T([253], i64), [T([128], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([49165], i64), [T([128], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 4], f32), [T([59220], i64)]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 59220, 4], f32), [T([1, 59220], b8)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 59220], f32), [T([1, 59220], b8)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 59220], i8), [T([1, 59220], b8)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 59220, 4], f32), [T([1, 1], i64), T([1, 12000], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([12000, 4], f32), [T([2000], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([12000], f32), [T([2000], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21], i64), [T([2021], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([308], i64), [T([128], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1713], i64), [T([384], i64)]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2021], i64), [T([512], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021, 4], f32), [T([512], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], f32), [T([512], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 4], f32), [T([512], i64)]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512], i64), [T([512], b8)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512], i64), [T([128], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 80, 4], f32), [T([128], i64), T([128], i64)]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512, 4], f32), [T([128], i64)]), {})"
        }
    ],
    "aten.index_put.default": [
        {
            "count": 1,
            "inputs": "((T([512, 80, 4], f32), [T([128], i64), T([128], i64)], T([128, 4], f32), True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 59220], f32), [T([1, 59220], b8)], T([256], f32), True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 59220, 4], f32), [T([1, 59220], b8)], T([128, 4], f32), True), {})"
        }
    ],
    "aten.index_put_.default": [
        {
            "count": 3,
            "inputs": "((T([59220], i8), [T([59220], b8)], T([], i8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([59220], i8), [T([161], i64)], T([], i8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2021], i8), [T([2021], b8)], T([], i8)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2021], i64), [T([2021], b8)], T([], i64)), {})"
        }
    ],
    "aten.index_select.default": [
        {
            "count": 1,
            "inputs": "((T([1], f32), 0, T([512], i64)), {})"
        }
    ],
    "aten.log.default": [
        {
            "count": 2,
            "inputs": "((T([59220], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128], f32),), {})"
        }
    ],
    "aten.lt.Scalar": [
        {
            "count": 1,
            "inputs": "((T([59220], f32), 0.3), {})"
        },
        {
            "count": 1,
            "inputs": "((T([59220], f32), 0.7), {})"
        },
        {
            "count": 1,
            "inputs": "((T([59220], f32), inf), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], f32), 0.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], f32), inf), {})"
        },
        {
            "count": 2,
            "inputs": "((T([512], i64), 80), {})"
        }
    ],
    "aten.max.default": [
        {
            "count": 1,
            "inputs": "((T([12000, 4], f32),), {})"
        }
    ],
    "aten.max.dim": [
        {
            "count": 1,
            "inputs": "((T([1, 2], i64), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 59220], f32), 0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 59220], f32), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 2021], f32), 0), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 1,
            "inputs": "((T([1, 64, 374, 667], f32), [3, 3], [2, 2], [1, 1]), {})"
        }
    ],
    "aten.maximum.default": [
        {
            "count": 1,
            "inputs": "((T([21, 1, 2], f32, stride=(4, 4, 1)), T([59220, 2], f32, stride=(4, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 1, 2], f32, stride=(4, 4, 1)), T([2021, 2], f32, stride=(4, 1))), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 1,
            "inputs": "((T([512, 2048, 7, 7], f32), [2, 3]), {})"
        }
    ],
    "aten.minimum.default": [
        {
            "count": 1,
            "inputs": "((T([21, 1, 2], f32, stride=(4, 4, 1)), T([59220, 2], f32, stride=(4, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 1, 2], f32, stride=(4, 4, 1)), T([2021, 2], f32, stride=(4, 1))), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([512, 320], f32), T([320, 2048], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([320, 512], f32, stride=(1, 320)), T([512, 2048], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 81], f32), T([81, 2048], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([81, 512], f32, stride=(1, 81)), T([512, 2048], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 16,
            "inputs": "((T([128], f32), T([128], f32)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([1, 128, 94, 167], f32), T([1, 128, 1, 1], f32)), {})"
        },
        {
            "count": 22,
            "inputs": "((T([512], f32), T([512], f32)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([1, 512, 94, 167], f32), T([1, 512, 1, 1], f32)), {})"
        },
        {
            "count": 92,
            "inputs": "((T([256], f32), T([256], f32)), {})"
        },
        {
            "count": 92,
            "inputs": "((T([1, 256, 47, 84], f32), T([1, 256, 1, 1], f32)), {})"
        },
        {
            "count": 48,
            "inputs": "((T([1024], f32), T([1024], f32)), {})"
        },
        {
            "count": 48,
            "inputs": "((T([1, 1024, 47, 84], f32), T([1, 1024, 1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([21], f32), T([21], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([59220], f32), T([59220], f32)), {})"
        },
        {
            "count": 6,
            "inputs": "((T([59220], f32), 0.5), {})"
        },
        {
            "count": 4,
            "inputs": "((T([59220], f32), 1.0), {})"
        },
        {
            "count": 8,
            "inputs": "((T([], f32), 1.0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([59220, 1], f32), T([59220, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([59220, 1], f32), 0.5), {})"
        },
        {
            "count": 2,
            "inputs": "((T([12000, 4], b8), T([12000, 4], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([12000], b8), T([12000], b8)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([12000], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21], f32), 23.025850847100088), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], f32), T([2021], f32)), {})"
        },
        {
            "count": 12,
            "inputs": "((T([512, 512, 7, 7], f32), T([1, 512, 1, 1], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([2048], f32), T([2048], f32)), {})"
        },
        {
            "count": 8,
            "inputs": "((T([512, 2048, 7, 7], f32), T([1, 2048, 1, 1], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128], f32), 0.5), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128], f32), 10.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128], f32), 5.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 4], f32, stride=(0, 0, 0)), T([1, 128, 4], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256], f32), T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 4], f32, stride=(0, 0)), T([128, 4], f32)), {})"
        }
    ],
    "aten.ne.Scalar": [
        {
            "count": 1,
            "inputs": "((T([59220], i8), -1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([59220], i8), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([12000, 4], f32), inf), {})"
        },
        {
            "count": 1,
            "inputs": "((T([12000], f32), inf), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], i64), -1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], i64), 80), {})"
        }
    ],
    "aten.new_full.default": [
        {
            "count": 1,
            "inputs": "((T([59220], i64), [59220], 1), {'dtype': i8, 'pin_memory': False})"
        },
        {
            "count": 1,
            "inputs": "((T([2021], i64), [2021], 1), {'dtype': i8, 'pin_memory': False})"
        }
    ],
    "aten.new_zeros.default": [
        {
            "count": 1,
            "inputs": "((T([128, 4], f32), [512, 80, 4]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([256], f32), [1, 59220]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 4], f32), [1, 59220, 4]), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 1,
            "inputs": "((T([], f32), T([512, 81], f32), T([512], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 1,
            "inputs": "((T([512, 81], f32), T([512], i64), None, 1, -100), {})"
        }
    ],
    "aten.nonzero.default": [
        {
            "count": 1,
            "inputs": "((T([21, 59220], b8),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([59220], b8),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2021], b8),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512], b8),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([128], b8),), {})"
        }
    ],
    "aten.prod.dim_int": [
        {
            "count": 1,
            "inputs": "((T([21, 59220, 2], f32), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 2021, 2], f32), 2), {})"
        }
    ],
    "aten.relu.default": [
        {
            "count": 1,
            "inputs": "((T([1, 1024, 47, 84], f32),), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 1,
            "inputs": "((T([1, 64, 374, 667], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([1, 64, 187, 334], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1, 256, 187, 334], f32),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1, 128, 94, 167], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 512, 94, 167], f32),), {})"
        },
        {
            "count": 46,
            "inputs": "((T([1, 256, 47, 84], f32),), {})"
        },
        {
            "count": 23,
            "inputs": "((T([1, 1024, 47, 84], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 512, 7, 7], f32),), {})"
        },
        {
            "count": 3,
            "inputs": "((T([512, 2048, 7, 7], f32),), {})"
        }
    ],
    "aten.repeat_interleave.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1], i64),), {})"
        }
    ],
    "aten.rsqrt.default": [
        {
            "count": 8,
            "inputs": "((T([128], f32),), {})"
        },
        {
            "count": 11,
            "inputs": "((T([512], f32),), {})"
        },
        {
            "count": 46,
            "inputs": "((T([256], f32),), {})"
        },
        {
            "count": 24,
            "inputs": "((T([1024], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([2048], f32),), {})"
        }
    ],
    "aten.scatter_.value": [
        {
            "count": 1,
            "inputs": "((T([59220], i8), 0, T([128], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([59220], i8), 0, T([128], i64), 0), {})"
        }
    ],
    "aten.sgn.default": [
        {
            "count": 1,
            "inputs": "((T([1, 128, 4], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 4], f32),), {})"
        }
    ],
    "aten.sigmoid.default": [
        {
            "count": 1,
            "inputs": "((T([256], f32),), {})"
        }
    ],
    "aten.stack.default": [
        {
            "count": 1,
            "inputs": "(([T([2], i64)],), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([3948], f32), T([3948], f32), T([3948], f32), T([3948], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([59220], i8)],), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([59220], f32), T([59220], f32), T([59220], f32), T([59220], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([59220, 4], f32)],), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([59220, 1], f32), T([59220, 1], f32), T([59220, 1], f32), T([59220, 1], f32)], -1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([12000], f32), T([12000], f32), T([12000], f32), T([12000], f32)], -1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128], f32), T([128], f32), T([128], f32), T([128], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([128, 4], f32)],), {})"
        }
    ],
    "aten.sub.Tensor": [
        {
            "count": 1,
            "inputs": "((T([3, 748, 1333], f32), T([3, 1, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], i64), 1333), {})"
        },
        {
            "count": 1,
            "inputs": "((T([], i64), 748), {})"
        },
        {
            "count": 10,
            "inputs": "((T([128], f32), T([128], f32)), {})"
        },
        {
            "count": 11,
            "inputs": "((T([512], f32), T([512], f32)), {})"
        },
        {
            "count": 47,
            "inputs": "((T([256], f32), T([256], f32)), {})"
        },
        {
            "count": 24,
            "inputs": "((T([1024], f32), T([1024], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([21], f32, stride=(4,)), T([21], f32, stride=(4,))), {})"
        },
        {
            "count": 8,
            "inputs": "((T([59220], f32, stride=(4,)), T([59220], f32, stride=(4,))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 59220, 2], f32), T([21, 59220, 2], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 59220], f32), T([21, 59220], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([59220], f32), T([59220], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 4], f32), T([128, 4], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([59220, 1], f32), T([59220, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([12000], f32, stride=(4,)), T([12000], f32, stride=(4,))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2021], f32, stride=(4,)), T([2021], f32, stride=(4,))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 2021, 2], f32), T([21, 2021, 2], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 2021], f32), T([21, 2021], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([2048], f32), T([2048], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([128], f32, stride=(4,)), T([128], f32, stride=(4,))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 4], f32), T([1, 128, 4], f32)), {})"
        }
    ],
    "aten.sum.default": [
        {
            "count": 2,
            "inputs": "((T([1, 59220], b8),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 4], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([12000], b8),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512], b8),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 128, 4], f32),), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([512, 320], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([512, 81], f32), [0], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 3,
            "inputs": "((T([512, 2048, 7, 7], f32), T([512, 2048, 7, 7], f32), 0), {})"
        },
        {
            "count": 6,
            "inputs": "((T([512, 512, 7, 7], f32), T([512, 512, 7, 7], f32), 0), {})"
        },
        {
            "count": 24,
            "inputs": "((T([1, 1024, 47, 84], f32), T([1, 1024, 47, 84], f32), 0), {})"
        },
        {
            "count": 46,
            "inputs": "((T([1, 256, 47, 84], f32), T([1, 256, 47, 84], f32), 0), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 512, 94, 167], f32), T([1, 512, 94, 167], f32), 0), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1, 128, 94, 167], f32), T([1, 128, 94, 167], f32), 0), {})"
        }
    ],
    "aten.topk.default": [
        {
            "count": 1,
            "inputs": "((T([1, 59220], f32), 12000, 1), {})"
        }
    ],
    "aten.unbind.int": [
        {
            "count": 1,
            "inputs": "((T([161, 2], i64, stride=(1, 161)), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([253, 1], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([49165, 1], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([308, 1], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1713, 1], i64), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([128, 1], i64), 1), {})"
        }
    ],
    "aten.unsqueeze_.default": [
        {
            "count": 1,
            "inputs": "((T([3, 748, 1333], f32), 0), {})"
        }
    ],
    "aten.where.self": [
        {
            "count": 1,
            "inputs": "((T([21, 59220], b8), T([21, 59220], f32), T([1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([21, 2021], b8), T([21, 2021], f32), T([1], f32)), {})"
        }
    ],
    "torchvision._roi_align_backward.default": [
        {
            "count": 1,
            "inputs": "((T([512, 1024, 14, 14], f32), T([512, 5], f32), 0.0625, 14, 14, 1, 1024, 47, 84, 0, True), {})"
        }
    ],
    "torchvision.nms.default": [
        {
            "count": 1,
            "inputs": "((T([12000, 4], f32), T([12000], f32), 0.7), {})"
        }
    ],
    "torchvision.roi_align.default": [
        {
            "count": 1,
            "inputs": "((T([1, 1024, 47, 84], f32), T([512, 5], f32), 0.0625, 14, 14, 0, True), {})"
        }
    ]
}