{
    "aten._foreach_sqrt.default": [
        {
            "count": 1,
            "inputs": "(([T([64, 3, 3, 3], f32), T([64], f32), T([16, 64, 1, 1], f32), T([16], f32), T([64, 16, 1, 1], f32), T([64], f32), T([64, 16, 3, 3], f32), T([64], f32), T([16, 128, 1, 1], f32), T([16], f32), T([64, 16, 1, 1], f32), T([64], f32), T([64, 16, 3, 3], f32), T([64], f32), T([32, 128, 1, 1], f32), T([32], f32), T([128, 32, 1, 1], f32), T([128], f32), T([128, 32, 3, 3], f32), T([128], f32), T([32, 256, 1, 1], f32), T([32], f32), T([128, 32, 1, 1], f32), T([128], f32), T([128, 32, 3, 3], f32), T([128], f32), T([48, 256, 1, 1], f32), T([48], f32), T([192, 48, 1, 1], f32), T([192], f32), T([192, 48, 3, 3], f32), T([192], f32), T([48, 384, 1, 1], f32), T([48], f32), T([192, 48, 1, 1], f32), T([192], f32), T([192, 48, 3, 3], f32), T([192], f32), T([64, 384, 1, 1], f32), T([64], f32), T([256, 64, 1, 1], f32), T([256], f32), T([256, 64, 3, 3], f32), T([256], f32), T([64, 512, 1, 1], f32), T([64], f32), T([256, 64, 1, 1], f32), T([256], f32), T([256, 64, 3, 3], f32), T([256], f32), T([1000, 512, 1, 1], f32), T([1000], f32)],), {})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 16,
            "inputs": "((T([32, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 16,
            "inputs": "((T([32, 1000], f32), T([32, 1000], f32), 1, f32), {})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 32,
            "inputs": "((T([32, 64, 13, 13], f32), T([32, 64, 13, 13], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 48, 13, 13], f32), T([32, 48, 13, 13], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 32, 27, 27], f32), T([32, 32, 27, 27], f32)), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 16, 55, 55], f32), T([32, 16, 55, 55], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 15,
            "inputs": "((T([1000, 512, 1, 1], f32), T([1000, 512, 1, 1], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([1000], f32), T([1000], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([256, 64, 3, 3], f32), T([256, 64, 3, 3], f32)), {})"
        },
        {
            "count": 60,
            "inputs": "((T([256], f32), T([256], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([256, 64, 1, 1], f32), T([256, 64, 1, 1], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([64, 512, 1, 1], f32), T([64, 512, 1, 1], f32)), {})"
        },
        {
            "count": 105,
            "inputs": "((T([64], f32), T([64], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([64, 384, 1, 1], f32), T([64, 384, 1, 1], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([192, 48, 3, 3], f32), T([192, 48, 3, 3], f32)), {})"
        },
        {
            "count": 60,
            "inputs": "((T([192], f32), T([192], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([192, 48, 1, 1], f32), T([192, 48, 1, 1], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([48, 384, 1, 1], f32), T([48, 384, 1, 1], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([48], f32), T([48], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([48, 256, 1, 1], f32), T([48, 256, 1, 1], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([128, 32, 3, 3], f32), T([128, 32, 3, 3], f32)), {})"
        },
        {
            "count": 60,
            "inputs": "((T([128], f32), T([128], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([128, 32, 1, 1], f32), T([128, 32, 1, 1], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([32, 256, 1, 1], f32), T([32, 256, 1, 1], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([32], f32), T([32], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([32, 128, 1, 1], f32), T([32, 128, 1, 1], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([64, 16, 3, 3], f32), T([64, 16, 3, 3], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([64, 16, 1, 1], f32), T([64, 16, 1, 1], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([16, 128, 1, 1], f32), T([16, 128, 1, 1], f32)), {})"
        },
        {
            "count": 30,
            "inputs": "((T([16], f32), T([16], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([16, 64, 1, 1], f32), T([16, 64, 1, 1], f32)), {})"
        },
        {
            "count": 15,
            "inputs": "((T([64, 3, 3, 3], f32), T([64, 3, 3, 3], f32)), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 32,
            "inputs": "(([T([32, 64, 55, 55], f32), T([32, 64, 55, 55], f32)], 1), {})"
        },
        {
            "count": 32,
            "inputs": "(([T([32, 128, 27, 27], f32), T([32, 128, 27, 27], f32)], 1), {})"
        },
        {
            "count": 32,
            "inputs": "(([T([32, 192, 13, 13], f32), T([32, 192, 13, 13], f32)], 1), {})"
        },
        {
            "count": 32,
            "inputs": "(([T([32, 256, 13, 13], f32), T([32, 256, 13, 13], f32)], 1), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 16,
            "inputs": "((T([32, 3, 224, 224], f32), T([64, 3, 3, 3], f32), T([64], f32), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 64, 55, 55], f32), T([16, 64, 1, 1], f32), T([16], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 16, 55, 55], f32), T([64, 16, 1, 1], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 16, 55, 55], f32), T([64, 16, 3, 3], f32), T([64], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 128, 55, 55], f32), T([16, 128, 1, 1], f32), T([16], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 128, 27, 27], f32), T([32, 128, 1, 1], f32), T([32], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 32, 27, 27], f32), T([128, 32, 1, 1], f32), T([128], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 32, 27, 27], f32), T([128, 32, 3, 3], f32), T([128], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 256, 27, 27], f32), T([32, 256, 1, 1], f32), T([32], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 256, 13, 13], f32), T([48, 256, 1, 1], f32), T([48], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 48, 13, 13], f32), T([192, 48, 1, 1], f32), T([192], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 48, 13, 13], f32), T([192, 48, 3, 3], f32), T([192], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 384, 13, 13], f32), T([48, 384, 1, 1], f32), T([48], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 384, 13, 13], f32), T([64, 384, 1, 1], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 64, 13, 13], f32), T([256, 64, 1, 1], f32), T([256], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 64, 13, 13], f32), T([256, 64, 3, 3], f32), T([256], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 512, 13, 13], f32), T([64, 512, 1, 1], f32), T([64], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 512, 13, 13], f32), T([1000, 512, 1, 1], f32), T([1000], f32), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 16,
            "inputs": "((T([32, 1000, 13, 13], f32), T([32, 512, 13, 13], f32), T([1000, 512, 1, 1], f32), [1000], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 256, 13, 13], f32), T([32, 64, 13, 13], f32), T([256, 64, 3, 3], f32), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 256, 13, 13], f32), T([32, 64, 13, 13], f32), T([256, 64, 1, 1], f32), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 64, 13, 13], f32), T([32, 512, 13, 13], f32), T([64, 512, 1, 1], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 64, 13, 13], f32), T([32, 384, 13, 13], f32), T([64, 384, 1, 1], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 192, 13, 13], f32), T([32, 48, 13, 13], f32), T([192, 48, 3, 3], f32), [192], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 192, 13, 13], f32), T([32, 48, 13, 13], f32), T([192, 48, 1, 1], f32), [192], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 48, 13, 13], f32), T([32, 384, 13, 13], f32), T([48, 384, 1, 1], f32), [48], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 48, 13, 13], f32), T([32, 256, 13, 13], f32), T([48, 256, 1, 1], f32), [48], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 128, 27, 27], f32), T([32, 32, 27, 27], f32), T([128, 32, 3, 3], f32), [128], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 128, 27, 27], f32), T([32, 32, 27, 27], f32), T([128, 32, 1, 1], f32), [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 32, 27, 27], f32), T([32, 256, 27, 27], f32), T([32, 256, 1, 1], f32), [32], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 32, 27, 27], f32), T([32, 128, 27, 27], f32), T([32, 128, 1, 1], f32), [32], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 64, 55, 55], f32), T([32, 16, 55, 55], f32), T([64, 16, 3, 3], f32), [64], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 64, 55, 55], f32), T([32, 16, 55, 55], f32), T([64, 16, 1, 1], f32), [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 16, 55, 55], f32), T([32, 128, 55, 55], f32), T([16, 128, 1, 1], f32), [16], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 16, 55, 55], f32), T([32, 64, 55, 55], f32), T([16, 64, 1, 1], f32), [16], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 64, 111, 111], f32), T([32, 3, 224, 224], f32), T([64, 3, 3, 3], f32), [64], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 16,
            "inputs": "((T([32, 1000, 13, 13], f32, stride=(1000, 1, 0, 0)), 169), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 16,
            "inputs": "((T([32, 64, 111, 111], f32), [3, 3], [2, 2], [0, 0], [1, 1], True), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 128, 55, 55], f32), [3, 3], [2, 2], [0, 0], [1, 1], True), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 256, 27, 27], f32), [3, 3], [2, 2], [0, 0], [1, 1], True), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 16,
            "inputs": "((T([32, 256, 13, 13], f32), T([32, 256, 27, 27], f32), [3, 3], [2, 2], [0, 0], [1, 1], True, T([32, 256, 13, 13], i64)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 128, 27, 27], f32), T([32, 128, 55, 55], f32), [3, 3], [2, 2], [0, 0], [1, 1], True, T([32, 128, 27, 27], i64)), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 64, 55, 55], f32), T([32, 64, 111, 111], f32), [3, 3], [2, 2], [0, 0], [1, 1], True, T([32, 64, 55, 55], i64)), {})"
        }
    ],
    "aten.mean.dim": [
        {
            "count": 16,
            "inputs": "((T([32, 1000, 13, 13], f32), [-1, -2], True), {})"
        }
    ],
    "aten.native_dropout.default": [
        {
            "count": 16,
            "inputs": "((T([32, 512, 13, 13], f32), 0.5, True), {})"
        }
    ],
    "aten.native_dropout_backward.default": [
        {
            "count": 16,
            "inputs": "((T([32, 512, 13, 13], f32), T([32, 512, 13, 13], b8), 2.0), {})"
        }
    ],
    "aten.nll_loss_backward.default": [
        {
            "count": 16,
            "inputs": "((T([], f32), T([32, 1000], f32), T([32], i64), None, 1, -100, T([], f32)), {})"
        }
    ],
    "aten.nll_loss_forward.default": [
        {
            "count": 16,
            "inputs": "((T([32, 1000], f32), T([32], i64), None, 1, -100), {})"
        }
    ],
    "aten.random_.to": [
        {
            "count": 16,
            "inputs": "((T([32], i64), 1000), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 16,
            "inputs": "((T([32, 64, 111, 111], f32),), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 16, 55, 55], f32),), {})"
        },
        {
            "count": 64,
            "inputs": "((T([32, 64, 55, 55], f32),), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 32, 27, 27], f32),), {})"
        },
        {
            "count": 64,
            "inputs": "((T([32, 128, 27, 27], f32),), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 48, 13, 13], f32),), {})"
        },
        {
            "count": 64,
            "inputs": "((T([32, 192, 13, 13], f32),), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 64, 13, 13], f32),), {})"
        },
        {
            "count": 64,
            "inputs": "((T([32, 256, 13, 13], f32),), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 1000, 13, 13], f32),), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 16,
            "inputs": "((T([32, 1000, 13, 13], f32), T([32, 1000, 13, 13], f32), 0), {})"
        },
        {
            "count": 64,
            "inputs": "((T([32, 256, 13, 13], f32, stride=(86528, 169, 13, 1)), T([32, 256, 13, 13], f32), 0), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 64, 13, 13], f32), T([32, 64, 13, 13], f32), 0), {})"
        },
        {
            "count": 64,
            "inputs": "((T([32, 192, 13, 13], f32, stride=(64896, 169, 13, 1)), T([32, 192, 13, 13], f32), 0), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 48, 13, 13], f32), T([32, 48, 13, 13], f32), 0), {})"
        },
        {
            "count": 64,
            "inputs": "((T([32, 128, 27, 27], f32, stride=(186624, 729, 27, 1)), T([32, 128, 27, 27], f32), 0), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 32, 27, 27], f32), T([32, 32, 27, 27], f32), 0), {})"
        },
        {
            "count": 64,
            "inputs": "((T([32, 64, 55, 55], f32, stride=(387200, 3025, 55, 1)), T([32, 64, 55, 55], f32), 0), {})"
        },
        {
            "count": 32,
            "inputs": "((T([32, 16, 55, 55], f32), T([32, 16, 55, 55], f32), 0), {})"
        },
        {
            "count": 16,
            "inputs": "((T([32, 64, 111, 111], f32), T([32, 64, 111, 111], f32), 0), {})"
        }
    ]
}