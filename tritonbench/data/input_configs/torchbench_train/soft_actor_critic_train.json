{
    "aten._foreach_sqrt.default": [
        {
            "count": 1,
            "inputs": "(([T([1024, 4], f32), T([1024], f32), T([1024, 1024], f32), T([1024], f32), T([1, 1024], f32), T([1], f32), T([1024, 4], f32), T([1024], f32), T([1024, 1024], f32), T([1024], f32), T([1, 1024], f32), T([1], f32)],), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([1024, 3], f32), T([1024], f32), T([1024, 1024], f32), T([1024], f32), T([2, 1024], f32), T([2], f32)],), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([1], f32)],), {})"
        }
    ],
    "aten._is_all_true.default": [
        {
            "count": 2,
            "inputs": "((T([1, 1], b8),), {})"
        },
        {
            "count": 8,
            "inputs": "((T([256, 1], b8),), {})"
        }
    ],
    "aten._to_copy.default": [
        {
            "count": 1,
            "inputs": "((T([1, 3], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cpu'})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32),), {'dtype': i32})"
        },
        {
            "count": 2,
            "inputs": "((T([3], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 2,
            "inputs": "((T([1], f32),), {'dtype': f32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([1], i32),), {'dtype': i32, 'layout': torch.strided, 'device': 'cuda'})"
        },
        {
            "count": 5,
            "inputs": "((T([1], i64),), {'dtype': i64, 'device': 'cuda'})"
        },
        {
            "count": 1,
            "inputs": "((T([256], i64),), {'dtype': i64, 'layout': torch.strided, 'device': 'cuda'})"
        }
    ],
    "aten.add.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1, 1], f32), 1), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1, 1], f32), -10.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), -10.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32, stride=(2, 1)), T([256, 1], f32)), {})"
        },
        {
            "count": 10,
            "inputs": "((T([256, 1], f32), T([256, 1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 1], f32, stride=(4, 1)), T([256, 1], f32, stride=(4, 1))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 1], f32), -1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 4], f32), T([1024, 4], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1024], f32), T([1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 1024], f32), T([1024, 1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 1024], f32), T([1, 1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1], f32), T([1], f32)), {})"
        }
    ],
    "aten.add_.Tensor": [
        {
            "count": 2,
            "inputs": "((T([1], f32), T([1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 1024], f32), T([1, 1024], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1024], f32), T([1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 1024], f32), T([1024, 1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 4], f32), T([1024, 4], f32)), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 1,
            "inputs": "((T([1024], f32), T([1, 3], f32), T([3, 1024], f32, stride=(1, 3))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024], f32), T([1, 1024], f32), T([1024, 1024], f32, stride=(1, 1024))), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2], f32), T([1, 1024], f32), T([1024, 2], f32, stride=(1, 1024))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024], f32), T([256, 3], f32), T([3, 1024], f32, stride=(1, 3))), {})"
        },
        {
            "count": 8,
            "inputs": "((T([1024], f32), T([256, 1024], f32), T([1024, 1024], f32, stride=(1, 1024))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([2], f32), T([256, 1024], f32), T([1024, 2], f32, stride=(1, 1024))), {})"
        },
        {
            "count": 6,
            "inputs": "((T([1024], f32), T([256, 4], f32), T([4, 1024], f32, stride=(1, 4))), {})"
        },
        {
            "count": 6,
            "inputs": "((T([1], f32), T([256, 1024], f32), T([1024, 1], f32)), {})"
        }
    ],
    "aten.bitwise_and.Tensor": [
        {
            "count": 2,
            "inputs": "((T([256, 1], b8), T([256, 1], b8)), {})"
        }
    ],
    "aten.cat.default": [
        {
            "count": 6,
            "inputs": "(([T([256, 3], f32), T([256, 1], f32)], 1), {})"
        },
        {
            "count": 1,
            "inputs": "(([T([256, 1], f32), T([256, 1], f32)], 1), {})"
        }
    ],
    "aten.clamp.default": [
        {
            "count": 1,
            "inputs": "((T([1, 1], f32), -1.0, 1.0), {})"
        }
    ],
    "aten.copy_.default": [
        {
            "count": 2,
            "inputs": "((T([1024, 4], f32), T([1024, 4], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1024], f32), T([1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 1024], f32), T([1024, 1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 1024], f32), T([1, 1024], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1], f32), T([1], f32)), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 3,
            "inputs": "((T([256, 1], f32, stride=(0, 0)), 256), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), 2), {})"
        }
    ],
    "aten.div.Tensor": [
        {
            "count": 6,
            "inputs": "((T([256, 1], f32), T([256, 1], f32)), {})"
        }
    ],
    "aten.eq.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1, 1], f32), T([1, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32, stride=(2, 1)), T([256, 1], f32, stride=(2, 1))), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 1], f32), T([256, 1], f32)), {})"
        }
    ],
    "aten.exp.default": [
        {
            "count": 1,
            "inputs": "((T([1, 1], f32),), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32),), {})"
        }
    ],
    "aten.ge.Scalar": [
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), -1.0), {})"
        }
    ],
    "aten.gt.Scalar": [
        {
            "count": 1,
            "inputs": "((T([1, 1], f32), 0.0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), 0.0), {})"
        }
    ],
    "aten.gt.Tensor": [
        {
            "count": 1,
            "inputs": "((T([256, 1], f32), T([256, 1], f32)), {})"
        }
    ],
    "aten.index.Tensor": [
        {
            "count": 2,
            "inputs": "((T([1000000, 3], f32), [T([256], i64)]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1000000, 1], f32), [T([256], i64)]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000000, 1], i32), [T([256], i64)]), {})"
        }
    ],
    "aten.index_put_.default": [
        {
            "count": 2,
            "inputs": "((T([1000000, 3], f32), [T([1], i64)], T([3], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1000000, 1], f32), [T([1], i64)], T([], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000000, 1], i32), [T([1], i64)], T([], i32)), {})"
        }
    ],
    "aten.le.Scalar": [
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), 1.0), {})"
        }
    ],
    "aten.log.default": [
        {
            "count": 2,
            "inputs": "((T([256, 1], f32),), {})"
        }
    ],
    "aten.lt.Tensor": [
        {
            "count": 1,
            "inputs": "((T([256, 1], f32), T([256, 1], f32)), {})"
        }
    ],
    "aten.masked_fill_.Scalar": [
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), T([256, 1], b8), 0), {})"
        }
    ],
    "aten.mean.default": [
        {
            "count": 3,
            "inputs": "((T([256, 1], f32),), {})"
        }
    ],
    "aten.minimum.default": [
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), T([256, 1], f32)), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 4,
            "inputs": "((T([256, 1], f32), T([1, 1024], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1, 256], f32), T([256, 1024], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([256, 1024], f32), T([1024, 1024], f32)), {})"
        },
        {
            "count": 5,
            "inputs": "((T([1024, 256], f32, stride=(1, 1024)), T([256, 1024], f32)), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1024, 256], f32, stride=(1, 1024)), T([256, 4], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1024], f32), T([1024, 4], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 2], f32), T([2, 1024], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([2, 256], f32, stride=(1, 2)), T([256, 1024], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1024, 256], f32, stride=(1, 1024)), T([256, 3], f32)), {})"
        }
    ],
    "aten.mul.Scalar": [
        {
            "count": 4,
            "inputs": "((T([256, 1], f32), 2.0), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1, 1], f32), 6.0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 1], f32), 6.0), {})"
        },
        {
            "count": 11,
            "inputs": "((T([256, 1], f32), T([256, 1], f32)), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 1], f32), -2.0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 1], f32), 2.0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([256, 1], f32), 2), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 1], f32), 0.99), {})"
        },
        {
            "count": 3,
            "inputs": "((T([1], f32), T([256, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), 0.5), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 1], f32), T([1], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1], f32), T([1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 4], f32), 0.995), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 4], f32), 0.005), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1024], f32), 0.995), {})"
        },
        {
            "count": 4,
            "inputs": "((T([1024], f32), 0.005), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 1024], f32), 0.995), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1024, 1024], f32), 0.005), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 1024], f32), 0.995), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1, 1024], f32), 0.005), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1], f32), 0.995), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1], f32), 0.005), {})"
        }
    ],
    "aten.neg.default": [
        {
            "count": 12,
            "inputs": "((T([256, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1], f32),), {})"
        }
    ],
    "aten.normal.Tensor_Tensor": [
        {
            "count": 1,
            "inputs": "((T([1, 1], f32), T([1, 1], f32)), {})"
        }
    ],
    "aten.normal_.default": [
        {
            "count": 2,
            "inputs": "((T([256, 1], f32),), {})"
        }
    ],
    "aten.pow.Tensor_Scalar": [
        {
            "count": 6,
            "inputs": "((T([256, 1], f32), 2), {})"
        },
        {
            "count": 4,
            "inputs": "((T([256, 1], f32), 1.0), {})"
        }
    ],
    "aten.relu.default": [
        {
            "count": 2,
            "inputs": "((T([1, 1024], f32),), {})"
        },
        {
            "count": 16,
            "inputs": "((T([256, 1024], f32),), {})"
        }
    ],
    "aten.rsub.Scalar": [
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), 0.6931471805599453), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), 0.0), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 1], i32), 1.0), {})"
        }
    ],
    "aten.softplus.default": [
        {
            "count": 2,
            "inputs": "((T([256, 1], f32),), {})"
        }
    ],
    "aten.softplus_backward.default": [
        {
            "count": 1,
            "inputs": "((T([256, 1], f32), T([256, 1], f32), 1, 20), {})"
        }
    ],
    "aten.split.Tensor": [
        {
            "count": 1,
            "inputs": "((T([1, 2], f32), 1, 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 2], f32), 1, 1), {})"
        }
    ],
    "aten.sub.Tensor": [
        {
            "count": 8,
            "inputs": "((T([256, 1], f32), T([256, 1], f32)), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), T([256, 1], f32, stride=(2, 1))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), 0.9189385332046727), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), [-1], True), {})"
        },
        {
            "count": 5,
            "inputs": "((T([256, 1], f32), [0], True), {})"
        },
        {
            "count": 10,
            "inputs": "((T([256, 1024], f32), [0], True), {})"
        },
        {
            "count": 1,
            "inputs": "((T([256, 2], f32), [0], True), {})"
        }
    ],
    "aten.tanh.default": [
        {
            "count": 2,
            "inputs": "((T([1, 1], f32),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32, stride=(2, 1)),), {})"
        },
        {
            "count": 2,
            "inputs": "((T([256, 1], f32),), {})"
        }
    ],
    "aten.tanh_backward.default": [
        {
            "count": 2,
            "inputs": "((T([256, 1], f32), T([256, 1], f32)), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 10,
            "inputs": "((T([256, 1024], f32), T([256, 1024], f32), 0), {})"
        }
    ],
    "aten.unbind.int": [
        {
            "count": 1,
            "inputs": "((T([256], i64),), {})"
        }
    ],
    "aten.where.self": [
        {
            "count": 2,
            "inputs": "((T([256, 1], b8), T([256, 1], f32), T([256, 1], f32)), {})"
        }
    ]
}