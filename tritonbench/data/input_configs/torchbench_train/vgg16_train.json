{
    "aten._adaptive_avg_pool2d.default": [
        {
            "count": 2,
            "inputs": "((T([64, 512, 7, 7], f32), [7, 7]), {})"
        }
    ],
    "aten._adaptive_avg_pool2d_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 512, 7, 7], f32), T([64, 512, 7, 7], f32)), {})"
        }
    ],
    "aten._foreach_sqrt.default": [
        {
            "count": 1,
            "inputs": "(([T([64, 3, 3, 3], f32), T([64], f32), T([64, 64, 3, 3], f32), T([64], f32), T([128, 64, 3, 3], f32), T([128], f32), T([128, 128, 3, 3], f32), T([128], f32), T([256, 128, 3, 3], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([256, 256, 3, 3], f32), T([256], f32), T([512, 256, 3, 3], f32), T([512], f32), T([512, 512, 3, 3], f32), T([512], f32), T([512, 512, 3, 3], f32), T([512], f32), T([512, 512, 3, 3], f32), T([512], f32), T([512, 512, 3, 3], f32), T([512], f32), T([512, 512, 3, 3], f32), T([512], f32), T([4096, 25088], f32), T([4096], f32), T([4096, 4096], f32), T([4096], f32), T([1000, 4096], f32), T([1000], f32)],), {})"
        }
    ],
    "aten._log_softmax.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), 1, False), {})"
        }
    ],
    "aten._log_softmax_backward_data.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64, 1000], f32), 1, f32), {})"
        }
    ],
    "aten.addmm.default": [
        {
            "count": 2,
            "inputs": "((T([4096], f32), T([64, 25088], f32), T([25088, 4096], f32, stride=(1, 25088))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([4096], f32), T([64, 4096], f32), T([4096, 4096], f32, stride=(1, 4096))), {})"
        },
        {
            "count": 2,
            "inputs": "((T([1000], f32), T([64, 4096], f32), T([4096, 1000], f32, stride=(1, 4096))), {})"
        }
    ],
    "aten.convolution.default": [
        {
            "count": 2,
            "inputs": "((T([64, 3, 224, 224], f32), T([64, 3, 3, 3], f32), T([64], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 224, 224], f32), T([64, 64, 3, 3], f32), T([64], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 112, 112], f32), T([128, 64, 3, 3], f32), T([128], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 128, 112, 112], f32), T([128, 128, 3, 3], f32), T([128], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 128, 56, 56], f32), T([256, 128, 3, 3], f32), T([256], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 256, 56, 56], f32), T([256, 256, 3, 3], f32), T([256], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 256, 28, 28], f32), T([512, 256, 3, 3], f32), T([512], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 512, 28, 28], f32), T([512, 512, 3, 3], f32), T([512], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 512, 14, 14], f32), T([512, 512, 3, 3], f32), T([512], f32), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})"
        }
    ],
    "aten.convolution_backward.default": [
        {
            "count": 3,
            "inputs": "((T([64, 512, 14, 14], f32), T([64, 512, 14, 14], f32), T([512, 512, 3, 3], f32), [512], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 512, 28, 28], f32), T([64, 512, 28, 28], f32), T([512, 512, 3, 3], f32), [512], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 28, 28], f32), T([64, 256, 28, 28], f32), T([512, 256, 3, 3], f32), [512], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 256, 56, 56], f32), T([64, 256, 56, 56], f32), T([256, 256, 3, 3], f32), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 56, 56], f32), T([64, 128, 56, 56], f32), T([256, 128, 3, 3], f32), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 112, 112], f32), T([64, 128, 112, 112], f32), T([128, 128, 3, 3], f32), [128], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 112, 112], f32), T([64, 64, 112, 112], f32), T([128, 64, 3, 3], f32), [128], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 224, 224], f32), T([64, 64, 224, 224], f32), T([64, 64, 3, 3], f32), [64], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 224, 224], f32), T([64, 3, 224, 224], f32), T([64, 3, 3, 3], f32), [64], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [False, True, True]), {})"
        }
    ],
    "aten.div.Scalar": [
        {
            "count": 2,
            "inputs": "((T([], f32), 64), {})"
        }
    ],
    "aten.max_pool2d_with_indices.default": [
        {
            "count": 2,
            "inputs": "((T([64, 64, 224, 224], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 128, 112, 112], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 256, 56, 56], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 512, 28, 28], f32), [2, 2], [2, 2]), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 512, 14, 14], f32), [2, 2], [2, 2]), {})"
        }
    ],
    "aten.max_pool2d_with_indices_backward.default": [
        {
            "count": 1,
            "inputs": "((T([64, 512, 7, 7], f32), T([64, 512, 14, 14], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([64, 512, 7, 7], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 512, 14, 14], f32), T([64, 512, 28, 28], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([64, 512, 14, 14], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 256, 28, 28], f32), T([64, 256, 56, 56], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([64, 256, 28, 28], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 128, 56, 56], f32), T([64, 128, 112, 112], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([64, 128, 56, 56], i64)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 64, 112, 112], f32), T([64, 64, 224, 224], f32), [2, 2], [2, 2], [0, 0], [1, 1], False, T([64, 64, 112, 112], i64)), {})"
        }
    ],
    "aten.mm.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([1000, 4096], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([1000, 64], f32, stride=(1, 1000)), T([64, 4096], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 4096], f32), T([4096, 4096], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4096, 64], f32, stride=(1, 4096)), T([64, 4096], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 4096], f32), T([4096, 25088], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([4096, 64], f32, stride=(1, 4096)), T([64, 25088], f32)), {})"
        }
    ],
    "aten.mul.Tensor": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), T([64, 1000], f32)), {})"
        },
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32, stride=(0, 0)), T([64, 1000], f32)), {})"
        }
    ],
    "aten.native_dropout.default": [
        {
            "count": 4,
            "inputs": "((T([64, 4096], f32), 0.5, True), {})"
        }
    ],
    "aten.native_dropout_backward.default": [
        {
            "count": 2,
            "inputs": "((T([64, 4096], f32), T([64, 4096], b8), 2.0), {})"
        }
    ],
    "aten.neg.default": [
        {
            "count": 2,
            "inputs": "((T([], f32),), {})"
        }
    ],
    "aten.relu_.default": [
        {
            "count": 4,
            "inputs": "((T([64, 64, 224, 224], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 128, 112, 112], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 256, 56, 56], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 512, 28, 28], f32),), {})"
        },
        {
            "count": 6,
            "inputs": "((T([64, 512, 14, 14], f32),), {})"
        },
        {
            "count": 4,
            "inputs": "((T([64, 4096], f32),), {})"
        }
    ],
    "aten.sum.default": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32),), {})"
        }
    ],
    "aten.sum.dim_IntList": [
        {
            "count": 1,
            "inputs": "((T([64, 1000], f32), [0], True), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 4096], f32), [0], True), {})"
        }
    ],
    "aten.threshold_backward.default": [
        {
            "count": 2,
            "inputs": "((T([64, 4096], f32), T([64, 4096], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 512, 14, 14], f32), T([64, 512, 14, 14], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 512, 28, 28], f32), T([64, 512, 28, 28], f32), 0), {})"
        },
        {
            "count": 3,
            "inputs": "((T([64, 256, 56, 56], f32), T([64, 256, 56, 56], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 128, 112, 112], f32), T([64, 128, 112, 112], f32), 0), {})"
        },
        {
            "count": 2,
            "inputs": "((T([64, 64, 224, 224], f32), T([64, 64, 224, 224], f32), 0), {})"
        }
    ]
}