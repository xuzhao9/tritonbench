{
    "aten._log_softmax.default": {
        "count": 1,
        "inputs": "((T([8192, 50265], f32), 1, False), {})"
    },
    "aten._log_softmax_backward_data.default": {
        "count": 1,
        "inputs": "((T([8192, 50265], f32), T([8192, 50265], f32), 1, f32), {})"
    },
    "aten._scaled_dot_product_efficient_attention.default": {
        "count": 8,
        "inputs": "((T([64, 16, 128, 32], f32), T([64, 16, 128, 32], f32), T([64, 16, 128, 32], f32), None, True, 0.0, True), {'scale': 0.1767766952966369})"
    },
    "aten._scaled_dot_product_efficient_attention_backward.default": {
        "count": 8,
        "inputs": "((T([64, 16, 128, 32], f32, stride=(65536, 32, 512, 1)), T([64, 16, 128, 32], f32), T([64, 16, 128, 32], f32), T([64, 16, 128, 32], f32), None, T([64, 16, 128, 32], f32, stride=(65536, 32, 512, 1)), T([64, 16, 128], f32), T([], i64), T([], i64), 0.0, [True, True, True, False], True), {'scale': 0.1767766952966369})"
    },
    "aten._unsafe_view.default": {
        "count": 1,
        "inputs": "((T([8192, 50265], f32), [64, 128, 50265]), {})"
    },
    "aten.add.Tensor": {
        "count": 1,
        "inputs": "((T([50265, 512], f32), T([50265, 512], f32)), {})"
    },
    "aten.addmm.default": {
        "count": 8,
        "inputs": "((T([512], f32), T([8192, 2048], f32), T([2048, 512], f32, stride=(1, 2048))), {})"
    },
    "aten.all.default": {
        "count": 1,
        "inputs": "((T([64, 128], b8),), {})"
    },
    "aten.embedding.default": {
        "count": 1,
        "inputs": "((T([512, 512], f32), T([128], i64)), {})"
    },
    "aten.embedding_dense_backward.default": {
        "count": 1,
        "inputs": "((T([64, 128, 512], f32), T([64, 128], i64), 50265, 0, False), {})"
    },
    "aten.eq.Scalar": {
        "count": 1,
        "inputs": "((T([64, 128], f32), 1), {})"
    },
    "aten.gelu.default": {
        "count": 8,
        "inputs": "((T([64, 128, 2048], f32),), {})"
    },
    "aten.gelu_backward.default": {
        "count": 8,
        "inputs": "((T([64, 128, 2048], f32), T([64, 128, 2048], f32)), {})"
    },
    "aten.lt.Scalar": {
        "count": 8,
        "inputs": "((T([], f32), 0.0), {})"
    },
    "aten.mm.default": {
        "count": 32,
        "inputs": "((T([512, 8192], f32, stride=(1, 512)), T([8192, 512], f32)), {})"
    },
    "aten.native_dropout.default": {
        "count": 17,
        "inputs": "((T([64, 128, 512], f32), 0.1, True), {})"
    },
    "aten.native_dropout_backward.default": {
        "count": 17,
        "inputs": "((T([64, 128, 512], f32), T([64, 128, 512], b8), 1.1111111111111112), {})"
    },
    "aten.native_layer_norm.default": {
        "count": 17,
        "inputs": "((T([64, 128, 512], f32), [512], T([512], f32), T([512], f32), 1e-05), {})"
    },
    "aten.native_layer_norm_backward.default": {
        "count": 17,
        "inputs": "((T([64, 128, 512], f32), T([64, 128, 512], f32), [512], T([64, 128, 1], f32), T([64, 128, 1], f32), T([512], f32), T([512], f32), [True, True, True]), {})"
    },
    "aten.nll_loss_backward.default": {
        "count": 1,
        "inputs": "((T([], f32), T([8192, 50265], f32), T([8192], i64), None, 1, -100, T([], f32)), {})"
    },
    "aten.nll_loss_forward.default": {
        "count": 1,
        "inputs": "((T([8192, 50265], f32), T([8192], i64), None, 1, -100), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 1,
        "inputs": "((T([64, 128, 512], f32), [0], True), {})"
    }
}