{
    "aten._foreach_pow.ScalarAndTensor": {
        "count": 1,
        "inputs": "((0.999, [T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32)]), {})"
    },
    "aten._foreach_sqrt.default": {
        "count": 1,
        "inputs": "(([T([128100, 1536], f32), T([512, 1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([6144, 1536], f32), T([6144], f32), T([1536, 6144], f32), T([1536], f32), T([1536], f32), T([1536], f32), T([128100], f32), T([1536, 1536], f32), T([1536], f32), T([1536], f32), T([1536], f32)],), {})"
    },
    "aten._log_softmax.default": {
        "count": 1,
        "inputs": "((T([1024, 128100], f32), 1, False), {})"
    },
    "aten._log_softmax_backward_data.default": {
        "count": 1,
        "inputs": "((T([1024, 128100], f32), T([1024, 128100], f32), 1, f32), {})"
    },
    "aten._softmax.default": {
        "count": 24,
        "inputs": "((T([2, 24, 512, 512], f32), -1, False), {})"
    },
    "aten._softmax_backward_data.default": {
        "count": 24,
        "inputs": "((T([2, 24, 512, 512], f32), T([2, 24, 512, 512], f32), -1, f32), {})"
    },
    "aten._to_copy.default": {
        "count": 24,
        "inputs": "((T([2, 1, 512, 512], f32),), {'dtype': b8})"
    },
    "aten._unsafe_view.default": {
        "count": 24,
        "inputs": "((T([2, 512, 1536], f32), [1024, 1536]), {})"
    },
    "aten.add.Tensor": {
        "count": 1,
        "inputs": "((T([128100, 1536], f32), T([128100, 1536], f32)), {})"
    },
    "aten.addmm.default": {
        "count": 1,
        "inputs": "((T([128100], f32), T([1024, 1536], f32), T([1536, 128100], f32, stride=(1, 1536))), {})"
    },
    "aten.any.default": {
        "count": 1,
        "inputs": "((T([2, 2], b8),), {})"
    },
    "aten.bitwise_not.default": {
        "count": 24,
        "inputs": "((T([2, 1, 512, 512], b8),), {})"
    },
    "aten.bmm.default": {
        "count": 24,
        "inputs": "((T([48, 64, 512], f32, stride=(32768, 1, 64)), T([48, 512, 512], f32)), {})"
    },
    "aten.div.Tensor": {
        "count": 24,
        "inputs": "((T([48, 64, 512], f32), T([], f32)), {})"
    },
    "aten.embedding.default": {
        "count": 1,
        "inputs": "((T([512, 1536], f32), T([1, 512], i64)), {})"
    },
    "aten.embedding_dense_backward.default": {
        "count": 1,
        "inputs": "((T([2, 512, 1536], f32), T([2, 512], i64), 128100, 0, False), {})"
    },
    "aten.eq.Scalar": {
        "count": 1,
        "inputs": "((T([2, 2], i64), 0), {})"
    },
    "aten.gelu.default": {
        "count": 1,
        "inputs": "((T([2, 512, 1536], f32),), {})"
    },
    "aten.gelu_backward.default": {
        "count": 24,
        "inputs": "((T([2, 512, 6144], f32), T([2, 512, 6144], f32)), {})"
    },
    "aten.index.Tensor": {
        "count": 1,
        "inputs": "((T([2, 512], i64), [None, T([2], i64)]), {})"
    },
    "aten.masked_fill.Scalar": {
        "count": 24,
        "inputs": "((T([2, 24, 512, 512], f32), T([2, 1, 512, 512], b8), 0), {})"
    },
    "aten.mm.default": {
        "count": 24,
        "inputs": "((T([6144, 1024], f32, stride=(1, 6144)), T([1024, 1536], f32)), {})"
    },
    "aten.mul.Scalar": {
        "count": 24,
        "inputs": "((T([], f32), 1), {})"
    },
    "aten.mul.Tensor": {
        "count": 1,
        "inputs": "((T([2, 1, 1, 512], f32), T([2, 1, 512, 1], f32)), {})"
    },
    "aten.native_dropout.default": {
        "count": 24,
        "inputs": "((T([2, 24, 512, 512], f32), 0.1, True), {})"
    },
    "aten.native_dropout_backward.default": {
        "count": 24,
        "inputs": "((T([2, 24, 512, 512], f32), T([2, 24, 512, 512], b8), 1.1111111111111112), {})"
    },
    "aten.native_layer_norm.default": {
        "count": 50,
        "inputs": "((T([2, 512, 1536], f32), [1536], T([1536], f32), T([1536], f32), 1e-07), {})"
    },
    "aten.native_layer_norm_backward.default": {
        "count": 50,
        "inputs": "((T([2, 512, 1536], f32), T([2, 512, 1536], f32), [1536], T([2, 512, 1], f32), T([2, 512, 1], f32), T([1536], f32), T([1536], f32), [True, True, True]), {})"
    },
    "aten.nll_loss_backward.default": {
        "count": 1,
        "inputs": "((T([], f32), T([1024, 128100], f32), T([1024], i64), None, 1, -100, T([], f32)), {})"
    },
    "aten.nll_loss_forward.default": {
        "count": 1,
        "inputs": "((T([1024, 128100], f32), T([1024], i64), None, 1, -100), {})"
    },
    "aten.sqrt.default": {
        "count": 24,
        "inputs": "((T([], f32),), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 1,
        "inputs": "((T([2, 512, 1536], f32), [0], True), {})"
    }
}