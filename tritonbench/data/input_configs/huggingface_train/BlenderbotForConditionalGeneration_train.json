{
    "aten._foreach_pow.ScalarAndTensor": {
        "count": 1,
        "inputs": "((0.999, [T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32), T([], f32)]), {})"
    },
    "aten._foreach_sqrt.default": {
        "count": 1,
        "inputs": "(([T([8008, 2560], f32), T([128, 2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([128, 2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560, 2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([10240, 2560], f32), T([10240], f32), T([2560, 10240], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560], f32), T([2560], f32)],), {})"
    },
    "aten._log_softmax.default": {
        "count": 1,
        "inputs": "((T([2048, 8008], f32), 1, False), {})"
    },
    "aten._log_softmax_backward_data.default": {
        "count": 1,
        "inputs": "((T([2048, 8008], f32), T([2048, 8008], f32), 1, f32), {})"
    },
    "aten._scaled_dot_product_efficient_attention.default": {
        "count": 24,
        "inputs": "((T([16, 32, 128, 80], f32), T([16, 32, 128, 80], f32), T([16, 32, 128, 80], f32), None, True, 0.0, True), {'scale': 0.11180339887498948})"
    },
    "aten._scaled_dot_product_efficient_attention_backward.default": {
        "count": 24,
        "inputs": "((T([16, 32, 128, 80], f32, stride=(327680, 80, 2560, 1)), T([16, 32, 128, 80], f32), T([16, 32, 128, 80], f32), T([16, 32, 128, 80], f32), None, T([16, 32, 128, 80], f32, stride=(327680, 80, 2560, 1)), T([16, 32, 128], f32), T([], i64), T([], i64), 0.0, [True, True, True, False], True), {'scale': 0.11180339887498948})"
    },
    "aten._unsafe_view.default": {
        "count": 1,
        "inputs": "((T([2048, 8008], f32), [16, 128, 8008]), {})"
    },
    "aten.add.Tensor": {
        "count": 2,
        "inputs": "((T([8008, 2560], f32), T([8008, 2560], f32)), {})"
    },
    "aten.addmm.default": {
        "count": 26,
        "inputs": "((T([2560], f32), T([2048, 10240], f32), T([10240, 2560], f32, stride=(1, 10240))), {})"
    },
    "aten.all.default": {
        "count": 1,
        "inputs": "((T([16, 128], b8),), {})"
    },
    "aten.any.default": {
        "count": 1,
        "inputs": "((T([16, 2], b8),), {})"
    },
    "aten.embedding.default": {
        "count": 2,
        "inputs": "((T([128, 2560], f32), T([128], i64)), {})"
    },
    "aten.embedding_dense_backward.default": {
        "count": 2,
        "inputs": "((T([16, 128, 2560], f32), T([16, 128], i64), 8008, 0, False), {})"
    },
    "aten.eq.Scalar": {
        "count": 1,
        "inputs": "((T([16, 128], f32), 1), {})"
    },
    "aten.gelu.default": {
        "count": 26,
        "inputs": "((T([16, 128, 10240], f32),), {})"
    },
    "aten.gelu_backward.default": {
        "count": 26,
        "inputs": "((T([16, 128, 10240], f32), T([16, 128, 10240], f32)), {})"
    },
    "aten.index.Tensor": {
        "count": 1,
        "inputs": "((T([16, 128], i64), [None, T([2], i64)]), {})"
    },
    "aten.lt.Scalar": {
        "count": 26,
        "inputs": "((T([], f32), 0.0), {})"
    },
    "aten.mm.default": {
        "count": 200,
        "inputs": "((T([2560, 2048], f32, stride=(1, 2560)), T([2048, 2560], f32)), {})"
    },
    "aten.mul.Tensor": {
        "count": 4,
        "inputs": "((T([16, 128, 2560], f32), 1.0), {})"
    },
    "aten.native_dropout.default": {
        "count": 78,
        "inputs": "((T([16, 128, 2560], f32), 0.1, True), {})"
    },
    "aten.native_dropout_backward.default": {
        "count": 78,
        "inputs": "((T([16, 128, 2560], f32), T([16, 128, 2560], b8), 1.1111111111111112), {})"
    },
    "aten.native_layer_norm.default": {
        "count": 78,
        "inputs": "((T([16, 128, 2560], f32), [2560], T([2560], f32), T([2560], f32), 1e-05), {})"
    },
    "aten.native_layer_norm_backward.default": {
        "count": 78,
        "inputs": "((T([16, 128, 2560], f32), T([16, 128, 2560], f32), [2560], T([16, 128, 1], f32), T([16, 128, 1], f32), T([2560], f32), T([2560], f32), [True, True, True]), {})"
    },
    "aten.nll_loss_backward.default": {
        "count": 1,
        "inputs": "((T([], f32), T([2048, 8008], f32), T([2048], i64), None, 1, -100, T([], f32)), {})"
    },
    "aten.nll_loss_forward.default": {
        "count": 1,
        "inputs": "((T([2048, 8008], f32), T([2048], i64), None, 1, -100), {})"
    },
    "aten.sum.dim_IntList": {
        "count": 2,
        "inputs": "((T([16, 128, 2560], f32), [0], True), {})"
    }
}